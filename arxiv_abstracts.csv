Number,Abstract
1,"  Essence Framework EF aims at addressing the core problems of software
engineering SE and its practices
"
2,"  There is no doubt that Search Engines are playing a great role in Internet
usage. But all the top search engines Google, Yahoo and Bing are having a
critical flaw called ""Openness of a Search Engine"". An Internet user should be
allowed to get the search results only when requested through Search engine's
web page but the user must not be allowed to get the search results when
requested through any web page that does not belong to the Search Engine. Only
results of a search engine should be available to the Internet user but not the
Search Engine. This paper explains the critical flaw called ""Openness of Search
Engine"" with a case study on top 3 search engines 'Google', 'Yahoo' and 'Bing'.
This paper conducts an attack based test using J2EE framework and proves that
'Google' passed the test and it strongly protects its Critical Search System,
where 'Yahoo' and 'Bing' are failed to protect their Search Engines. But
previously 'Google' also had other high severity issues with the Openness of
search engine; this paper reveals those issues also. Finally this paper appeals
strongly to the all top Search Engines to fix their critical flaws of ""Openness
of Search Engine"".
"
3,"  Over the past three years we have built a practice-oriented, bachelor level,
educational programme for software engineers to specialize as AI engineers. The
experience with this programme and the practical assignments our students
execute in industry has given us valuable insights on the profession of AI
engineer. In this paper we discuss our programme and the lessons learned for
industry and research.
"
4,"  Game engines help developers create video games and avoid duplication of code
and effort, like frameworks for traditional software systems. In this paper, we
explore open-source game engines along three perspectives: literature, code,
and human. First, we explore and summarise the academic literature on game
engines. Second, we compare the characteristics of the 282 most popular engines
and the 282 most popular frameworks in GitHub. Finally, we survey 124 engine
developers about their experience with the development of their engines. We
report that: (1) Game engines are not well-studied in software-engineering
research with few studies having engines as object of research. (2) Open-source
game engines are slightly larger in terms of size and complexity and less
popular and engaging than traditional frameworks. Their programming languages
differ greatly from frameworks. Engine projects have shorter histories with
less releases. (3) Developers perceive game engines as different from
traditional frameworks. Generally, they build game engines to (a) better
control the environment and source code, (b) learn about game engines, and (c)
develop specific games. We conclude that open-source game engines have
differences compared to traditional open-source frameworks although this
differences do not demand special treatments.
"
5,"  Database systems are becoming increasingly multi-engine. In particular, a
main-memory database engine may coexist with a traditional storage-centric
engine in a system to support various applications. It is desirable to allow
applications to access data in both engines using cross-engine transactions.
But existing systems are either only designed for single-engine accesses, or
impose many restrictions by limiting cross-engine transactions to certain
isolation levels and table operations. The result is inadequate cross-engine
support in terms of correctness, performance and programmability.
  This paper describes Skeena, a holistic approach to cross-engine
transactions. We propose a lightweight snapshot tracking structure and an
atomic commit protocol to efficiently ensure correctness and support various
isolation levels. Evaluation results show that Skeena maintains high
performance for single-engine transactions and enables cross-engine
transactions which can improve throughput by up to 30x by judiciously placing
tables in different engines.
"
6,"  The exponential growth of information source on the web and in turn
continuing technological progress of searching the information by using tools
like Search Engines gives rise to many problems for the user to know which tool
is best for their query and which tool is not. At this time Metasearch Engine
comes into play by reducing the user burden by dispatching queries to multiple
search engines in parallel and refining the results of these search engines to
give the best out of best by doing superior job on their side. These engines do
not own a database of Web pages rather they send search terms to the databases
maintained by the search engine companies, get back results from all the search
engines queried and then compile the results to be presented to the user. In
this paper, we describe the working of a typical metasearch engine and then
present a comparative study of traditional search engines and metasearch
engines on the basis of different parameters and show how metasearch engines
are better than the other search engines.
"
7,"  A heat engine operating on the basis of the Carnot cycle is considered, where
the mechanical work performed is dissipated within the engine at the
temperature of the warmer isotherm and the resulting heat is added to the
engine together with an external heat input. The resulting work performed by
the engine per cycle is increased at the expense of dissipated work produced in
the previous cycle. It is shown that such a dissipative heat engine is
thermodynamically inconsistent violating the first and second laws of
thermodynamics. The existing physical models employing the dissipative heat
engine concept, in particular, the heat engine model of hurricane development,
are physically invalid.
"
8,"  SEMAT/OMG Essence provides a powerful Language and a Kernel for describing
software development processes. How can it be tweaked to apply it to systems
engineering methods description? We must harmonize Essence and various systems
engineering standards in order to provide a more formal system approach to
obtaining a Systems Engineering Essence. In this paper, an approach of using
Essence for systems engineering is presented. In this approach we partly
modified a Kernel only within engineering solution area of concerns and
completely preserved Language as an excellent situational method engineering
foundation.
"
9,"  Keyword search engines are essential elements of large information spaces.
The largest information space is the Web, and keyword search engines play
crucial role there. The advent of keyword search engines has provided a quantum
leap in the development of the Web. Since then, the Web has continued to
evolve, and keyword search systems have proven inadequate. A new quantum leap
in the development of keyword search engines is needed. This quantum leap can
be provided with more intellectual keyword search engines. The increased
intelligence of such keyword search engines can be achieved through a
combination of keyword search engines and expert systems. The paper reveals how
it can be done.
"
10,"  Background: Risk-taking is prevalent in a host of activities performed by
software engineers on a daily basis, yet there is scant research on it. Aims
and Method: We study if software engineers' risk-taking is affected by framing
effects and by software engineers' personality. To this end, we perform a
survey experiment with 124 software engineers. Results: We find that framing
substantially affects their risk-taking. None of the ""Big Five"" personality
traits are related to risk-taking in software engineers after correcting for
multiple testing. Conclusions: Software engineers and their managers must be
aware of framing effects and account for them properly.
"
11,"  We discuss the role of non-ideal measurements within the context of
measurement engines by contrasting examples of measurement engines which have
the same work output but with varying amounts of entanglement. Accounting for
the cost of resetting, correlating the engine to a pointer state and also the
cost of cooling the pointer state, we show that for a given work output,
thermally correlated engines can outperform corresponding entanglement engines.
We also show that the optimal efficiency of the thermally correlated
measurement engine is achieved with a higher temperature pointer than the
pointer temperature of the optimal entanglement engine.
"
12,"  The top-down approach of engineering software integration is considered in
this parer. A set of advantages of this approach are presented, by examples.
All examples are supplied by open source code.
"
13,"  This short papers discusses the issues of teaching cloud computing from a
software engineering rather than a business perspective. It discusses what
topics might be covered in a senior course on cloud software engineering.
"
14,"  Background: Academic search engines (i.e., digital libraries and indexers)
play an increasingly important role in systematic reviews however these engines
do not seem to effectively support such reviews, e.g., researchers confront
usability issues with the engines when conducting their searches. Aims: To
investigate whether the usability issues are bugs (i.e., faults in the search
engines) or constraints, and to provide recommendations to search-engine
providers and researchers on how to tackle these issues. Method: Using
snowball-sampling from tertiary studies, we identify a set of 621 secondary
studies in software engineering. By physically re-attempting the searches for
all of these 621 studies, we effectively conduct regression testing for 42
search engines. Results: We identify 13 bugs for eight engines, and also
identify other constraints. We provide recommendations for tackling these
issues. Conclusions: There is still a considerable gap between the search-needs
of researchers and the usability of academic search engines. It is not clear
whether search-engine developers are aware of this gap. Also, the evaluation,
by academics, of academic search engines has not kept pace with the
development, by search-engine providers, of those search engines. Thus, the gap
between evaluation and development makes it harder to properly understand the
gap between the search-needs of researchers and search-features of the search
engines.
"
15,"  This paper investigates the composition of search engine results pages. We
define what elements the most popular web search engines use on their results
pages (e.g., organic results, advertisements, shortcuts) and to which degree
they are used for popular vs. rare queries. Therefore, we send 500 queries of
both types to the major search engines Google, Yahoo, Live.com and Ask. We
count how often the different elements are used by the individual engines. In
total, our study is based on 42,758 elements. Findings include that search
engines use quite different approaches to results pages composition and
therefore, the user gets to see quite different results sets depending on the
search engine and search query used. Organic results still play the major role
in the results pages, but different shortcuts are of some importance, too.
Regarding the frequency of certain host within the results sets, we find that
all search engines show Wikipedia results quite often, while other hosts shown
depend on the search engine used. Both Google and Yahoo prefer results from
their own offerings (such as YouTube or Yahoo Answers). Since we used the .com
interfaces of the search engines, results may not be valid for other
country-specific interfaces.
"
16,"  Security engineering in the software lifecycle aims at protecting information
and systems to guarantee confidentiality, integrity, and availability. As
security engineering matures and the number of research papers grows, there is
an increasing need for papers that summarize results and provide an overview of
the area. A systematic mapping study ""maps"" a research area by classifying
papers to identify which topics are well-studied and which need additional
study. Therefore, systematic mapping studies are becoming increasingly
important in security engineering. This chapter provides methodological support
for systematic mapping studies in security engineering based on examples from
published security engineering papers. Because security engineering is similar
to software engineering in that it bridges research and practice, researchers
can use the same basic systematic mapping process, as follows: (1) study
planning, (2) searching for studies, (3) study selection, (4) study quality
assessment, (5) data extraction, (6) data classification, (7) data analysis,
and (8) reporting of results. We use published mapping studies to describe the
tailoring of this process for security engineering. In addition to guidance on
how to perform systematic mapping studies in security engineering, this chapter
should increase awareness in the security engineering community of the need for
additional mapping studies.
"
17,"  We catalog and describe Google's key software engineering practices.
"
18,"  Social engineering has posed a serious threat to cyberspace security. To
protect against social engineering attacks, a fundamental work is to know what
constitutes social engineering. This paper first develops a domain ontology of
social engineering in cybersecurity and conducts ontology evaluation by its
knowledge graph application. The domain ontology defines 11 concepts of core
entities that significantly constitute or affect social engineering domain,
together with 22 kinds of relations describing how these entities related to
each other. It provides a formal and explicit knowledge schema to understand,
analyze, reuse and share domain knowledge of social engineering. Furthermore,
this paper builds a knowledge graph based on 15 social engineering attack
incidents and scenarios. 7 knowledge graph application examples (in 6 analysis
patterns) demonstrate that the ontology together with knowledge graph is useful
to 1) understand and analyze social engineering attack scenario and incident,
2) find the top ranked social engineering threat elements (e.g. the most
exploited human vulnerabilities and most used attack mediums), 3) find
potential social engineering threats to victims, 4) find potential targets for
social engineering attackers, 5) find potential attack paths from specific
attacker to specific target, and 6) analyze the same origin attacks.
"
19,"  This paper represents preliminary work in identifying the foundation for the
discipline of Software Engineering and discovering the links between the
domains of Software Engineering and Information Technology (IT). Our research
utilized IEEE Transactions on Software Engineering (IEEE-TSE), ACM Transactions
on Software Engineering and Methodology (ACM-TOSEM), Automated Software
Engineering (ASE), the International Conference on Software Engineering(ICSE),
and other related journal publication in the software engineering domain to
address our research questions. We explored existing frameworks and described
the need for software engineering as an academic discipline. We went further to
clarify the distinction difference between Software Engineering and Computer
Science. Through this efforts we contribute to an understanding of how evidence
from IT research can be used to improve Software Engineering as a discipline.
"
20,"  This systematic literature review aims to investigate the impact of
artificial intelligence (AI) on the labour force in software engineering, with
a particular focus on the skills needed for future software engineers, the
impact of AI on the demand for software engineering skills, and the future of
work for software engineers. The review identified 42 relevant publications
through a comprehensive search strategy and analysed their findings. The
results indicate that future software engineers will need to be competent in
programming and have soft skills such as problem-solving and interpersonal
communication. AI will have a significant impact on the software engineering
workforce, with the potential to automate many jobs currently done by software
engineers. The role of a software engineer is changing and will continue to
change in the future, with AI-assisted software development posing challenges
for the software engineering profession. The review suggests that the software
engineering profession must adapt to the changing landscape to remain relevant
and effective in the future.
"
21,"  By treating data and models as the source code, Foundation Models (FMs)
become a new type of software. Mirroring the concept of software crisis, the
increasing complexity of FMs making FM crisis a tangible concern in the coming
decade, appealing for new theories and methodologies from the field of software
engineering. In this paper, we outline our vision of introducing Foundation
Model (FM) engineering, a strategic response to the anticipated FM crisis with
principled engineering methodologies. FM engineering aims to mitigate potential
issues in FM development and application through the introduction of
declarative, automated, and unified programming interfaces for both data and
model management, reducing the complexities involved in working with FMs by
providing a more structured and intuitive process for developers. Through the
establishment of FM engineering, we aim to provide a robust, automated, and
extensible framework that addresses the imminent challenges, and discovering
new research opportunities for the software engineering field.
"
22,"  Digital Engineering, the digital transformation of engineering to leverage
digital technologies, is coming globally. This paper explores digital systems
engineering, which aims at developing theory, methods, models, and tools to
support the emerging digital engineering. A critical task is to digitalize
engineering artifacts, thus enabling information sharing across platform,
across life cycle, and across domains. We identify significant challenges and
enabling digital technologies; analyze the transition from traditional
engineering to digital engineering; define core concepts, including
""digitalization"", ""unique identification"", ""digitalized artifacts"", ""digital
augmentation"", and others; present a big picture of digital systems engineering
in four levels: vision, strategy, action, and foundation; briefly discuss each
of main areas of research issues. Digitalization enables fast infusing and
leveraging novel digital technologies; unique identification enables
information traceability and accountability in engineering lifecycle;
provenance enables tracing dependency relations among engineering artifacts;
supporting model reproducibility and replicability; helping with
trustworthiness evaluation of digital engineering artifacts.
"
23,"  We present a principal-agent model of a one-shot, shallow, systems
engineering process. The process is one-shot in the sense that decisions are
made during one time step and that they are final. The term shallow refers to a
one-layer hierarchy of the process. Specifically, we assume that the systems
engineer has already decomposed the problem in subsystems, and that each
subsystem is assigned to a different subsystem engineer. Each subsystem
engineer works independently to maximize their own expected payoff. The goal of
the systems engineer is to maximize the system-level payoff by incentivizing
the subsystem engineers. We restrict our attention to requirement-based
system-level payoffs, i.e., the systems engineer makes a profit only if all the
design requirements are met. We illustrate the model using the design of an
Earth-orbiting satellite system where the systems engineer determines the
optimum incentive structures and requirements for two subsystems: the
propulsion subsystem and the power subsystem. The model enables the analysis of
a systems engineer's decisions about optimal passed-down requirements and
incentives for sub-system engineers under different levels of task difficulty
and associated costs. Sample results, for the case of risk-neutral systems and
subsystems engineers, show that it is not always in the best interest of the
systems engineer to pass down the true requirements. As expected, the model
predicts that for small to moderate task uncertainties the optimal requirements
are higher than the true ones, effectively eliminating the probability of
failure for the systems engineer. In contrast, the model predicts that for
large task uncertainties the optimal requirements should be smaller than the
true ones in order to lure the subsystem engineers into participation.
"
24,"  In this position paper (1) we discuss two particular aspects of Systems of
Systems, i.e., variability and evolution. (2) We argue that concepts from
Product Line Engineering and Software Evolution are relevant to Systems of
Systems Engineering. (3) Conversely, concepts from Systems of Systems
Engineering can be helpful in Product Line Engineering and Software Evolution.
Hence, we argue that an exchange of concepts between the disciplines would be
beneficial.
"
25,"  We retrospect three abstract models for heat engines which include a classic
abstract model in textbook of thermal physics, a primary abstract model for
finite-time heat engines, and a refined abstract model for finite-time heat
engines. The detailed models of heat engines in literature of finite-time
thermodynamics may be mapped into the refined abstract model. The future
developments based on the refined abstract model are also surveyed.
"
26,"  In this work, we introduce the concept of the fractional quantum heat engine.
We examine the space-fractional quantum Szilard heat engine as an example to
show that the space-fractional quantum heat engines can produce higher
efficiency than the conventional quantum heat engines.
"
27,"  Reverse engineering has been a standard practice in the hardware community
for some time. It has only been within the last ten years that reverse
engineering, or ""program comprehension"", has grown into the current
sub-discipline of software engineering. Traditional software engineering is
primarily focused on the development and design of new software. However, most
programmers work on software that other people have designed and developed. Up
to 50% of a software maintainers time can be spent determining the intent of
source code. The growing demand to reevaluate and reimplement legacy software
systems, brought on by the proliferation of clientserver and World Wide Web
technologies, has underscored the need for reverse engineering tools and
techniques. This paper introduces the terminology of reverse engineering and
gives some of the obstacles that make reverse engineering difficult. Although
reverse engineering remains heavily dependent on the human component, a number
of automated tools are presented that aid the reverse engineer.
"
28,"  On 4 January 2007 the author published the article Wireless Transfer of
Electricity in Outer Space in http://arxiv.org wherein he offered and
researched a new revolutionary method of transferring electric energy in space.
In that same article, he offered a new engine which produces a large thrust
without throwing away large amounts of reaction mass (unlike the conventional
rocket engine).
  In the current article, the author develops the theory of this kind of
impulse engine and computes a sample project which shows the big possibilities
opened by this new AB-Space Engine. The AB-Space Engine gets the energy from
ground-mounted power; a planet electric station can transfer electricity up to
1000 millions (and more) of kilometers by plasma wires. Author shows that
AB-Space Engine can produce thrust of 10 tons (and more). That can accelerate a
space ship to some thousands of kilometers/second. AB-Space Engine has a
staggering specific impulse owing to the very small mass expended. The AB-Space
Engine reacts not by expulsion of its own mass (unlike rocket engine) but
against the mass of its planet of origin (located perhaps a thousand of
millions of kilometers away) through the magnetic field of its plasma cable.
For creating this plasma cable the AB-Space Engine spends only some kg of
hydrogen.
"
29,"  For heat engines working between two heat baths, functionality is often
conditioned on a set of fixed constraints such as given internal structure of
the engine and given temperatures for the baths. It is, however, important to
devise heat engines which can function adaptively, in particular when the
engine is a quantum system and the baths are subject to fluctuations. Here we
study a model for an adaptive quantum heat engine whose heat baths can have
variable temperatures. We obtain conditions under which such an engine can
still operate. Moreover, we propose an enhancement of the heat engine by
coupling it with an appropriate controller which changes the internal structure
of the engine. Interestingly, we prove that this enhanced engine can always
operate and we also obtain conditions for maximum power extraction from this
engine for all temperatures of the heat baths.
"
30,"  Sound event detection (SED) is an active area of audio research that aims to
detect the temporal occurrence of sounds. In this paper, we apply SED to engine
fault detection by introducing a multimodal SED framework that detects
fine-grained engine faults of automobile engines using audio and
accelerometer-recorded vibration. We first introduce the problem of engine
fault SED on a dataset collected from a large variety of vehicles with
expertly-labeled engine fault sound events. Next, we propose a SED model to
temporally detect ten fine-grained engine faults that occur within vehicle
engines and further explore a pretraining strategy using a large-scale
weakly-labeled engine fault dataset. Through multiple evaluations, we show our
proposed framework is able to effectively detect engine fault sound events.
Finally, we investigate the interaction and characteristics of each modality
and show that fusing features from audio and vibration improves overall engine
fault SED capabilities.
"
31,"  This book consists of the chapters describing novel approaches to integrating
fault tolerance into software development process. They cover a wide range of
topics focusing on fault tolerance during the different phases of the software
development, software engineering techniques for verification and validation of
fault tolerance means, and languages for supporting fault tolerance
specification and implementation. Accordingly, the book is structured into the
following three parts: Part A: Fault tolerance engineering: from requirements
to code; Part B: Verification and validation of fault tolerant systems; Part C:
Languages and Tools for engineering fault tolerant systems.
"
32,"  The use of conceptual models to foster requirements engineering has been
proposed and evaluated as beneficial for several decades. For instance,
goal-oriented requirements engineering or the specification of scenarios are
commonly done using conceptual models. Bringing such model-based requirements
engineering approaches into industrial practice typically requires industrial
training. In this paper, we report lessons learned from a training program for
teaching industry professionals model-based requirements engineering.
Particularly, we as educators and learners report experiences from designing
the training program, conducting the actual training, and applying the
instructed material in our day-to-day work. From these findings we provide
guidelines for educators designing requirements engineering courses for
industry professionals.
"
33,"  In empirical software engineering, benchmarks can be used for comparing
different methods, techniques and tools. However, the recent ACM SIGSOFT
Empirical Standards for Software Engineering Research do not include an
explicit checklist for benchmarking. In this paper, we discuss benchmarks for
software performance and scalability evaluation as example research areas in
software engineering, relate benchmarks to some other empirical research
methods, and discuss the requirements on benchmarks that may constitute the
basis for a checklist of a benchmarking standard for empirical software
engineering research.
"
34,"  Quantum software engineering (QSE) is receiving increasing attention, as
evidenced by increasing publications on topics, e.g., quantum software
modeling, testing, and debugging. However, in the literature, quantum software
requirements engineering (QSRE) is still a software engineering area that is
relatively less investigated. To this end, in this paper, we provide an initial
set of thoughts about how requirements engineering for quantum software might
differ from that for classical software after making an effort to map classical
requirements classifications (e.g., functional and extra-functional
requirements) into the context of quantum software. Moreover, we provide
discussions on various aspects of QSRE that deserve attention from the quantum
software engineering community.
"
35,"  Participatory citizen platforms are innovative solutions to digitally better
engage citizens in policy-making and deliberative democracy in general.
Although these platforms have been used also in an engineering context, thus
far, there is no existing work for connecting the platforms to requirements
engineering. The present paper fills this notable gap. In addition to
discussing the platforms in conjunction with requirements engineering, the
paper elaborates potential advantages and disadvantages, thus paving the way
for a future pilot study in a software engineering context. With these
engineering tenets, the paper also contributes to the research of large
socio-technical software systems in a public sector context, including their
implementation and governance.
"
36,"  Reverse engineering is a complex process essential to software-security tasks
such as vulnerability discovery and malware analysis. Significant research and
engineering effort has gone into developing tools to support reverse engineers.
However, little work has been done to understand the way reverse engineers
think when analyzing programs, leaving tool developers to make interface design
decisions based only on intuition.
  This paper takes a first step toward a better understanding of reverse
engineers' processes, with the goal of producing insights for improving
interaction design for reverse engineering tools. We present the results of a
semi-structured, observational interview study of reverse engineers (N=16).
Each observation investigated the questions reverse engineers ask as they probe
a program, how they answer these questions, and the decisions they make
throughout the reverse engineering process. From the interview responses, we
distill a model of the reverse engineering process, divided into three phases:
overview, sub-component scanning, and focused experimentation. Each analysis
phase's results feed the next as reverse engineers' mental representations
become more concrete. We find that reverse engineers typically use static
methods in the first two phases, but dynamic methods in the final phase, with
experience playing large, but varying, roles in each phase. % and the role of
experience varies between phases. Based on these results, we provide five
interaction design guidelines for reverse engineering tools.
"
37,"  We report on the study of student difficulties regarding heat engine in the
context of Stirling cycle within upper-division undergraduate thermal physics
course. An in-class test about a Stirling engine with a regenerator was taken
by three classes, and the students were asked to perform one of the most basic
activities---calculate the efficiency of the heat engine. Our data suggest that
quite a few students have not developed a robust conceptual understanding of
basic engineering knowledge of the heat engine, including the function of the
regenerator and the influence of piston movements on the heat and work involved
in the engine. Most notably, although the science error ratios of the three
classes were similar ($\sim$10\%), the engineering error ratios of the three
classes were high (above 50\%), and the class that was given a simple tutorial
of engineering knowledge of heat engine exhibited significantly smaller
engineering error ratio by about 20\% than the other two classes. In addition,
both the written answers and post-test interviews show that most of the
students can only associate Carnot's theorem with Carnot cycle, but not with
other reversible cycles working between two heat reservoirs, probably because
no enough cycles except Carnot cycle were covered in the traditional
Thermodynamics textbook. Our results suggest that both scientific and
engineering knowledge are important and should be included in instructional
approaches, especially in the Thermodynamics course taught in the countries and
regions with a tradition of not paying much attention to experimental education
or engineering training.
"
38,"  Heat engines and information engines have each historically served as
motivating examples for the development of thermodynamics. While these two
types of systems are typically thought of as two separate kinds of machines,
recent empirical studies of specific systems have hinted at possible
connections between the two. Inspired by molecular machines in the cellular
environment, which in many cases have separate components in contact with
distinct sources of fluctuations, we study bipartite heat engines. We show that
a bipartite heat engine can only produce net output work by acting as an
information engine. Conversely, information engines can only extract more work
than the work consumed to power them if they have access to different sources
of fluctuations, i.e., act as heat engines. We illustrate these findings first
through an analogy to economics and a cyclically controlled 2D ideal gas. We
then explore two analytically tractable model systems in more detail: a
Brownian-gyrator heat engine which we show can be reinterpreted as a
feedback-cooling information engine, and a quantum-dot information engine which
can be reinterpreted as a thermoelectric heat engine. Our results suggest
design principles for both heat engines and information engines at the
nanoscale, and ultimately imply constraints on how free-energy transduction is
carried out in biological molecular machines.
"
39,"  We explore the performance of three- and two-stroke heat engines with a
qutrit working substance in charging two-level quantum batteries. We first
classify the heat engines into two groups depending on their working methods.
The first type of heat engine, the sequential engine, evolves through three
distinct strokes, viz., heat, work, and cold strokes. In the second kind of
engine, a simultaneous engine, all the three events are made to occur
simultaneously in one stroke, followed by an additional stroke to thermalize
the working substance, i.e., the qutrit with a cold bath. We further categorize
these two types of engines into two classes depending on the type of
interaction between the working substance and the baths or the battery, viz.,
out-and-out engines, where the system bath interactions can invoke population
transitions between any two energy levels of the qutrit, and fragmented
engines, where only selective transition is materialized. Considering these
four types of heat engines, we analyze the work done by the working substance,
the percentage of charge accumulated by the quantum battery, and the efficiency
of the engine. By drawing a comparison between the charging schemes, we find
that the sequential out-and-out heat engines are most advantageous, providing
unit efficiency and transferring the most energy to the quantum battery, in the
optimal case. The ranking of the benefits obtained from the other three engines
depends on the quantity of interest.
"
40,"  We have analyzed manufacturing data from several different semiconductor
manufacturing plants, using decision tree induction software called Q-YIELD.
The software generates rules for predicting when a given product should be
rejected. The rules are intended to help the process engineers improve the
yield of the product, by helping them to discover the causes of rejection.
Experience with Q-YIELD has taught us the importance of data engineering --
preprocessing the data to enable or facilitate decision tree induction. This
paper discusses some of the data engineering problems we have encountered with
semiconductor manufacturing data. The paper deals with two broad classes of
problems: engineering the features in a feature vector representation and
engineering the definition of the target concept (the classes). Manufacturing
process data present special problems for feature engineering, since the data
have multiple levels of granularity (detail, resolution). Engineering the
target concept is important, due to our focus on understanding the past, as
opposed to the more common focus in machine learning on predicting the future.
"
41,"  This paper deals with the arrow of complexification of engineering. We claim
that the complexification of engineering consists in (a) that shift throughout
which engineering becomes a science; thus it ceases to be a (mere) praxis or
profession; (b) becoming a science, engineering can be considered as one of the
sciences of complexity. In reality, the complexification of engineering is the
process by which engineering can be studied, achieved and understood in terms
of knowledge, and not of goods and services any longer. Complex engineered
systems and bio-inspired engineering are so far the two expressions of a
complex engineering.
"
42,"  COTS-based development is a component reuse approach promising to reduce
costs and risks, and ensure higher quality. The growing availability of COTS
components on the Web has concretized the possibility of achieving these
objectives. In this multitude, a recurrent problem is the identification of the
COTS components that best satisfy the user requirements. Finding an adequate
COTS component implies searching among heterogeneous descriptions of the
components within a broad search space. Thus, the use of search engines is
required to make more efficient the COTS components identification. In this
paper, we investigate, theoretically and empirically, the COTS component search
performance of eight software component search engines, nine semantic search
engines and a conventional search engine (Google). Our empirical evaluation is
conducted with respect to precision and normalized recall. We defined ten
queries for the assessed search engines. These queries were carefully selected
to evaluate the capability of each search engine for handling COTS component
identification.
"
43,"  Historically two stroke engine petrol engines find wide applications in
construction of two wheelers worldwide, however due to stringent environmental
laws enforced universally; these engines are fading in numbers. In spite of the
tight norms, internationally these engines are still used in agriculture,
gensets etc. Several designs of variable compression ratio two stroke engines
are commercially available for analysis purpose. In this present investigation
a novel method of changing the compression ratio is proposed, applied, studied
and analyzed. The clearance volume of the engine is altered by introducing a
metal plug into the combustion chamber. This modification permitted to have
four different values of clearance value keeping in view of the studies
required the work is brought out as two sections. The first part deals with the
design, modification, engine fabrication and testing at different compression
ratios for the study of performance of the engine. The second part deals with
the combustion in engine using FLUENT and analysis of exhaust gases. Increase
in compression ratio improves fuel efficiency and power output. The novelty in
this work is to permit the two wheeler driver to change the compression ratio.
"
44,"  Purpose - To test major Web search engines on their performance on
navigational queries, i.e. searches for homepages. Design/methodology/approach
- 100 real user queries are posed to six search engines (Google, Yahoo, MSN,
Ask, Seekport, and Exalead). Users described the desired pages, and the results
position of these is recorded. Measured success N and mean reciprocal rank are
calculated. Findings - Performance of the major search engines Google, Yahoo,
and MSN is best, with around 90 percent of queries answered correctly. Ask and
Exalead perform worse but receive good scores as well. Research
limitations/implications - All queries were in German, and the German-language
interfaces of the search engines were used. Therefore, the results are only
valid for German queries. Practical implications - When designing a search
engine to compete with the major search engines, care should be taken on the
performance on navigational queries. Users can be influenced easily in their
quality ratings of search engines based on this performance. Originality/value
- This study systematically compares the major search engines on navigational
queries and compares the findings with studies on the retrieval effectiveness
of the engines on informational queries. Paper type - research paper
"
45,"  Database query engines use pull-based or push-based approaches to avoid the
materialization of data across query operators. In this paper, we study these
two types of query engines in depth and present the limitations and advantages
of each engine. Similarly, the programming languages community has developed
loop fusion techniques to remove intermediate collections in the context of
collection programming. We draw parallels between the DB and PL communities by
demonstrating the connection between pipelined query engines and loop fusion
techniques. Based on this connection, we propose a new type of pull-based
engine, inspired by a loop fusion technique, which combines the benefits of
both approaches. Then we experimentally evaluate the various engines, in the
context of query compilation, for the first time in a fair environment,
eliminating the biasing impact of ancillary optimizations that have
traditionally only been used with one of the approaches. We show that for
realistic analytical workloads, there is no considerable advantage for either
form of pipelined query engine, as opposed to what recent research suggests.
Also, by using microbenchmarks we show that our proposed engine dominates the
existing engines by combining the benefits of both.
"
46,"  Software Engineering as an industry is highly diverse in terms of development
methods and practices. Practitioners employ a myriad of methods and tend to
further tailor them by e.g. omitting some practices or rules. This diversity in
development methods poses a challenge for software engineering education,
creating a gap between education and industry. General theories such as the
Essence Theory of Software Engineering can help bridge this gap by presenting
software engineering students with higher-level frameworks upon which to build
an understanding of software engineering methods and practical project work. In
this paper, we study Essence in an educational setting to evaluate its
usefulness for software engineering students while also investigating barriers
to its adoption in this context. To this end, we observe 102 student teams
utilize Essence in practical software engineering projects during a semester
long, project-based course.
"
47,"  Development of scientific and engineering software is usually different and
could be more challenging than the development of conventional enterprise
software. The authors were involved in a technology-transfer project between
academia and industry which focused on engineering, development and testing of
a software for optimization of pumping energy costs for oil pipelines. Experts
with different skillsets (mechanical, power and software engineers) were
involved. Given the complex nature of the software (a sophisticated underlying
optimization model) and having experts from different fields, there were
challenges in various software engineering aspects of the software system
(e.g., requirements and testing). We report our observations and experience in
addressing those challenges during our technology-transfer project, and aim to
add to the existing body of experience and evidence in engineering of
scientific and engineering software. We believe that our observations,
experience and lessons learnt could be useful for other researchers and
practitioners in engineering of other scientific and engineering software
systems.
"
48,"  There have been growing uses of semantic networks in the past decade, such as
leveraging large-scale pre-trained graph knowledge databases for various
natural language processing (NLP) tasks in engineering design research.
Therefore, the paper provides a survey of the research that has employed
semantic networks in the engineering design research community. The survey
reveals that engineering design researchers have primarily relied on WordNet,
ConceptNet, and other common-sense semantic network databases trained on
non-engineering data sources to develop methods or tools for engineering
design. Meanwhile, there are emerging efforts to mine large scale technical
publication and patent databases to construct engineering-contextualized
semantic network databases, e.g., B-Link and TechNet, to support NLP in
engineering design. On this basis, we recommend future research directions for
the construction and applications of engineering-related semantic networks in
engineering design research and practice.
"
49,"  Student evaluations of teaching (SET) are commonly used in universities for
assessing teaching quality. However, previous literature shows that in software
engineering students tend to rate certain topics higher than others: In
particular students tend to value programming and software construction over
software design, software engineering models and methods, or soft skills. We
hypothesize that these biases also play a role in SET responses collected from
students. The objective of this study is to investigate how the topic of a
software engineering course affects the SET metrics. We accomplish this by
performing multilevel regression analysis on SET data collected in a software
engineering programme. We analyzed a total of 1295 student evaluations from 46
university courses in a Finnish university. The results of the analysis
verifies that the student course evaluations exhibit similar biases as
distinguished by previous software engineering education research. The type of
the course can predict a higher SET rating. In our dataset, software
construction and programming courses received higher SET ratings compared to
courses on software engineering processes, models, and methods.
"
50,"  Software start-ups are new companies aiming to launch an innovative product
to mass markets fast with minimal resources. However, most start-ups fail
before realizing their potential. Poor software engineering, among other
factors, could be a significant contributor to the challenges that start-ups
experience. Little is known about the engineering context in start-up
companies. On the surface, start-ups are characterized by uncertainty, high
risk, and minimal resources. However, such a characterization isn't granular
enough to support identification of specific engineering challenges and to
devise start-up-specific engineering practices. The first step toward an
understanding of software engineering in start-ups is the definition of a
Start-Up Context Map - a taxonomy of engineering practices, environment
factors, and goals influencing the engineering process. This map aims to
support further research on the field and serve as an engineering decision
support tool for start-ups. This article is part of a theme issue on Process
Improvement.
"
51,"  Large Language Model (LLM)-based applications are graduating from research
prototypes to products serving millions of users, influencing how people write
and consume information. A prominent example is the appearance of Answer
Engines: LLM-based generative search engines supplanting traditional search
engines. Answer engines not only retrieve relevant sources to a user query but
synthesize answer summaries that cite the sources. To understand these systems'
limitations, we first conducted a study with 21 participants, evaluating
interactions with answer vs. traditional search engines and identifying 16
answer engine limitations. From these insights, we propose 16 answer engine
design recommendations, linked to 8 metrics. An automated evaluation
implementing our metrics on three popular engines (You.com, Perplexity.ai,
BingChat) quantifies common limitations (e.g., frequent hallucination,
inaccurate citation) and unique features (e.g., variation in answer
confidence), with results mirroring user study insights. We release our Answer
Engine Evaluation benchmark (AEE) to facilitate transparent evaluation of
LLM-based applications.
"
52,"  Context: Start-up companies have become an important supplier of innovation
and software-intensive products. The flexibility and reactiveness of start-ups
enables fast development and launch of innovative products. However, a majority
of software start-up companies fail before achieving any success. Among other
factors, poor software engineering could be a significant contributor to the
challenges experienced by start-ups. However, the state-of-practice of software
engineering in start-ups, as well as the utilization of state-of-the-art is
largely an unexplored area. Objective: In this study we investigate how
software engineering is applied in start-up context with a focus to identify
key knowledge areas and opportunities for further research. Method: We perform
a multi-vocal exploratory study of 88 start-up experience reports. We develop a
custom taxonomy to categorize the reported software engineering practices and
their interrelation with business aspects, and apply qualitative data analysis
to explore influences and dependencies between the knowledge areas. Results: We
identify the most frequently reported software engineering (requirements
engineering, software design and quality) and business aspect (vision and
strategy development) knowledge areas, and illustrate their relationships. We
also present a summary of how relevant software engineering knowledge areas are
implemented in start-ups and identify potentially useful practices for adoption
in start-ups. Conclusions: The results enable a more focused research on
engineering practices in start-ups. We conclude that most engineering
challenges in start-ups stem from inadequacies in requirements engineering.
Many promising practices to address specific engineering challenges exists,
however more research on adaptation of established practices, and validation of
new start-up specific practices is needed.
"
53,"  Nowadays, engineers need to tackle many unprecedented challenges that are
often complex, and, most importantly, cannot be exhaustively compartmentalized
into a single engineering discipline. In other words, most engineering problems
need to be solved from a multidisciplinary approach. However, conventional
engineering programs usually adopt pedagogical approaches specifically tailored
to traditional, niched engineering disciplines, which become increasingly
deviated from the industry needs as those programs are typically designed and
taught by instructors with highly specialized engineering training and
credentials. To reduce the gap, more multidisciplinary engineering programs
emerge by systematically stretching across all engineering fibers, and
challenge the sub-optimal traditional pedagogy crowded in engineering
classrooms. To further advance future-oriented pedagogy, in this work, we
hypothesized neuro-induced linkages between how cognitively different learners
are and how the linkages would affect learners in the knowledge acquisition
process. We situate the neuro-induced linkages in the context of
multidisciplinary engineering education and propose possible pedagogical
approaches to actualize the implications of this conceptual framework. Our
study, based on the innovative concept of brain fingerprint, would serve as a
pioneer model to theorize key components of learner-centered multidisciplinary
engineering pedagogy which centers on the key question: how do we motivate
engineering students of different backgrounds from a neuro-inspired
perspective?
"
54,"  A cyclic thermodynamic heat engine runs most efficiently if it is reversible.
Carnot constructed such a reversible heat engine by combining adiabatic and
isothermal processes for a system containing an ideal gas. Here, we present an
example of a cyclic engine based on a single quantum-mechanical particle
confined to a potential well. The efficiency of this engine is shown to equal
the Carnot efficiency because quantum dynamics is reversible. The quantum heat
engine has a cycle consisting of adiabatic and isothermal quantum processes
that are close analogues of the corresponding classical processes.
"
55,"  We introduce a new quantum heat engine, in which the working medium is a
quantum system with a discrete level and a continuum. Net work done by this
engine is calculated and discussed. The results show that this quantum heat
engine behaves like the two-level quantum heat engine in both the
high-temperature and the low-temperature limits, but it operates differently in
temperatures between them. The efficiency of this quantum heat engine is also
presented and discussed.
"
56,"  The World Wide Web (WWW) allows the people to share the information (data)
from the large database repositories globally. The amount of information grows
billions of databases. We need to search the information will specialize tools
known generically search engine. There are many of search engines available
today, retrieving meaningful information is difficult. However to overcome this
problem in search engines to retrieve meaningful information intelligently,
semantic web technologies are playing a major role. In this paper we present
survey on the search engine generations and the role of search engines in
intelligent web and semantic search technologies.
"
57,"  We present a simple web search engine for indexing and searching html
documents using python programming language. Because python is well known for
its simple syntax and strong support for main operating systems, we hope it
will be beneficial for learning information retrieval techniques, especially
web search engine technology.
"
58,"  Web search engines apply a variety of ranking signals to achieve user
satisfaction, i.e., results pages that provide the best-possible results to the
user. While these ranking signals implicitly consider credibility (e.g., by
measuring popularity), explicit measures of credibility are not applied. In
this chapter, credibility in Web search engines is discussed in a broad
context: credibility as a measure for including documents in a search engine's
index, credibility as a ranking signal, credibility in the context of universal
search results, and the possibility of using credibility as an explicit measure
for ranking purposes. It is found that while search engines-at least to a
certain extent-show credible results to their users, there is no fully
integrated credibility framework for Web search engines.
"
59,"  The cloud computing paradigm is being adopted by many organizations in
different application domains as it is cost effective and offers a virtually
unlimited pool of resources. Engineering critical systems can benefit from
clouds in attaining all dependability means: fault tolerance, fault prevention,
fault removal and fault forecasting. Our research aims to investigate the
potential of supporting engineering of dependable software systems with cloud
computing and proposes an open, extensible, and elastic cloud-based software
engineering workflow system which represents and executes software processes to
improve collaboration, reliability and quality assurance, and automation in
software projects.
"
60,"  This paper presents a newly-developed robotics programming course and reports
the initial results of software engineering education in robotics context.
Robotics programming, as a multidisciplinary course, puts equal emphasis on
software engineering and robotics. It teaches students proper software
engineering -- in particular, modularity and documentation -- by having them
implement four core robotics algorithms for an educational robot. To evaluate
the effect of software engineering education in robotics context, we analyze
pre- and post-class survey data and the four assignments our students completed
for the course. The analysis suggests that the students acquired an
understanding of software engineering techniques and principles.
"
61,"  Number of published scholarly articles is growing exponentially. To tackle
this information overload, researchers are increasingly depending on niche
academic search engines. Recent works have shown that two major general web
search engines: Google and Bing, have high level of agreement in their top
search results. In contrast, we show that various academic search engines have
low degree of agreement among themselves. We performed experiments using 2500
queries over four academic search engines. We observe that overlap in search
result sets of any pair of academic search engines is significantly low and in
most of the cases the search result sets are mutually exclusive. We also
discuss implications of this low overlap.
"
62,"  Systems Engineering (SE) is the set of processes and documentation required
for successfully realising large-scale engineering projects, but the classical
approach is not a good fit for software-intensive projects, especially when the
needs of the different stakeholders are not fully known from the beginning, and
requirement priorities might change. The SKA is the ultimate software-enabled
telescope, with enormous amounts of computing hardware and software required to
perform its data reduction. We give an overview of the system and software
engineering processes in the SKA1 development, and the tension between
classical and agile SE.
"
63,"  We investigate the heat engine defined via black hole with momentum
relaxation, which is introduced by massless axion fields. We first study the
extended thermodynamical properties of the black hole and then apply it to
define a heat engine. Then, we analyze how the momentum relaxation affects the
efficiency of the heat engine in the limit of high temperature. We find that
depending on the schemes of specified parameters in the engine circle, the
influence of momentum relaxation on the efficiency of the heat engine behaves
novelly, and the qualitative behaviors do depend on the dimension of the
gravity theory.
"
64,"  The Fluidyne is a two-part hot-air engine, which has the peculiarity that
both its power piston and displacer are liquids. Both parts operate in tandem
with the common working gas (air) transferring energy from the displacer to the
piston side, from which work is extracted. We describe analytically the
thermodynamics of the Fluidyne engine using the approach previously developed
for the Stirling engine. We obtain explicit expressions for the amplitude of
the power piston movement and for the working gas temperatures and pressure as
functions of the engine parameters. We also study numerically the power and
efficiency of the engine in terms of the phase shift between the motions of
piston and displacer.
"
65,"  Society today cannot run without software and by extension, without Software
Engineering. Since this discipline emerged in 1968, practitioners have learned
valuable lessons that have contributed to current practices. Some have become
outdated but many are still relevant and widely used. From the personal and
incomplete perspective of the authors, this paper not only reviews the major
milestones and areas of interest in the Software Engineering timeline helping
software engineers to appreciate the state of things, but also tries to give
some insights into the trends that this complex engineering will see in the
near future.
"
66,"  The paper introduces RPSE, Reification as a Paradigm of Software Engineering,
and enumerates the most important theoretical and practical problems of the
development and application of this paradigm. Main thesis: Software engineering
is the reification (materialization of ideas) via the transformation of mental
models into code executed on computers . Within the proposed paradigm: 1.All
basic processes of software engineering are concrete variants (implementations)
of the process of constructing chains of mental and material models I1,
I2,..In, M1, M2, ..Mm. The last most specific model in this chain is, as a
rule, program code. 2.The essence of software engineering is the construction
of such chains. 3.All main issues of optimizing the development, its cost, and
quality can be reduced to the optimization of construction of the corresponding
chain of models.
"
67,"  In industry as well as education as well as academics we see a growing need
for knowledge on how to apply machine learning in software applications. With
the educational programme ICT & AI at Fontys UAS we had to find an answer to
the question: ""How should we educate software engineers to become AI
engineers?"" This paper describes our educational programme, the open source
tools we use, and the literature it is based on. After three years of
experience, we present our lessons learned for both educational institutions
and software engineers in practice.
"
68,"  Artificial Intelligence/Machine Learning techniques have been widely used in
software engineering to improve developer productivity, the quality of software
systems, and decision-making. However, such AI/ML models for software
engineering are still impractical, not explainable, and not actionable. These
concerns often hinder the adoption of AI/ML models in software engineering
practices. In this article, we first highlight the need for explainable AI in
software engineering. Then, we summarize three successful case studies on how
explainable AI techniques can be used to address the aforementioned challenges
by making software defect prediction models more practical, explainable, and
actionable.
"
69,"  The rapid advances in technology over the last decade have significantly
altered the nature of engineering knowledge and skills required in the modern
industries. In response to the changing professional requirements, engineering
institutions have updated their curriculum and pedagogical practices. However,
most of the changes in the curriculum have been focused on the core engineering
courses without much consideration for the auxiliary courses in mathematics and
sciences. In this paper, we aim to propose a new, augmented mathematics
curriculum aimed at meeting the requirements of the modern, technology-based
engineering workplace. The proposed updates require minimal resources and can
be seamlessly integrated into the existing curriculum.
"
70,"  We propose a variation of the classical Szilard engine that uses a porous
piston. Such an engine requires neither information about the position of the
particle, nor the removal and subsequent insertion of the piston when resetting
the engine to continue doing work by lifting a mass against a gravitational
field. Though the engine operates in contact with a single thermal reservoir,
the reset mechanism acts as a second reservoir, dissipating energy when a mass
that has been lifted by the engine is removed to initiate a new operation
cycle.
"
71,"  Aiming at the current problems of theory-oriented,practice-light,and lack of
innovation ability in the teaching of postgraduate software engineering
courses,a multi-stage feedback teaching mode for software engineering
postgraduates based on competition project_driven is proposed. The model is
driven by the competition project,and implementing suggestions are given in
terms of stage allocation of software engineering course tasks and ability
cultivation,competition case design and process evaluation improvement,etc.
Through the implementation of this teaching mode,students enthusiasm and
initiative are expected to be stimulated,and the overall development of
students professional skills and comprehension ability would be improved to
meet the demand of society for software engineering technical talents.
"
72,"  Large Language Models (LLMs) have shown great potential in solving complex
problems in various fields, including oil and gas engineering and other
industrial engineering disciplines like factory automation, PLC programming
etc. However, automatic identification of strong and weak solutions to
fundamental physics equations governing several industrial processes remain a
challenging task. This paper identifies the limitation of current LLM
approaches, particularly ChatGPT in selected practical problems native to oil
and gas engineering but not exclusively. The performance of ChatGPT in solving
complex problems in oil and gas engineering is discussed and the areas where
LLMs are most effective are presented.
"
73,"  This study explores strategies to improve engine efficiency through
innovative materials, design concepts, and alternative energy sources. It
highlights the use of nanomaterials and surface engineering to create
hydrophobic or other types of surfaces for harnessing entropy-gradient forces.
Additionally, it discusses the potential of information-burning engines and
quantum-based propulsion systems. The manuscript emphasizes the
multidisciplinary nature of engine research and its potential to contribute to
a sustainable and efficient future.
"
74,"  Knowledge engineering is a discipline that focuses on the creation and
maintenance of processes that generate and apply knowledge. Traditionally,
knowledge engineering approaches have focused on knowledge expressed in formal
languages. The emergence of large language models and their capabilities to
effectively work with natural language, in its broadest sense, raises questions
about the foundations and practice of knowledge engineering. Here, we outline
the potential role of LLMs in knowledge engineering, identifying two central
directions: 1) creating hybrid neuro-symbolic knowledge systems; and 2)
enabling knowledge engineering in natural language. Additionally, we formulate
key open research questions to tackle these directions.
"
75,"  Evidence-based practice (EBP) in software engineering aims to improve
decision-making in software development by complementing practitioners'
professional judgment with high-quality evidence from research. We believe the
use of EBP techniques may be helpful for research software engineers (RSEs) in
their work to bring software engineering best practices to scientific software
development. In this study, we present an experience report on the use of a
particular EBP technique, rapid reviews, within an RSE team at Sandia National
Laboratories, and present practical recommendations for how to address barriers
to EBP adoption within the RSE community.
"
76,"  The landscape of software engineering is evolving rapidly amidst the digital
transformation and the ascendancy of AI, leading to profound shifts in the role
and responsibilities of software engineers. This evolution encompasses both
immediate changes, such as the adoption of Language Model-based approaches in
coding, and deeper shifts driven by the profound societal and environmental
impacts of technology. Despite the urgency, there persists a lag in adapting to
these evolving roles. By fostering ongoing discourse and reflection on Software
Engineers role and responsibilities, this vision paper seeks to cultivate a new
generation of software engineers equipped to navigate the complexities and
ethical considerations inherent in their evolving profession.
"
77,"  I summarize the main characteristics of AGNs in nearby galaxies and present a
physical picture of their central engines.
"
78,"  An ancient engineering firm worked successfully in the construction of one of
the Seven Wonders of the Ancient World. The engineers used inclined planes,
bags of sand and shafts of columns and architraves as wheels and axels.
"
79,"  The performance of one type (Carnot) of Internal Combustion Engine (ICE)
cycle is analyzed within the framework of thermodynamic free energies. ICE
performance is different from that of an External Combustion Engine (ECE) which
is dictated by Carnot's rule.
"
80,"  We analyze the efficiency of thermal engines (either quantum or classical)
working with a single heat reservoir like atmosphere. The engine first gets an
energy intake, which can be done in arbitrary non-equilibrium way e.g.
combustion of fuel. Then the engine performs the work and returns to the
initial state. We distinguish two general classes of engines where the working
body first equilibrates within itself and then performs the work (ergodic
engine) or when it performs the work before equilibrating (non-ergodic engine).
We show that in both cases the second law of thermodynamics limits their
efficiency. For ergodic engines we find a rigorous upper bound for the
efficiency, which is strictly smaller than the equivalent Carnot efficiency.
I.e. the Carnot efficiency can be never achieved in single reservoir heat
engines. For non-ergodic engines the efficiency can be higher and can exceed
the equilibrium Carnot bound. By extending the fundamental thermodynamic
relation to nonequilibrium processes, we find a rigorous thermodynamic bound
for the efficiency of both ergodic and non-ergodic engines and show that it is
given by the relative entropy of the non-equilibrium and initial equilibrium
distributions.These results suggest a new general strategy for designing more
efficient engines. We illustrate our ideas by using simple examples.
"
81,"  There are two types of high-performance graph processing engines: low- and
high-level engines. Low-level engines (Galois, PowerGraph, Snap) provide
optimized data structures and computation models but require users to write
low-level imperative code, hence ensuring that efficiency is the burden of the
user. In high-level engines, users write in query languages like datalog
(SociaLite) or SQL (Grail). High-level engines are easier to use but are orders
of magnitude slower than the low-level graph engines. We present EmptyHeaded, a
high-level engine that supports a rich datalog-like query language and achieves
performance comparable to that of low-level engines. At the core of
EmptyHeaded's design is a new class of join algorithms that satisfy strong
theoretical guarantees but have thus far not achieved performance comparable to
that of specialized graph processing engines. To achieve high performance,
EmptyHeaded introduces a new join engine architecture, including a novel query
optimizer and data layouts that leverage single-instruction multiple data
(SIMD) parallelism. With this architecture, EmptyHeaded outperforms high-level
approaches by up to three orders of magnitude on graph pattern queries,
PageRank, and Single-Source Shortest Paths (SSSP) and is an order of magnitude
faster than many low-level baselines. We validate that EmptyHeaded competes
with the best-of-breed low-level engine (Galois), achieving comparable
performance on PageRank and at most 3x worse performance on SSSP.
"
82,"  Information engines can use structured environments as a resource to generate
work by randomizing ordered inputs and leveraging the increased Shannon entropy
to transfer energy from a thermal reservoir to a work reservoir. We give a
broadly applicable expression for the work production of an information engine,
generally modeled as a memoryful channel that communicates inputs to outputs as
it interacts with an evolving environment. The expression establishes that an
information engine must have more than one memory state in order to leverage
input environment correlations. To emphasize this functioning, we designed an
information engine powered solely by temporal correlations and not by
statistical biases, as employed by previous engines. Key to this is the
engine's ability to synchronize---the engine automatically returns to a desired
dynamical phase when thrown into an unwanted, dissipative phase by corruptions
in the input---that is, by unanticipated environmental fluctuations. This
self-correcting mechanism is robust up to a critical level of corruption,
beyond which the system fails to act as an engine. We give explicit analytical
expressions for both work and critical corruption level and summarize engine
performance via a thermodynamic-function phase diagram over engine control
parameters. The results reveal a new thermodynamic mechanism based on
nonergodicity that underlies error correction as it operates to support
resilient engineered and biological systems.
"
83,"  Engineering Thermodynamics has been the core course of many science and
engineering majors at home and abroad, including energy and power, mechanical
engineering, civil engineering, aerospace, cryogenic refrigeration, food
engineering, chemical engineering, and environmental engineering, among which
gas power cycle is one of the important contents. However, many Engineering
Thermodynamics textbooks at home and abroad focus only on evaluating the
thermal efficiency of gas power cycle, while the important concept of specific
cycle net work is ignored. Taking an ideal Otto cycle and an ideal Brayton as
examples, the optimum compression ratio (or the pressure ratio) and the maximum
specific cycle net work are analyzed and determined. The ideal Otto and the
ideal Brayton cycles, and also other gas power cycles, are concluded that the
operation under the optimum compression/pressure ratio of the engine, instead
of under the higher efficiency, is more economic and more reasonable. We
concluded that the two very important concepts, i.e., the maximum specific
cycle net work and the optimum compression (or pressure) ratio for the gas
power cycles, should be emphasized in the Engineering Thermodynamics teaching
process and the latter revised or the newly edited textbooks, in order to
better guide the engineering applications. In the end, general T-s diagram is
proposed for the gas power cycles.
"
84,"  Proceedings of the 5th International Workshop on Software Engineering Methods
in Spreadsheets (SEMS'18), held on October 1st, 2018, in Lisbon, Portugal, and
co-located with the 2018 IEEE Symposium on Visual Languages and Human-Centric
Computing (VL/HCC).
"
85,"  The purpose of this report is to research the topic called Social Engineering
in Cyber Security and present the explanation of the meaning, concepts,
techniques, and security countermeasures of Social Engineering based on factual
academic research.
"
86,"  Systems engineering processes coordinate the effort of different individuals
to generate a product satisfying certain requirements. As the involved
engineers are self-interested agents, the goals at different levels of the
systems engineering hierarchy may deviate from the system-level goals which may
cause budget and schedule overruns. Therefore, there is a need of a systems
engineering theory that accounts for the human behavior in systems design. To
this end, the objective of this paper is to develop and analyze a
principal-agent model of a one-shot (single iteration), shallow (one level of
hierarchy) systems engineering process. We assume that the systems engineer
maximizes the expected utility of the system, while the subsystem engineers
seek to maximize their expected utilities. Furthermore, the systems engineer is
unable to monitor the effort of the subsystem engineer and may not have a
complete information about their types or the complexity of the design task.
However, the systems engineer can incentivize the subsystem engineers by
proposing specific contracts. To obtain an optimal incentive, we pose and solve
numerically a bi-level optimization problem. Through extensive simulations, we
study the optimal incentives arising from different system-level value
functions under various combinations of effort costs, problem-solving skills,
and task complexities.
"
87,"  Attackers increasingly, and with high success rates, use social engineering
techniques to circumvent second factor authentication (2FA) technologies,
compromise user accounts and sidestep fraud detection technologies. We
introduce a social engineering resistant approach that we term device-aware
2FA, to replace the use of traditional security codes.
"
88,"  Digital engineering transformation is a crucial process for the engineering
paradigm shifts in the fourth industrial revolution (4IR), and artificial
intelligence (AI) is a critical enabling technology in digital engineering
transformation. This article discusses the following research questions: What
are the fundamental changes in the 4IR? More specifically, what are the
fundamental changes in engineering? What is digital engineering? What are the
main uncertainties there? What is trustworthy AI? Why is it important today?
What are emerging engineering paradigm shifts in the 4IR? What is the
relationship between the data-intensive paradigm and digital engineering
transformation? What should we do for digitalization? From investigating the
pattern of industrial revolutions, this article argues that ubiquitous machine
intelligence (uMI) is the defining power brought by the 4IR. Digitalization is
a condition to leverage ubiquitous machine intelligence. Digital engineering
transformation towards Industry 4.0 has three essential building blocks:
digitalization of engineering, leveraging ubiquitous machine intelligence, and
building digital trust and security. The engineering design community at large
is facing an excellent opportunity to bring the new capabilities of ubiquitous
machine intelligence and trustworthy AI principles, as well as digital trust,
together in various engineering systems design to ensure the trustworthiness of
systems in Industry 4.0.
"
89,"  Recently, there has been a national push to use machine learning (ML) and
artificial intelligence (AI) to advance engineering techniques in all
disciplines ranging from advanced fracture mechanics in materials science to
soil and water quality testing in the civil and environmental engineering
fields. Using AI, specifically machine learning, engineers can automate and
decrease the processing or human labeling time while maintaining statistical
repeatability via trained models and sensors. Edge Impulse has designed an
open-source TinyML-enabled Arduino education tool kit for engineering
disciplines. This paper discusses the various applications and approaches
engineering educators have taken to utilize ML toolkits in the classroom. We
provide in-depth implementation guides and associated learning outcomes focused
on the Environmental Engineering Classroom. We discuss five specific examples
of four standard Environmental Engineering courses for freshman and
junior-level engineering. There are currently few programs in the nation that
utilize machine learning toolkits to prepare the next generation of ML and
AI-educated engineers for industry and academic careers. This paper will guide
educators to design and implement ML/AI into engineering curricula (without a
specific AI or ML focus within the course) using simple, cheap, and open-source
tools and technological aid from an online platform in collaboration with Edge
Impulse.
"
90,"  For decades, much software engineering research has been dedicated to
devising automated solutions aimed at enhancing developer productivity and
elevating software quality. The past two decades have witnessed an unparalleled
surge in the development of intelligent solutions tailored for software
engineering tasks. This momentum established the Artificial Intelligence for
Software Engineering (AI4SE) area, which has swiftly become one of the most
active and popular areas within the software engineering field.
  This Future of Software Engineering (FoSE) paper navigates through several
focal points. It commences with a succinct introduction and history of AI4SE.
Thereafter, it underscores the core challenges inherent to AI4SE, particularly
highlighting the need to realize trustworthy and synergistic AI4SE.
Progressing, the paper paints a vision for the potential leaps achievable if
AI4SE's key challenges are surmounted, suggesting a transition towards Software
Engineering 2.0. Two strategic roadmaps are then laid out: one centered on
realizing trustworthy AI4SE, and the other on fostering synergistic AI4SE.
While this paper may not serve as a conclusive guide, its intent is to catalyze
further progress. The ultimate aspiration is to position AI4SE as a linchpin in
redefining the horizons of software engineering, propelling us toward Software
Engineering 2.0.
"
91,"  Heat engines are considered a valuable resource for modern society. The
development of these systems leads to the production of heat engines with high
efficiency despite their small size, called quantum heat engines. Among these,
the quantum Otto cycle which is considered a fundamental thermodynamic cycle in
classical heat engines, has also found applications in the realm of quantum
heat engines. In this paper, we consider three InAs quantum dots as a working
substance, which allows the engine to operate at very small scales, in the
presence of an electric field, and the Forster mechanism, which describes the
transfer of energy between quantum dots and affects thus the engine's behavior.
In this regard, we study the behavior of the work performed by the engine and
the entanglement in the system as the Forster parameter is varied. We find that
the work performed by the engine is affected by the Forster interaction and the
electric field and that the entanglement in the system also changed as the
Forster parameter was changed. Finally, we study the influence of entanglement
on the work performed by the engine. We find and discuss the intricate relation
between the entanglement and the performance of the engine.
"
92,"  Engineering a sustainable world requires to consider various systems that
interact with each other. These systems include ecological systems, economical
systems, social systems and tech-nical systems. They are loosely coupled,
geographically distributed, evolve permanently and generate emergent behavior.
As these are characteristics of systems of systems (SoS), we discuss the
engi-neering of a sustainable world from a SoS engineering perspective. We
studied SoS engineering in context of a research project, which aims at
political recommendations and a research roadmap for engineering dynamic SoS.
The project included an exhaustive literature review, interviews and work-shops
with representatives from industry and academia from different application
domains. Based on these results and observations, we will discuss how suitable
the current state-of-the-art in SoS engi-neering is in order to engineer
sustainability. Sustainability was a major driver for SoS engineering in all
domains, but we argue that the current scope of SoS engineering is too limited
in order to engineer sustainability. Further, we argue that mastering dynamics
in this larger scope is essential to engineer sustainability and that this is
accompanied by dynamic adaptation of technological SoS.
"
93,"  In this paper, we focus on the \emph{virtual world}, a cyberspace where
people can live in. An ideal virtual world shares great similarity with our
real world. One of the crucial aspects is its evolving nature, reflected by
individuals' capability to grow and thereby influence the objective world. Such
dynamics is unpredictable and beyond the reach of existing systems. For this,
we propose a special engine called \textbf{\emph{Delta-Engine}} to drive this
virtual world. $\Delta$ associates the world's evolution to the engine's
scalability. It consists of a base engine and a neural proxy. The base engine
programs the prototype of the virtual world; given a trigger, the neural proxy
generates new snippets on the base engine through \emph{incremental
prediction}. This paper presents a full-stack introduction to the delta-engine.
The key feature of the delta-engine is its scalability to unknown elements
within the world, Technically, it derives from the prefect co-work of the
neural proxy and the base engine, and the alignment with high-quality data. We
introduce an engine-oriented fine-tuning method that embeds the base engine
into the proxy. We then discuss the human-LLM collaborative design to produce
novel and interesting data efficiently. Eventually, we propose three evaluation
principles to comprehensively assess the performance of a delta engine: naive
evaluation, incremental evaluation, and adversarial evaluation.
"
94,"  A quantum model of a heat engine resembling the Otto cycle is employed to
explore strategies to suppress frictional losses. These losses are caused by
the inability of the engine's working medium to follow adiabatically the change
in the Hamiltonian during the expansion and compression stages. By adding
external noise to the engine, frictional losses can be suppressed.
"
95,"  We construct the smallest possible self contained heat engines; one composed
of only two qubits, the other of only a single qutrit. The engines are
self-contained as they do not require external sources of work and/or control.
They are able to produce work which is used to continuously lift a weight.
Despite the dimension of the engine being small, it is still able to operate at
the Carnot efficiency.
"
96,"  This article attempts to describe specific mental techniques that are related
to resolving very complex tasks in software engineering. This subject may be
familiar to some software specialists to different extents; however, there is
currently no common consensus and popular terminology for this subject area. In
this article, the area is charted from a practical usability perspective.
  This article also proposes to treat software engineering itself as research
on human thinking because software is meant to simulate thinking.
"
97,"  In this paper we study the relationship between query and search engine by
exploring the adaptive properties based on a simple search engine. We used set
theory and utilized the words and terms for defining singleton space of event
in a search engine model, and then provided the inclusion between one singleton
to another.
"
98,"  Even though there are more development to improving the Quality of Service
and requirement engineering in web services yet there is a big scarcity for its
related standardization in day to day progress leading to vast needs in its
area. Also in web service environment it always has been a big challenge to
raise the standard of Quality of Service in requirement engineering analysis.
"
99,"  Typical heat engines exhibit a kind of homotypy: The heat exchanges between a
cyclic heat engine and its two heat reservoirs abide by the same function type;
the forward and backward flows of an autonomous heat engine also conform to the
same function type. This homotypy mathematically reflects in the existence of
hidden symmetries for heat engines. The heat exchanges between the cyclic heat
engine and its two reservoirs are dual under the joint transformation of parity
inversion and time-reversal operation. Similarly, the forward and backward
flows in the autonomous heat engine are also dual under the parity inversion.
With the consideration of these hidden symmetries, we derive a generic
nonlinear constitutive relation up to the quadratic order for tight-coupling
cyclic heat engines and that for tight-coupling autonomous heat engines,
respectively.
"
100,"  In this paper, we present our vision of the integration of human factors
engineering into the software development process. The aim of this approach is
to improve the quality of software and to deal with human errors in a
systematic way.
"
101,"  Machine learning models, such as neural networks, decision trees, random
forests, and gradient boosting machines, accept a feature vector, and provide a
prediction. These models learn in a supervised fashion where we provide feature
vectors mapped to the expected output. It is common practice to engineer new
features from the provided feature set. Such engineered features will either
augment or replace portions of the existing feature vector. These engineered
features are essentially calculated fields based on the values of the other
features.
  Engineering such features is primarily a manual, time-consuming task.
Additionally, each type of model will respond differently to different kinds of
engineered features. This paper reports empirical research to demonstrate what
kinds of engineered features are best suited to various machine learning model
types. We provide this recommendation by generating several datasets that we
designed to benefit from a particular type of engineered feature. The
experiment demonstrates to what degree the machine learning model can
synthesize the needed feature on its own. If a model can synthesize a planned
feature, it is not necessary to provide that feature. The research demonstrated
that the studied models do indeed perform differently with various types of
engineered features.
"
102,"  In this work we present an account of the status of requirements engineering
in the gaming industry. Recent papers in the area were surveyed.
Characterizations of the gaming industry were deliberated upon by portraying
its relations with the market industry. Some research directions in the area of
requirements engineering in the gaming industry were also mentioned.
"
103,"  This paper discusses the relevance and potential impact of both RFID and
reverse engineering of RFID technology, followed by a discussion of common
protocols and internals of RFID technology. The focus of the paper is on
providing an overview of the different approaches to reverse engineering RFID
technology and possible countermeasures that could limit the potential of such
reverse engineering attempts.
"
104,"  Software engineers working in large projects must navigate complex
information landscapes. Change Impact Analysis (CIA) is a task that relies on
engineers' successful information seeking in databases storing, e.g., source
code, requirements, design descriptions, and test case specifications. Several
previous approaches to support information seeking are task-specific, thus
understanding engineers' seeking behavior in specific tasks is fundamental. We
present an industrial case study on how engineers seek information in CIA, with
a particular focus on traceability and development artifacts that are not
source code. We show that engineers have different information seeking
behavior, and that some do not consider traceability particularly useful when
conducting CIA. Furthermore, we observe a tendency for engineers to prefer less
rigid types of support rather than formal approaches, i.e., engineers value
support that allows flexibility in how to practically conduct CIA. Finally, due
to diverse information seeking behavior, we argue that future CIA support
should embrace individual preferences to identify change impact by empowering
several seeking alternatives, including searching, browsing, and tracing.
"
105,"  In order to build a quantum analog of traditional Carnot engine, a common
choice is replacing the two thermodynamic adiabatic processes with two quantum
mechanical adiabatic processes. In general, such quantum Carnot engine has six
strokes. We analyze the efficiency of such six-stroke quantum Carnot engine in
a perturbative way.
"
106,"  This note highlights the importance of investigating diversity aspects in
combination in empirical research. It draws on the psychological discourse and
suggests why and how software engineering scholars can use the aspect of
diversity in all their research endeavors.
"
107,"  The article discusses the quantitative assessment approach to the innovation
of engineering system components. The validity of the approach is based on the
expert appraisal of the university's electronic information educational
environment components and the measurement of engineering solution innovation
in engineering education. The implementation of batch processing of object
innovation assessments is justified and described.
"
108,"  Software Engineering practitioners work using highly diverse methods and
practices, and general theories in software engineering are lacking. One
attempt at creating a common ground in the area of software engineering
methodologies has been the Essence Theory of Software Engineering, which can be
considered a method-agnostic project management tool for software engineering.
Essence supports the use of any development practices and provides a framework
for building a suitable method for any software engineering context. However,
Essence presently suffers from low practitioner adoption that is partially
considered to be caused by a lack of proper tooling. In this paper, we present
Essencery, a tool for essentializing software engineering methods and practices
using the Essence graphical syntax. Essencery aims to facilitate adoption of
Essence among potential future users. We present an empirical evaluation of the
tool by means of a qualitative, quasi-formal experiment and, based on the
experiment, confirm that the tool is easy to use and useful for its intended
purpose.
"
109,"  Certain solutions of Einstein's equations in anti-de Sitter spacetime can be
engineered, using extended gravitational thermodynamics, to yield `holographic
heat engines', devices that turn heat into useful mechanical work. On the other
hand, there are constructions (both experimental and theoretical) where a
series of operations is performed on a small quantum system, defining what are
known as `quantum heat engines'. We propose that certain holographic heat
engines can be considered models of quantum heat engines, and the possible
fruitfulness of this connection is discussed. Motivated by features of quantum
heat engines that take a quantum system through analogues of certain classic
thermodynamic cycles, some black hole Otto and Diesel cycles are presented and
explored for the first time. In the expected regime of overlap, our Otto
efficiency formulae are of the form exhibited by quantum and classical heat
engines.
"
110,"  Heat engines constitute the major building blocks of modern technologies.
However, conventional heat engines with higher power yield lesser efficiency
and vice versa and respect various power-efficiency trade-off relations. This
is also assumed to be true for the engines operating in the quantum regime.
Here we show that these relations are not fundamental. We introduce quantum
heat engines that deliver maximum power with Carnot efficiency in the one-shot
finite-size regime. These engines are composed of working systems with a finite
number of quantum particles and are restricted to one-shot measurements. The
engines operate in a one-step cycle by letting the working system
simultaneously interact with hot and cold baths via semi-local thermal
operations. By allowing quantum entanglement between its constituents and,
thereby, a coherent transfer of heat from hot to cold baths, the engine
implements the fastest possible reversible state transformation in each cycle,
resulting in maximum power and Carnot efficiency. Finally, we propose a
physically realizable engine using quantum optical systems.
"
111,"  Transformers are the current state-of-the-art of natural language processing
in many domains and are using traction within software engineering research as
well. Such models are pre-trained on large amounts of data, usually from the
general domain. However, we only have a limited understanding regarding the
validity of transformers within the software engineering domain, i.e., how good
such models are at understanding words and sentences within a software
engineering context and how this improves the state-of-the-art. Within this
article, we shed light on this complex, but crucial issue. We compare BERT
transformer models trained with software engineering data with transformers
based on general domain data in multiple dimensions: their vocabulary, their
ability to understand which words are missing, and their performance in
classification tasks. Our results show that for tasks that require
understanding of the software engineering context, pre-training with software
engineering data is valuable, while general domain models are sufficient for
general language understanding, also within the software engineering domain.
"
112,"  Models are fundamentally crucial to many scientific fields, including
software engineering, systems engineering, enterprise modeling, and business
modeling. This paper focuses on diagrammatic conceptual modeling, as opposed to
mathematical or computational models, wherein a conceptual model is a
translation of reality processes into an abstract mechanism that has similar
structure and parallel events of the external processes. Although various
modeling approaches exist, including UML (Unified Modeling Language) in
software engineering and its dialect, SysML (System Modeling Language), in
systems engineering, several difficulties arise in such models, including the
problem of model multiplicity that is related to the lack an integrated view of
structure and behavior. This paper generalizes conceptual modeling to be
applied in organizations at large. According to authorities, the so-called
organization theory portrays organizations as machine-like systems. As a
machine, an organization coordinates its parts to transform inputs into
outputs. Therefore, we synthesize the notion of an organization as a machine
and apply a new modeling methodology called thinging machine (TM) to real
engineering operations. The results show the viability of the TM methodology
serving as a foundation for high-level modelling of systems.
"
113,"  Requirements Engineering (RE) is a key activity in the development of
software systems and is concerned with the identification of the goals of
stakeholders and their elaboration into precise statements of desired services
and behavior. The research describes an Agile Requirements Engineering approach
for re-engineering & changes in existing Brownfield adaptive system. The
approach has few modifications that can be used as a part of SCRUM development
process for re-engineering & changes. The approach illustrates the
re-engineering & changes requirements through introduction of GAP analysis &
requirements structuring & prioritization by creating AS-IS & TO-BE models with
80 / 20 rule. An attempt to close the gap between requirements engineering &
agile methods in form of this approach is provided for practical
implementation.
"
114,"  In this paper we explore the usage of rule engines in a graphical framework
for visualising dynamic access control policies. We use the Drools rule engine
to dynamically compute permissions, following the Category-Based Access Control
metamodel.
"
115,"  The autonomous heat engine is a model system of autonomous nonequilibrium
systems like biological cells, exploiting nonequilibrium flow for operations.
As the Carnot engine has essentially contributed to the equilibrium
thermodynamics, autonomous heat engine is expected to play a critical role in
the challenge of constructing nonequilibrium thermodynamics. However, the high
complexity of the engine involving an intricate coupling among heat, gas flow,
and mechanics has prevented simple modeling. Here, we experimentally
characterized the nonequilibrium dynamics and thermodynamics of a
low-temperature-differential Stirling engine, which is a model autonomous heat
engine. Our experiments demonstrated that the core engine dynamics are
quantitatively described by a minimal dynamical model with only two degrees of
freedom. The model proposes a novel concept that illustrates the engine as a
thermodynamic pendulum driven by a thermodynamic force. This work will open a
new approach to explore the nonequilibrium thermodynamics of autonomous systems
based on a simple dynamical system.
"
116,"  Binary reverse engineering is a challenging task because it often
necessitates reasoning using both domain-specific knowledge (e.g.,
understanding entrypoint idioms common to an ABI) and logical inference (e.g.,
reconstructing interprocedural control flow). To help perform these tasks,
reverse engineers often use toolkits (such as IDA Pro or Ghidra) that allow
them to interactively explicate properties of binaries. We argue that deductive
databases serve as a natural abstraction for interfacing between
visualization-based binary analysis tools and high-performance logical
inference engines that compute facts about binaries. In this paper, we present
a vision for the future in which reverse engineers use a visualization-based
tool to understand binaries while simultaneously querying a logical-inference
engine to perform arbitrarily-complex deductive inference tasks. We call our
vision declarative demand-driven reverse engineering (D^3RE for short), and
sketch a formal semantics whose goal is to mediate interaction between a
logical-inference engine (such Souffle) and a reverse engineering tool. We
describe aprototype tool, d3re, which are using to explore the D^3RE vision.
While still a prototype, we have used d3re to reimplement several common
querying tasks on binaries. Our evaluation demonstrates that d3re enables both
better performance and more succinct implementation of these common RE tasks.
"
117,"  Given the data-intensive and collaborative trend in science, the software
engineering community also pays increasing attention to obtaining valuable and
useful insights from data repositories. Nevertheless, applying data science to
software engineering (e.g., mining software repositories) can be blindfold and
meaningless, if lacking a suitable knowledge architecture (KA). By observing
that software engineering practices are generally recorded through a set of
factors (e.g., programmer capacity, different environmental conditions, etc.)
involved in various software project aspects, we propose a factor-based
hierarchical KA of software engineering to help maximize the value of software
repositories and inspire future software data-driven studies. In particular, it
is the organized factors and their relationships that help guide software
engineering knowledge mining, while the mined knowledge will in turn be
indexed/managed through the relevant factors and their interactions. This paper
explains our idea about the factorial KA and concisely demonstrates a KA
component, i.e. the early-version KA of software product engineering. Once
fully scoped, this proposed KA will supplement the well-known SWEBOK in terms
of both the factor-centric knowledge management and the coverage/implication of
potential software engineering knowledge.
"
118,"  Modern engineering education tends to focus on mathematics and fundamentals,
eschewing critical reflections on technology and the field of engineering. In
this paper, I present an elective engineering course and a 3-lecture module in
an introductory course that emphasize engaging with the social impacts of
technology.
"
119,"  In this paper a functionality taxonomy for document search engines is
proposed. It can be used to assess the features of a search engine, to position
search engines relative to each other, or to select which search engine 'fits'
a certain situation. One is able to identify areas for improvement. During
development, we were guided by the viewpoint of the user. We use the word
`search engine' in the broadest sense possible, including library and web based
(meta) search engines. The taxonomy distinguishes seven functionality areas: an
indexing service, user profiling, query composition, query execution, result
presentation, result refinement, and history keeping. Each of these relates and
provides services to other functionality areas. It can be extended whenever
necessary. To illustrate the validity of our taxonomy, it has been used for
comparing various document search engines existing today (ACM Digital Library,
PiCarta, Copernic, AltaVista, Google, and GuideBeam). It appears that the
functionality aspects covered by our taxonomy can be used for describing these
search engines.
"
120,"  Search engines can be considered as a gate to the world of WEB, and they also
decide what we see for a given search query. Since many people are exposed to
information through search engines, it is fair to expect that search engines
should be neutral; i.e. the returned results must cover all the elements or
aspects of the search topic, and they should be impartial where the results are
returned based on relevance. However, the search engine results are based on
many features and sophisticated algorithms where search neutrality is not
necessarily the focal point. In this work we performed an empirical study on
two popular search engines and analysed the search engine result pages for
controversial topics such as abortion, medical marijuana, and gay marriage. Our
analysis is based on the sentiment in search results to identify their
viewpoint as conservative or liberal. We also propose three sentiment-based
metrics to show the existence of bias as well as to compare viewpoints of the
two search engines. Extensive experiments performed on controversial topics
show that both search engines are biased, moreover they have the same kind of
bias towards a given controversial topic.
"
121,"  Nowadays game engines are imperative for building 3D applications and games.
This is for the reason that the engines appreciably reduce resources for
employing obligatory but intricate utilities. This paper elucidates about a
game engine and its foremost elements. It portrays a number of special kinds of
contemporary game engines by way of their aspects, procedure and deliberates
their stipulations with comparison.
"
122,"  Quantum heat engines form an active field of research due to their potential
applications. There are several phenomena that are unique to the quantum
regime, some of which are known to give these engines an edge over their
classical counterparts. In this work, we focus on the study of one and
two-qubit finite-time Otto engines interacting with squeezed thermal baths, and
discuss their important distinctions as well as the advantage of using the
two-qubit engine. In particular, the two-qubit engine offers an interesting
study of the interplay between the degree of squeezing and that of the
coherence between the two qubits. We find that the two-qubit engine generally
yields higher power than its one-qubit counterpart. The effective temperature
of the squeezed baths can be calculated both for the one and two-qubit engines,
and they tend to show an exponential growth with increase in squeezing
parameters $r_h$ and $r_c$. It is also observed that by tuning the squeezing
parameters, the machine can be made to work either in the engine or in the
refrigerator mode. Additional effects due to the change in the inter-qubit
separation have been studied.
"
123,"  In this third decade of systems engineering in the twenty-first century, it
is important to develop and demonstrate practical methods to exploit
machine-readable models in the engineering of systems. Substantial investment
has been made in languages and modelling tools for developing models. A key
problem is that system architects and engineers work in a multidisciplinary
environment in which models are not the product of any one individual. This
paper provides preliminary results of a formal approach to specify models and
structure preserving transformations between them that support model
synchronization. This is an important area of research and practice in software
engineering. However, it is limited to synchronization at the code level of
systems. This paper leverages previous research of the authors to define a core
fractal for interpretation of concepts into model specifications and
transformation between models. This fractal is used to extend the concept of
synchronization of models to the system level and is demonstrated through a
practical engineering example for an advanced driver assistance system.
"
124,"  We study the optimal performance of an endoreversible quantum dot heat
engine, in which the heat transfer between the system and baths is mediated by
qubits, operating under the conditions of a trade-off objective function known
as maximum efficient power function defined by the product of power and
efficiency of the engine. First, we numerically study the optimization of the
efficient power function for the engine under consideration. Then, we obtain
some analytic results by applying hightemperature limit and compare the
performance of the engine at maximum efficient power functionto the engine
operating in the maximum power regime. We find that the engine operating at
maximum efficient power function produces at least 88.89% of the maximum power
output while at the same time reduces the power loss due to entropy production
by considerable amount. We conclude by studying the stochastic simulations of
the efficiency of the engine in maximum power and maximum efficient power
regime. We find that the engine operating at maximum power is subjected to less
power fluctuations as compared to the on one operating at maximum efficient
power function.
"
125,"  The Continuous software engineering is a collaborative software development
environment which offers the continues development and deployment of quality
software project within short time. The Continuous software engineering
practices are not yet mature enough, and the software organizations hesitate to
adopt it. This study aims: (1) to explore the Continuous software engineering
challenges by conducting systematic literature review (SLR) and to get the
insight of industry experts via questionnaire survey study; (2) to prioritize
the investigated challenges using fuzzy analytical hierarchy process (FAHP).
The study findings provides the set of critical challenges faced by the
software organizations while adopting Continuous software engineering and a
prioritization based taxonomy of the Continuous software engineering
challenges. The application of FAHP is novel in this research area as it
assists in addressing the vagueness of practitioners concerning the influencing
factors of Continuous software engineering. We believe that the finding of this
study will serve as a body of knowledge for real world practitioners and
researchers to revise and develop the new strategies for the successful
implementation of Continuous software engineering practices in the software
industry.
"
126,"  Context: On top of the inherent challenges startup software companies face
applying proper software engineering practices, the non-deterministic nature of
machine learning techniques makes it even more difficult for machine learning
(ML) startups.
  Objective: Therefore, the objective of our study is to understand the whole
picture of software engineering practices followed by ML startups and identify
additional needs.
  Method: To achieve our goal, we conducted a systematic literature review
study on 37 papers published in the last 21 years. We selected papers on both
general software startups and ML startups. We collected data to understand
software engineering (SE) practices in five phases of the software development
life-cycle: requirement engineering, design, development, quality assurance,
and deployment.
  Results: We find some interesting differences in software engineering
practices in ML startups and general software startups. The data management and
model learning phases are the most prominent among them.
  Conclusion: While ML startups face many similar challenges to general
software startups, the additional difficulties of using stochastic ML models
require different strategies in using software engineering practices to produce
high-quality products.
"
127,"  Engineering processes for safety-critical systems describe the steps and
sequence that guide engineers from refining user requirements into executable
code, as well as producing the artifacts, traces, and evidence that the
resulting system is of high quality. Process compliance focuses on ensuring
that the actual engineering work is followed as closely as possible to the
described engineering processes. To this end, temporal constraints describe the
ideal sequence of steps. Checking these process constraints, however, is still
a daunting task that requires a lot of manual work and delivers feedback to
engineers only late in the process. In this paper, we present an automated
constraint checking approach that can incrementally check temporal constraints
across inter-related engineering artifacts upon every artifact change thereby
enabling timely feedback to engineers on process deviations. Temporal
constraints are expressed in the Object Constraint Language (OCL) extended with
operators from Linear Temporal Logic (LTL). We demonstrate the ability of our
approach to support a wide range of higher level temporal patterns. We further
show that for constraints in an industry-derived use case, the average
evaluation time for a single constraint takes around 0.2 milliseconds.
"
128,"  Prompt design and engineering has rapidly become essential for maximizing the
potential of large language models. In this paper, we introduce core concepts,
advanced techniques like Chain-of-Thought and Reflection, and the principles
behind building LLM-based agents. Finally, we provide a survey of tools for
prompt engineers.
"
129,"  This paper discusses the importance of reflective and socially conscious
education in engineering schools, particularly within the EE/CS sector. While
most engineering disciplines have historically aligned themselves with the
demands of the technology industry, the lack of critical examination of
industry practices and their impact on justice, equality, and sustainability is
self-evident. Today, the for-profit engineering/technology companies, some of
which are among the largest in the world, also shape the narrative of
engineering education and research in universities. As engineering graduates
form the largest cohorts within STEM disciplines in Western countries, they
become future professionals who will work, lead, or even establish companies in
this industry. Unfortunately, the curriculum within engineering education often
lacks a deep understanding of social realities, an essential component of a
comprehensive university education. Here we establish this unusual connection
with the industry that has driven engineering higher education for several
decades and its obvious negative impacts to society. We analyse this nexus and
highlight the need for engineering schools to hold a more critical viewpoint.
Given the wealth and power of modern technology companies, particularly in the
ICT domain, questioning their techno-solutionism narrative is essential within
the institutes of higher education.
"
130,"  This paper explores the intricate challenge of understanding and measuring
software engineer behavior. More specifically, we revolve around a central
question: How can we enhance our understanding of software engineer behavior?
Grounded in the nuanced complexities addressed within Behavioral Software
Engineering (BSE), we advocate for holistic methods that integrate quantitative
measures, such as psychometric instruments, and qualitative data from diverse
sources. Furthermore, we delve into the relevance of this challenge within
national and international contexts, highlighting the increasing interest in
understanding software engineer behavior. Real-world initiatives and academic
endeavors are also examined to underscore the potential for advancing this
research agenda and, consequently, refining software engineering practices
based on behavioral aspects. Lastly, this paper addresses different ways to
evaluate the progress of this challenge by leveraging methodological skills
derived from behavioral sciences, ultimately contributing to a deeper
understanding of software engineer behavior and software engineering practices.
"
131,"  The ability of Generative AI (GAI) technology to automatically check,
synthesize and modify software engineering artifacts promises to revolutionize
all aspects of software engineering. Using GAI for software engineering tasks
is consequently one of the most rapidly expanding fields of software
engineering research, with over a hundred LLM-based code models having been
published since 2021. However, the overwhelming majority of existing code
models share a major weakness - they are exclusively trained on the syntactic
facet of software, significantly lowering their trustworthiness in tasks
dependent on software semantics. To address this problem, a new class of
""Morescient"" GAI is needed that is ""aware"" of (i.e., trained on) both the
semantic and static facets of software. This, in turn, will require a new
generation of software observation platforms capable of generating large
quantities of execution observations in a structured and readily analyzable
way. In this paper, we present a vision and roadmap for how such ""Morescient""
GAI models can be engineered, evolved and disseminated according to the
principles of open science.
"
132,"  Game engines are tools to facilitate video game development. They provide
graphics, sound, and physics simulation features, which would have to be
otherwise implemented by developers. Even though essential for modern
commercial video game development, game engines are complex and developers
often struggle to understand their architecture, leading to maintainability and
evolution issues that negatively affect video game productions. In this paper,
we present the Subsystem-Dependency Recovery Approach (SyDRA), which helps game
engine developers understand game engine architecture and therefore make
informed game engine development choices. By applying this approach to 10
open-source game engines, we obtain architectural models that can be used to
compare game engine architectures and identify and solve issues of excessive
coupling and folder nesting. Through a controlled experiment, we show that the
inspection of the architectural models derived from SyDRA enables developers to
complete tasks related to architectural understanding and impact analysis in
less time and with higher correctness than without these models.
"
133,"  This work introduces an innovative program for training the next generation
of software engineers within university settings, addressing the limitations of
traditional software engineering courses. Initial program costs were
significant, totaling $551,420 in direct expenditures to pay for program staff
salaries and benefits over two years. We present a strategy for reducing
overall costs and establishing sustainable funding sources to perpetuate the
program, which has yielded educational, research, professional, and societal
benefits.
"
134,"  Aero-engine fault prediction aims to accurately predict the development trend
of the future state of aero-engines, so as to diagnose faults in advance.
Traditional aero-engine parameter prediction methods mainly use the nonlinear
mapping relationship of time series data but generally ignore the adequate
spatiotemporal features contained in aero-engine data. To this end, we propose
a brain-inspired spike echo state network (Spike-ESN) model for aero-engine
intelligent fault prediction, which is used to effectively capture the
evolution process of aero-engine time series data in the framework of
spatiotemporal dynamics. In the proposed approach, we design a spike input
layer based on Poisson distribution inspired by the spike neural encoding
mechanism of biological neurons, which can extract the useful temporal
characteristics in aero-engine sequence data. Then, the temporal
characteristics are input into a spike reservoir through the current
calculation method of spike accumulation in neurons, which projects the data
into a high-dimensional sparse space. In addition, we use the ridge regression
method to read out the internal state of the spike reservoir. Finally, the
experimental results of aero-engine states prediction demonstrate the
superiority and potential of the proposed method.
"
135,"  Generative LLMs, such as GPT, have the potential to revolutionize
Requirements Engineering (RE) by automating tasks in new ways. This column
explores the novelties and introduces the importance of precise prompts for
effective interactions. Human evaluation and prompt engineering are essential
in leveraging LLM capabilities.
"
136,"  Multimodal GPTs represent a watershed in the interplay between Software
Engineering and Generative Artificial Intelligence. GPT-4 accepts image and
text inputs, rather than simply natural language. We investigate relevant use
cases stemming from these enhanced capabilities of GPT-4. To the best of our
knowledge, no other work has investigated similar use cases involving Software
Engineering tasks carried out via multimodal GPTs prompted with a mix of
diagrams and natural language.
"
137,"  LLMs are transforming software engineering by accelerating development,
reducing complexity, and cutting costs. When fully integrated into the software
lifecycle they will drive design, development and deployment while facilitating
early bug detection, continuous improvement, and rapid resolution of critical
issues. However, trustworthy LLM-driven software engineering requires
addressing multiple challenges such as accuracy, scalability, bias, and
explainability.
"
138,"  A heat engine is a machine which uses the temperature difference between a
hot and a cold reservoir to extract work. Here both reservoirs are quantum
systems and a heat engine is described by a unitary transformation which
decreases the average energy of the bipartite system. On the molecular scale,
the ability of implementing such a unitary heat engine is closely connected to
the ability of performing logical operations and classical computing. This is
shown by several examples:
  (1) The most elementary heat engine is a SWAP-gate acting on 1 hot and 1 cold
two-level systems with different energy gaps.
  (2) An optimal unitary heat engine on a pair of 3-level systems can directly
implement OR and NOT gates, as well as copy operations. The ability to
implement this heat engine on each pair of 3-level systems taken from the hot
and the cold ensemble therefore allows universal classical computation.
  (3) Optimal heat engines operating on one hot and one cold oscillator mode
with different frequencies are able to calculate polynomials and roots
approximately.
  (4) An optimal heat engine acting on 1 hot and n cold 2-level systems with
different level spacings can even solve the NP-complete problem KNAPSACK.
Whereas it is already known that the determination of ground states of
interacting many-particle systems is NP-hard, the optimal heat engine is a
thermodynamic problem which is NP-hard even for n non-interacting spin systems.
This result suggest that there may be complexity-theoretic limitations on the
efficiency of molecular heat engines.
"
139,"  Aiming to study GRB engine duration, we present numerical simulations to
investigate collapsar jets. We consider typical explosion energy ($10^{52}$
erg) but different engine durations, in the widest domain to date from 0.1 to
100 s. We employ an AMR 2D hydrodynamical code. Our results show that engine
duration strongly influences jet nature. We show that the efficiency of
launching and collimating relativistic outflow increases with engine duration,
until the intermediate engine range where it is the highest, past this point to
long engine range, the trend is slightly reversed; we call this point where
acceleration and collimation are the highest ""sweet spot"" ($\sim$10 -- 30 s).
Moreover, jet energy flux shows that variability is also high in this duration
domain. We argue that not all engine durations can produce the collimated,
relativistic and variable long GRB-jets. Considering a typical progenitor and
engine energy, we conclude that the ideal engine duration to reproduce a long
GRB is $\sim$10 -- 30 s, where the launch of relativistic, collimated and
variable jets is favored. We note that this duration domain makes a good link
with Lazzati et al. (2013), which suggested that the bulk of BATSE's long GRBs
is powered by $\sim$10 -- 20 s collapsar engines.
"
140,"  In this paper, we present a robotic prediction agent including a darkforest
Go engine, a fuzzy markup language (FML) assessment engine, an FML-based
decision support engine, and a robot engine for game of Go application. The
knowledge base and rule base of FML assessment engine are constructed by
referring the information from the darkforest Go engine located in NUTN and
OPU, for example, the number of MCTS simulations and winning rate prediction.
The proposed robotic prediction agent first retrieves the database of Go
competition website, and then the FML assessment engine infers the winning
possibility based on the information generated by darkforest Go engine. The
FML-based decision support engine computes the winning possibility based on the
partial game situation inferred by FML assessment engine. Finally, the robot
engine combines with the human-friendly robot partner PALRO, produced by
Fujisoft incorporated, to report the game situation to human Go players.
Experimental results show that the FML-based prediction agent can work
effectively.
"
141,"  Empirical methods like experimentation have become a powerful means to drive
the field of software engineering by creating scientific evidence on software
development, operation, and maintenance, but also by supporting practitioners
in their decision making and learning. Today empirical methods are fully
applied in software engineering. However, they have developed in several
iterations since the 1960s. In this chapter we tell the history of empirical
software engineering and present the evolution of empirical methods in software
engineering in five iterations, i.e., (1) mid-1960s to mid-1970s, (2) mid-1970s
to mid-1980s, (3) mid-1980s to end of the 1990s, (4) the 2000s, and (5) the
2010s. We present the five iterations of the development of empirical software
engineering mainly from a methodological perspective and additionally take key
papers, venues, and books, which are covered in chronological order in a
separate section on recommended further readings, into account. We complement
our presentation of the evolution of empirical software engineering by
presenting the current situation and an outlook in Sect. 4 and the available
books on empirical software engineering. Furthermore, based on the chapters
covered in this book we discuss trends on contemporary empirical methods in
software engineering related to the plurality of research methods, human
factors, data collection and processing, aggregation and synthesis of evidence,
and impact of software engineering research.
"
142,"  Typically, search engines provide query suggestions to assist users in the
search process. Query suggestions are very important for improving users search
experience. However, most query suggestions are based on the user's search
logs, and they can be influenced by infrequently searched queries. Depending on
the user's query, query suggestions can be ineffective in global search engines
but effective in a domestic search engine. Conversely, it can be effective in
global engines and weak in domestic engines. In addition, log-based query
suggestions require many search logs, which makes them difficult to construct
outside of a large search engine. Some search engines do not provide query
suggestions, making searches difficult for users. These query suggestion
vulnerabilities degrade the user's search experience. In this study, we develop
a meta-suggestion, a new query suggestion scheme. Similar to meta-searches,
meta-suggestions retrieves candidate queries of suggestions from other search
engines. Meta-suggestions generate suggestions by reranking the aggregated
candidate queries. We develop a meta-suggestion engine (MSE) browser extension
that generates meta-suggestions. It can provide query suggestions for any
webpage and does not require a search log. Comparing our meta-suggestions to
major search engines such as Google, showed a 17% performance improvement on
normalized discounted cumulative gain (NDCG) and a 31% improvement on
precision. If more detailed factors, such as user preferences are discovered
through continued research, it is expected that user searches will greatly
improve. An enhanced user search experience is possible if factors, such as
user preference, are examined in future work.
"
143,"  Context: The software development industry is rapidly adopting machine
learning for transitioning modern day software systems towards highly
intelligent and self-learning systems. However, the full potential of machine
learning for improving the software engineering life cycle itself is yet to be
discovered, i.e., up to what extent machine learning can help reducing the
effort/complexity of software engineering and improving the quality of
resulting software systems. To date, no comprehensive study exists that
explores the current state-of-the-art on the adoption of machine learning
across software engineering life cycle stages. Objective: This article
addresses the aforementioned problem and aims to present a state-of-the-art on
the growing number of uses of machine learning in software engineering. Method:
We conduct a systematic mapping study on applications of machine learning to
software engineering following the standard guidelines and principles of
empirical software engineering. Results: This study introduces a machine
learning for software engineering (MLSE) taxonomy classifying the
state-of-the-art machine learning techniques according to their applicability
to various software engineering life cycle stages. Overall, 227 articles were
rigorously selected and analyzed as a result of this study. Conclusion: From
the selected articles, we explore a variety of aspects that should be helpful
to academics and practitioners alike in understanding the potential of adopting
machine learning techniques during software engineering projects.
"
144,"  Context. JavaScript is a popular programming language today with several
implementations competing for market dominance. Although a specification
document and a conformance test suite exist to guide engine development, bugs
occur and have important practical consequences. Implementing correct engines
is challenging because the spec is intentionally incomplete and evolves
frequently. Objective. This paper investigates the use of test transplantation
and differential testing for revealing functional bugs in JavaScript engines.
The former technique runs the regression test suite of a given engine on
another engine. The latter technique fuzzes existing inputs and then compares
the output produced by different engines with a differential oracle. Method. We
conducted experiments with engines from five major players-Apple, Facebook,
Google, Microsoft, and Mozilla-to assess the effectiveness of test
transplantation and differential testing. Results. Our results indicate that
both techniques revealed several bugs, many of which confirmed by developers.
We reported 35 bugs with test transplantation (23 of these bugs confirmed and
19 fixed) and reported 24 bugs with differential testing (17 of these confirmed
and 10 fixed). Results indicate that most of these bugs affected two
engines-Apple's JSC and Microsoft's ChakraCore (24 and 26 bugs, respectively).
To summarize, our results show that test transplantation and differential
testing are easy to apply and very effective in finding bugs in complex
software, such as JavaScript engines.
"
145,"  For improving flexibility and robustness of the engineering of automated
production systems (aPS) in case of extending, reducing or modifying parts,
several approaches propose an encapsulation and clustering of related
functions, e.g. from the electrical, mechanical or software engineering, based
on a modular architecture. Considering the development of these modules, there
are different stages, e.g. module planning or functional engineering, which
have to be completed. A reference model that addresses the different stages for
the engineering of aPS is proposed by AutomationML. Due to these different
stages and the integration of several engineering disciplines, e.g. mechanical,
electrical/electronic or software engineering, information not limited to one
discipline are stored redundantly increasing the effort to transfer information
and the risk of inconsistency. Although, data formats for the storage and
exchange of plant engineering information exist, e.g. AutomationML, fixed
domain specific structures and relations of the information, e.g. for automated
material flow systems (aMFS), are missing. This paper presents the integration
of a meta model into the development of modules for aMFS to improve the
transferability and consistency of information between the different
engineering stages and the increasing level of detail from the coarse-grained
plant planning to the fine-grained functional engineering.
"
146,"  Data-driven engineering refers to systematic data collection and processing
using machine learning to improve engineering systems. Currently, the
implementation of data-driven engineering relies on fundamental data science
and software engineering skills. At the same time, model-based engineering is
gaining relevance for the engineering of complex systems. In previous work, a
model-based engineering approach integrating the formalization of machine
learning tasks using the general-purpose modeling language SysML is presented.
However, formalized machine learning tasks still require the implementation in
a specialized programming languages like Python. Therefore, this work aims to
facilitate the implementation of data-driven engineering in practice by
extending the previous work of formalizing machine learning tasks by
integrating model transformation to generate executable code. The method
focuses on the modifiability and maintainability of the model transformation so
that extensions and changes to the code generation can be integrated without
requiring modifications to the code generator. The presented method is
evaluated for feasibility in a case study to predict weather forecasts. Based
thereon, quality attributes of model transformations are assessed and
discussed. Results demonstrate the flexibility and the simplicity of the method
reducing efforts for implementation. Further, the work builds a theoretical
basis for standardizing data-driven engineering implementation in practice.
"
147,"  Knowledge engineering is the process of creating and maintaining
knowledge-producing systems. Throughout the history of computer science and AI,
knowledge engineering workflows have been widely used given the importance of
high-quality knowledge for reliable intelligent agents. Meanwhile, the scope of
knowledge engineering, as apparent from its target tasks and use cases, has
been shifting, together with its paradigms such as expert systems, semantic
web, and language modeling. The intended use cases and supported user
requirements between these paradigms have not been analyzed globally, as new
paradigms often satisfy prior pain points while possibly introducing new ones.
The recent abstraction of systemic patterns into a boxology provides an opening
for aligning the requirements and use cases of knowledge engineering with the
systems, components, and software that can satisfy them best. This paper
proposes a vision of harmonizing the best practices in the field of knowledge
engineering by leveraging the software engineering methodology of creating
reference architectures. We describe how a reference architecture can be
iteratively designed and implemented to associate user needs with recurring
systemic patterns, building on top of existing knowledge engineering workflows
and boxologies. We provide a six-step roadmap that can enable the development
of such an architecture, providing an initial design and outcome of the
definition of architectural scope, selection of information sources, and
analysis. We expect that following through on this vision will lead to
well-grounded reference architectures for knowledge engineering, will advance
the ongoing initiatives of organizing the neurosymbolic knowledge engineering
space, and will build new links to the software architectures and data science
communities.
"
148,"  Regular expression denial of service (ReDoS) is an asymmetric cyberattack
that has become prominent in recent years. This attack exploits the slow
worst-case matching time of regular expression (regex) engines. In the past,
problematic regular expressions have led to outages at Cloudflare and Stack
Overflow, showing the severity of the problem. While ReDoS has drawn
significant research attention, there has been no systematization of knowledge
to delineate the state of the art and identify opportunities for further
research.
  In this paper, we describe the existing knowledge on ReDoS. We first provide
a systematic literature review, dividing works into two classes: measurement
studies and defenses. Then, our engineering review surveys the latest regex
engines to examine whether and how ReDoS defenses have been realized. Combining
our findings, we observe that (1) in the literature, almost no studies evaluate
whether and how ReDoS vulnerabilities can be weaponized against real systems,
making it difficult to assess their real-world impact; and (2) from an
engineering view, many mainstream regex engines now have ReDoS defenses,
rendering many threat models obsolete. The open challenges in ReDoS research
are to evaluate the emerging defenses, and to support engineers in migrating to
defended engines. To support these directions, we conclude by presenting the
wrk-redos tool. This tool supports controlled measurements of ReDoS on a web
service, and includes proof-of-concept Docker images that allow engineers to
substitute different regex engines in their applications.
"
149,"  This thesis examines some of the applications of scaling relations in
understanding non linear structure formation.
"
150,"  We model a microscopic heat engine as a particle hopping on a one-dimensional
lattice in a periodic sawtooth potential, with or without load, assisted by the
thermal kicks it gets from alternately placed hot and cold thermal baths. We
find analytic expressions for current and rate of heat flow when the engine
operates at steady state. Three regions are identified where the model acts
either as a heat engine or as a refrigerator or as neither of the two. At
quasistatic limit both efficiency of the engine and coefficient of performance
of the refrigerator go to that for Carnot engine and Carnot refrigerator,
respectively. We investigate efficiency of the engine at two operating
conditions (at maximum power and at optimum value with respect to energy and
time) and compare them with those of the endoreversible and Carnot engines.
"
151,"  Geographic location search engines allow users to constrain and order search
results in an intuitive manner by focusing a query on a particular geographic
region. Geographic search technology, also called location search, has recently
received significant interest from major search engine companies. Academic
research in this area has focused primarily on techniques for extracting
geographic knowledge from the web. In this paper, we study the problem of
efficient query processing in scalable geographic search engines. Query
processing is a major bottleneck in standard web search engines, and the main
reason for the thousands of machines used by the major engines. Geographic
search engine query processing is different in that it requires a combination
of text and spatial data processing techniques. We propose several algorithms
for efficient query processing in geographic search engines, integrate them
into an existing web search query processor, and evaluate them on large sets of
real data and query traces.
"
152,"  The requirements roadmap concept is introduced as a solution to the problem
of the requirements engineering of adaptive systems. The concept requires a new
general definition of the requirements problem which allows for quantitative
(numeric) variables, together with qualitative (binary boolean) propositional
variables, and distinguishes monitored from controlled variables for use in
control loops. We study the consequences of these changes, and argue that the
requirements roadmap concept bridges the gap between current general
definitions of the requirements problem and its notion of solution, and the
research into the relaxation of requirements, the evaluation of their partial
satisfaction, and the monitoring and control of requirements, all topics of
particular interest in the engineering of requirements for adaptive systems
[Cheng et al. 2009]. From the theoretical perspective, we show clearly and
formally the fundamental differences between more traditional conception of
requirements engineering (e.g., Zave & Jackson [1997]) and the requirements
engineering of adaptive systems (from Fickas & Feather [1995], over Letier &
van Lamsweerde [2004], and up to Whittle et al. [2010] and the most recent
research). From the engineering perspective, we define a proto-framework for
early requirements engineering of adaptive systems, which illustrates the
features needed in future requirements frameworks for this class of systems.
"
153,"  The use of embedded software is growing very rapidly. Accessing the internet
is a necessary service which has large range of applications in many fields.
The Internet is based on TCP/IP which is a very important stack. Although
TCP/IP is very important there is not a software engineering model describing
it. The common method in modeling and describing TCP/IP is RFCs which is not
sufficient for software engineer and developers. Therefore there is a need for
software engineering approach to help engineers and developers to customize
their own web based applications for embedded systems. This research presents a
model based system engineering approach of lightweight TCP/IP. The model
contains the necessary phases for developing a lightweight TCP/IP for embedded
systems. The proposed model is based on SysML as a model based system
engineering language.
"
154,"  This paper presents the methodology for the system requirements and
architecture w.r.t. their decomposition and refinement. It also introduces
ideas of refinement layers and of refinement-based verification.
"
155,"  Global software engineering has become a fact in many companies due to real
necessity in practice. In contrast to co-located projects global projects face
a number of additional software engineering challenges. Among them quality
management has become much more difficult and schedule and budget overruns can
be observed more often. Compared to co-located projects global software
engineering is even more challenging due to the need for integration of
different cultures, different languages, and different time zones - across
companies, and across countries. The diversity of development locations on
several levels seriously endangers an effective and goal-oriented progress of
projects. In this position paper we discuss reasons for global development,
sketch settings for distribution and views of orchestration of dislocated
companies in a global project that can be seen as a ""virtual project
environment"". We also present a collection of questions, which we consider
relevant for global software engineering. The questions motivate further
discussion to derive a research agenda in global software engineering.
"
156,"  Assembly systems constitute one of the most important fields in today
industry. In this paper we propose an open distributed architecture for the
engineering of evolvable flexible hybrid assembly systems. The proposed
architecture is based on the model driven development paradigm. Models are used
to represent structure and behavior and a domain specific engineering tool is
defined to facilitate the assembly system engineer in the engineering process
of the assembly system. Specific meta models are defined to capture domain
knowledge to guide the engineer in the construction of the models required to
construct the assembly system. This work is a specialization of our previous
work that defined a SOA based framework for embedded industrial automation
systems. It adapts and extends, in the assembly systems domain, the 3+1
SysML-view model architecture defined for the engineering of mechatronics
Manufacturing systems. The proposed architecture can be used to develop a
framework for evolvable flexible and reconfigurable assembly systems that would
exploit the benefits the Cyber Physical paradigm utilizing web technologies,
the IoT, the Cloud computing and Big Data.
"
157,"  For software development companies, one of the most important objectives is
to identify and acquire talented software engineers in order to maintain a
skilled team that can produce competitive products. Traditional approaches for
finding talented young software engineers are mainly through programming
contests of various forms which mostly test participants' programming skills.
However, successful software engineering in practice requires a wider range of
skills from team members including analysis, design, programming, testing,
communication, collaboration, and self-management, etc. In this paper, we
explore potential ways to identify talented software engineering students in a
data-driven manner through an Agile Project Management (APM) platform. Through
our proposed HASE online APM tool, we conducted a study involving 21 Scrum
teams consisting of over 100 undergraduate software engineering students in
multi-week coursework projects in 2014. During this study, students performed
over 10,000 ASD activities logged by HASE. We demonstrate the possibility and
potentials of this new research direction, and discuss its implications for
software engineering education and industry recruitment.
"
158,"  Two of the most popular game engines today, Unreal Engine v4.x and Unity Game
Engine v5.x have recently adopted competitive and very appealing pricing
structures for individual game developers and small teams. One may lean towards
one or the other game engine based on various criteria: existing
familiarization / vested interest, steepness of learning curve, quality,
richness, variability and pricing of add-on assets, initial cost of basic
ownership versus subscribing to updates and acquiring needed modules, etc. In
this paper we present complementary features of the Unreal and Unity game
engines that can be combined to enhance understanding game development and to
hone relevant skills. Such combinations of different game engine features can
increase the added value for our undergraduate informatics engineering students
taking a ""Game Technologies"" class.
"
159,"  Purpose - To test the ability of major search engines, Google, Yahoo, MSN,
and Ask, to distinguish between German and English-language documents
  Design/methodology/approach - 50 queries, using words common in German and in
English, were posed to the engines. The advanced search option of language
restriction was used, once in German and once in English. The first 20 results
per engine in each language were investigated.
  Findings - While none of the search engines faces problems in providing
results in the language of the interface that is used, both Google and MSN face
problems when the results are restricted to a foreign language.
  Research limitations/implications - Search engines were only tested in German
and in English. We have only anecdotal evidence that the problems are the same
with other languages.
  Practical implications - Searchers should not use the language restriction in
Google and MSN when searching for foreign-language documents. Instead,
searchers should use Yahoo or Ask. If searching for foreign language documents
in Google or MSN, the interface in the target language/country should be used.
  Value of paper - Demonstrates a problem with search engines that has not been
previously investigated.
"
160,"  Purpose: To compare five major Web search engines (Google, Yahoo, MSN,
Ask.com, and Seekport) for their retrieval effectiveness, taking into account
not only the results but also the results descriptions.
  Design/Methodology/Approach: The study uses real-life queries. Results are
made anonymous and are randomised. Results are judged by the persons posing the
original queries.
  Findings: The two major search engines, Google and Yahoo, perform best, and
there are no significant differences between them. Google delivers
significantly more relevant result descriptions than any other search engine.
This could be one reason for users perceiving this engine as superior.
  Research Limitations: The study is based on a user model where the user takes
into account a certain amount of results rather systematically. This may not be
the case in real life.
  Practical Implications: Implies that search engines should focus on relevant
descriptions. Searchers are advised to use other search engines in addition to
Google.
  Originality/Value: This is the first major study comparing results and
descriptions systematically and proposes new retrieval measures to take into
account results descriptions
"
161,"  The triumph of heat engines is their ability to convert the disordered energy
of thermal sources into useful mechanical motion. In recent years, much effort
has been devoted to generalizing thermodynamic notions to the quantum regime,
partly motivated by the promise of surpassing classical heat engines. Here, we
instead adopt a bottom-up approach: we propose a realistic autonomous heat
engine that can serve as a testbed for quantum effects in the context of
thermodynamics. Our model draws inspiration from actual piston engines and is
built from closed-system Hamiltonians and weak bath coupling terms. We
analytically derive the performance of the engine in the classical regime via a
set of nonlinear Langevin equations. In the quantum case, we perform numerical
simulations of the master equation. Finally, we perform a dynamic and
thermodynamic analysis of the engine's behaviour for several parameter regimes
in both the classical and quantum case, and find that the latter exhibits a
consistently lower efficiency due to additional noise.
"
162,"  We design a quantum spin heat engine using spin polarized ballistic modes
generated in a strained graphene monolayer doped with a magnetic impurity. We
observe remarkably large efficiency and large thermoelectric figure of merit
both for the charge as well as spin variants of the quantum heat engine. This
suggests the use of this device as a highly efficient quantum heat engine for
charge as well as spin-based transport. Further, a comparison is drawn between
the device characteristics of a graphene spin heat engine against a quantum
spin Hall heat engine. The reason being edge modes because of their origin
should give much better performance. In this respect, we observe our
graphene-based spin heat engine can almost match the performance
characteristics of a quantum spin Hall heat engine. Finally, we show that a
pure spin current can be transported in our device in absence of any charge
current.
"
163,"  The development of self-adaptive software requires the engineering of an
adaptation engine that controls the underlying adaptable software by feedback
loops. The engine often describes the adaptation by runtime models representing
the adaptable software and by activities such as analysis and planning that use
these models. To systematically address the interplay between runtime models
and adaptation activities, runtime megamodels have been proposed. A runtime
megamodel is a specific model capturing runtime models and adaptation
activities. In this article, we go one step further and present an executable
modeling language for ExecUtable RuntimE MegAmodels (EUREMA) that eases the
development of adaptation engines by following a model-driven engineering
approach. We provide a domain-specific modeling language and a runtime
interpreter for adaptation engines, in particular feedback loops. Megamodels
are kept alive at runtime and by interpreting them, they are directly executed
to run feedback loops. Additionally, they can be dynamically adjusted to adapt
feedback loops. Thus, EUREMA supports development by making feedback loops
explicit at a higher level of abstraction and it enables solutions where
multiple feedback loops interact or operate on top of each other and
self-adaptation co-exists with offline adaptation for evolution.
"
164,"  Background. There are some publications in software engineering research that
aim at guiding researchers in assessing validity threats to their studies.
Still, many researchers fail to address many aspects of validity that are
essential to quantitative research on human factors. Goal. This paper has the
goal of triggering a change of mindset in what types of studies are the most
valuable to the behavioral software engineering field, and also provide more
details of what construct validity is. Method. The approach is based on
psychological test theory and draws upon methods used in psychology in relation
to construct validity. Results. In this paper, I suggest a different approach
to validity threats than what is commonplace in behavioral software engineering
research. Conclusions. While this paper focuses on behavioral software
engineering, I believe other types of software engineering research might also
benefit from an increased focus on construct validity.
"
165,"  Effects of personality profiles and human factors in software engineering
(SE) have been studied from different perspectives, such as: software life
cycle, team performance, software quality attributes, and so on. This study
intends to compare personality profiles of software engineers in academia and
industry. In this survey we have collected personality profiles of software
engineers from academia and the local industry in Pakistan. According to the
Myers- Briggs Type Indicator (MBTI) instrument, the most prominent personality
type among Pakistani academicians is a combination of Introversion, Sensing,
Thinking, and Judging (ISTJ). However the most dominant personality type among
software engineers in the Pakistani software industry is a combination of
Extroversion, Sensing, Thinking, and Judging (ESTJ). The results of study
establish that software engineers working in industry are mostly Extroverts as
compared to those in academia who tend to be Introverts. The dimensions:
Sensing, Thinking, and Judging (STJ), however, remain common in the dominant
personality types of software engineers, both in Pakistani software industry
and academia.
"
166,"  In the recent past, software product line engineering has become one of the
most promising practices in software industry with the potential to
substantially increase the software development productivity. Software product
line engineering approach spans the dimensions of business, architecture,
software engineering process and organization. The increasing popularity of
software product line engineering in the software industry necessitates a
process maturity evaluation methodology. Accordingly, this paper presents a
business maturity model of software product line, which is a methodology to
evaluate the current maturity of the business dimension of a software product
line in an organization. This model examines the coordination between product
line engineering and the business aspects of software product line. It
evaluates the maturity of the business dimension of software product line as a
function of how a set of business practices are aligned with product line
engineering in an organization. Using the model presented in this paper, we
conducted two case studies and reported the assessment results. This research
contributes towards establishing a comprehensive and unified strategy for a
process maturity evaluation of software product lines.
"
167,"  The condition for stationary engines to attain the Carnot efficiency in and
beyond the linear response regime is investigated. We find that this condition
for finite-size engines is significantly different from that for macroscopic
engines in the thermodynamic limit. For the case of finite-size engines, the
tight-coupling condition in the linear response regime directly implies the
attainability of the Carnot efficiency beyond the linear response regime.
Contrary to this, for the case of macroscopic engines in the thermodynamic
limit, there are three types of mechanisms to attain the Carnot efficiency. One
mechanism allows engines to attain the Carnot efficiency only in the linear
response limit, while other two mechanisms enable engines to attain the Carnot
efficiency beyond the linear response regime. These three mechanisms are
classified by introducing tight-coupling window.
"
168,"  The ubiquitous presence of computer simulations in all kinds of research
areas evidence their role as the new driving force for the advancement of
science and engineering research. Nothing seems to escape the image of success
that computer simulations project onto the research community and the general
public. One simple way to illustrate this consists of asking ourselves how
would contemporary science and engineering look like without the use of
computer simulations. The answer would certainly diverge from the current image
we have of scientific and engineering research.
  As much as computer simulations are successful, they are also methods that
fail in their purpose of inquiring about the world; and as much as researchers
make use of them, computer simulations raise important questions that are at
the heart of contemporary science and engineering practice. In this respect,
computer simulations make a fantastic subject of research for the natural
sciences, the social sciences, engineering and, as in our case, also for
philosophy. Studies on computer simulations touch upon many different facets of
scientific and engineering research and evoke philosophically inclined
questions of interpretation with close ties to problems in experimental
settings and engineering applications (...)
"
169,"  The quantum engine cycle serves as an analogous representation of the
macroscopic nature of heat engines and the quantum regime of thermal devices
composed of a single element. In this work, we follow the formalism of a
quantum engine proposed by Bender et al. [1] where they observed quantum Carnot
cycle with a single particle of mass m confined to an infinite one-dimensional
potential well of width L as a working medium. Using this model, a
quantum-mechanical analogue of the Stirling cycle [SC] and Ericsson cycle [EC]
have been constructed through changes of both, the width of the well and its
quantum state. The efficiency of quantum engines is derived, which is found to
be analogous to classical thermodynamic engines. Keywords: Quantum
thermodynamics, Quantum mechanics, Ericsson cycle, Stirling cycle, Quantum heat
engines, Nano-engines.
"
170,"  Legacy software systems typically include vital data for organizations that
use them and should thus to be regularly maintained. Ideally, organizations
should rely on Requirements Engineers to understand and manage changes of
stakeholder needs and system constraints. However, due to time and cost
pressure, and with a heavy focus on implementation, organizations often choose
to forgo Requirements Engineers and rather focus on ad-hoc bug fixing and
maintenance. This position paper discusses what Requirements Engineers could
possibly learn from other similar roles to become crucial for the evolution of
legacy systems. Particularly, we compare the roles of Requirements Engineers
(according to IREB), Building Architects (according to the German regulations),
and Product Owners (according to ""The Scrum-Guide""). We discuss overlaps along
four dimensions: liability, self-portrayal, core activities, and artifacts.
Finally we draw insights from these related fields to foster the concept of a
Requirements Engineer as a distinguished profession.
"
171,"  Finding a good query plan is key to the optimization of query runtime. This
holds in particular for cost-based federation engines, which make use of
cardinality estimations to achieve this goal. A number of studies compare
SPARQL federation engines across different performance metrics, including query
runtime, result set completeness and correctness, number of sources selected
and number of requests sent. Albeit informative, these metrics are generic and
unable to quantify and evaluate the accuracy of the cardinality estimators of
cost-based federation engines. To thoroughly evaluate cost-based federation
engines, the effect of estimated cardinality errors on the overall query
runtime performance must be measured. In this paper, we address this challenge
by presenting novel evaluation metrics targeted at a fine-grained benchmarking
of cost-based federated SPARQL query engines. We evaluate five cost-based
federated SPARQL query engines using existing as well as novel evaluation
metrics by using LargeRDFBench queries. Our results provide a detailed analysis
of the experimental outcomes that reveal novel insights, useful for the
development of future cost-based federated SPARQL query processing engines.
"
172,"  Different search engines provide different outputs for the same keyword. This
may be due to different definitions of relevance, and/or to different
knowledge/anticipation of users' preferences, but rankings are also suspected
to be biased towards own content, which may prejudicial to other content
providers. In this paper, we make some initial steps toward a rigorous
comparison and analysis of search engines, by proposing a definition for a
consensual relevance of a page with respect to a keyword, from a set of search
engines. More specifically, we look at the results of several search engines
for a sample of keywords, and define for each keyword the visibility of a page
based on its ranking over all search engines. This allows to define a score of
the search engine for a keyword, and then its average score over all keywords.
Based on the pages visibility, we can also define the consensus search engine
as the one showing the most visible results for each keyword. We have
implemented this model and present an analysis of the results.
"
173,"  Understanding what a software engineer (a developer, an incident responder, a
production engineer, etc.) is working on is a challenging problem -- especially
when considering the more complex software engineering workflows in
software-intensive organizations: i) engineers rely on a multitude (perhaps
hundreds) of loosely integrated tools; ii) engineers engage in concurrent and
relatively long running workflows; ii) infrastructure (such as logging) is not
fully aware of work items; iv) engineering processes (e.g., for incident
response) are not explicitly modeled. In this paper, we explain the
corresponding 'work-item prediction challenge' on the grounds of representative
scenarios, report on related efforts at Facebook, discuss some lessons learned,
and review related work to call to arms to leverage, advance, and combine
techniques from program comprehension, mining software repositories, process
mining, and machine learning.
"
174,"  In this paper, a novel mean-value exergy-based modeling framework for
internal combustion engines is developed. The characterization of combustion
irreversibilities, thermal exchange between the in-cylinder mixture and the
cylinder wall, and non-stoichiometric combustion allows for a comprehensive
description of the availability transfer and destruction phenomena in the
engine. The model is applicable to internal combustion engines operating both
in steady-state and over a sequence of operating points and can be used to
characterize the whole engine operating region, allowing to create static maps
describing the exergetic behavior of the engine as a function of speed and
load. The application of the proposed modeling strategy is shown for a
turbocharged diesel engine. Ultimately, the static maps, while providing
insightful information about inefficiencies over the whole operating field of
the engine, are the enabling step for the development of exergy-based control
strategies aiming at minimizing the overall operational losses of ground
vehicles.
"
175,"  Quantum technology is exploding. Computing, communication, and sensing are
just a few areas likely to see breakthroughs in the next few years. Worldwide,
national governments, industries, and universities are moving to create a new
class of workforce - the Quantum Engineers. Demand for such engineers is
predicted to be in the tens of thousands within a five-year timescale. However,
how best to train this next generation of engineers is far from obvious.
Quantum mechanics - long a pillar of traditional physics undergraduate degrees
- must now be merged with traditional engineering offerings. This paper
discusses the history, development, and first year of operation of the world's
first undergraduate degree in quantum engineering. The main purpose of the
paper is to inform the wider debate, now being held by many institutions
worldwide, on how best to formally educate the Quantum Engineer.
"
176,"  Experimentation with software prototypes plays a fundamental role in software
engineering research. In contrast to many other scientific disciplines,
however, explicit support for this key activity in software engineering is
relatively small. While some approaches to improve this situation have been
proposed by the software engineering community, experiments are still very
difficult and sometimes impossible to replicate. In this paper, we propose the
concept of an experimentation workbench as a means of explicit support for
experimentation in software engineering research. In particular, we discuss
core requirements that an experimentation workbench should satisfy in order to
qualify as such and to offer a real benefit for researchers. Beyond their core
benefits for experimentation, we stipulate that experimentation workbenches
will also have benefits in regard to reproducibility and repeatability of
software engineering research. Further, we illustrate this concept with a
scenario and a case study, and describe relevant challenges as well as our
experience with experimentation workbenches.
"
177,"  In general, self help systems are being increasingly deployed by service
based industries because they are capable of delivering better customer service
and increasingly the switch is to voice based self help systems because they
provide a natural interface for a human to interact with a machine. A speech
based self help system ideally needs a speech recognition engine to convert
spoken speech to text and in addition a language processing engine to take care
of any misrecognitions by the speech recognition engine. Any off-the-shelf
speech recognition engine is generally a combination of acoustic processing and
speech grammar. While this is the norm, we believe that ideally a speech
recognition application should have in addition to a speech recognition engine
a separate language processing engine to give the system better performance. In
this paper, we discuss ways in which the speech recognition engine and the
language processing engine can be combined to give a better user experience.
"
178,"  To legitimize itself as a scientific discipline, the software engineering
academic community must let go of its non-empirical dogmas. A dogma is belief
held regardless of evidence. This paper analyzes the nature and detrimental
effects of four software engineering dogmas - 1) the belief that software has
""requirements""; 2) the division of software engineering tasks into analysis,
design, coding and testing; 3) the belief that software engineering is
predominantly concerned with designing ""software"" systems; 4) the belief that
software engineering follows methods effectively. Deconstructing these dogmas
reveals that they each oversimplify and over-rationalize aspects of software
engineering practice, which obscures underlying phenomena and misleads
researchers and practitioners. Evidenced-based practice is analyzed as a means
to expose and repudiate non-empirical dogmas. This analysis results in several
novel recommendations for overcoming the practical challenges of evidence-based
practice.
"
179,"  In immersive augmented reality (IAR), users can wear a head-mounted display
to see computer-generated images superimposed to their view of the world. IAR
was shown to be beneficial across several domains, e.g., automotive, medicine,
gaming and engineering, with positive impacts on, e.g., collaboration and
communication. We think that IAR bears a great potential for software
engineering but, as of yet, this research area has been neglected. In this
vision paper, we elicit potentials and obstacles for the use of IAR in software
engineering. We identify possible areas that can be supported with IAR
technology by relating commonly discussed IAR improvements to typical software
engineering tasks. We further demonstrate how innovative use of IAR technology
may fundamentally improve typical activities of a software engineer through a
comprehensive series of usage scenarios outlining practical application.
Finally, we reflect on current limitations of IAR technology based on our
scenarios and sketch research activities necessary to make our vision a
reality. We consider this paper to be relevant to academia and industry alike
in guiding the steps to innovative research and applications for IAR in
software engineering.
"
180,"  Current day software development relies heavily on the use of service
architectures and on agile iterative development methods to design, implement,
and deploy systems. These practices result in systems made up of multiple
services that introduce new data flows and evolving designs that escape the
control of a single designer. Academic privacy engineering literature typically
abstracts away such conditions of software production in order to achieve
generalizable results. Yet, through a systematic study of the literature, we
show that proposed solutions inevitably make assumptions about software
architectures, development methods and scope of designer control that are
misaligned with current practices. These misalignments are likely to pose an
obstacle to operationalizing privacy engineering solutions in the wild.
Specifically, we identify important limitations in the approaches that
researchers take to design and evaluate privacy enhancing technologies which
ripple to proposals for privacy engineering methodologies. Based on our
analysis, we delineate research and actions needed to re-align research with
practice, changes that serve a precondition for the operationalization of
academic privacy results in common software engineering practices.
"
181,"  Colloidal heat engines are paradigmatic models to understand the conversion
of heat into work in a noisy environment - a domain where biological and
synthetic nano/micro machines function. While the operation of these engines
across thermal baths is well-understood, how they function across baths with
noise statistics that is non-Gaussian and also lacks memory, the simplest
departure from equilibrium, remains unclear. Here we quantified the performance
of a colloidal Stirling engine operating between an engineered
\textit{memoryless} non-Gaussian bath and a Gaussian one. In the quasistatic
limit, the non-Gaussian engine functioned like an equilibrium one as predicted
by theory. On increasing the operating speed, due to the nature of noise
statistics, the onset of irreversibility for the non-Gaussian engine preceded
its thermal counterpart and thus shifted the operating speed at which power is
maximum. The performance of nano/micro machines can be tuned by altering only
the nature of reservoir noise statistics.
"
182,"  This paper introduces the Simulated Jet Engine Bracket Dataset (SimJEB): a
new, public collection of crowdsourced mechanical brackets and accompanying
structural simulations. SimJEB is applicable to a wide range of geometry
processing tasks; the complexity of the shapes in SimJEB offer a challenge to
automated geometry cleaning and meshing, while categorical labels and
structural simulations facilitate classification and regression (i.e.
engineering surrogate modeling). In contrast to existing shape collections,
SimJEB's models are all designed for the same engineering function and thus
have consistent structural loads and support conditions. On the other hand,
SimJEB models are more complex, diverse, and realistic than the synthetically
generated datasets commonly used in parametric surrogate model evaluation. The
designs in SimJEB were derived from submissions to the GrabCAD Jet Engine
Bracket Challenge: an open engineering design competition with over 700
hand-designed CAD entries from 320 designers representing 56 countries. Each
model has been cleaned, categorized, meshed, and simulated with finite element
analysis according to the original competition specifications. The result is a
collection of 381 diverse, high-quality and application-focused designs for
advancing geometric deep learning, engineering surrogate modeling, automated
cleaning and related geometry processing tasks.
"
183,"  Abstract The Curzon-Ahlborn (CA) efficiency, as the efficiency at the maximum
power (EMP) of the endoreversible Carnot engine, has a significant impact on
finite-time thermodynamics. However, the CA engine model is based on many
assumptions. In the past few decades, although a lot of efforts have been made,
a microscopic theory of the CA engine is still lacking. By adopting the method
of the stochastic differential equation of energy, we formulate a microscopic
theory of the CA engine realized with an underdamped Brownian particle in a
class of non-harmonic potentials. This theory gives microscopic interpretation
of all assumptions made by Curzon and Ahlborn, and thus puts the results about
CA engine on a solid foundation. Also, based on this theory, we obtain
analytical expressions of the power and the efficiency statistics for the
Brownian CA engine. Our research brings new perspectives to experimental
studies of finite-time microscopic heat engines featured with fluctuations.
"
184,"  Quantum computing (QC) represents the future of computing systems, but the
tools for reasoning about the quantum model of computation, in which the laws
obeyed are those on the quantum mechanical scale, are still a mix of linear
algebra and Dirac notation; two subjects more suitable for physicists, rather
than computer scientists and software engineers. On this ground, we believe it
is possible to provide a more intuitive approach to thinking and writing about
quantum computing systems, in order to simplify the design of quantum
algorithms and the development of quantum software. In this paper, we move the
first step in such direction, introducing a specification language as the tool
to represent the operations of a quantum computer via axiomatic definitions, by
adopting the same symbolisms and reasoning principles used by formal methods in
software engineering. We name this approach formal quantum software engineering
(F-QSE). This work assumes familiarity with the basic principles of quantum
mechanics (QM), with the use of Zed (Z) which is a formal language of software
engineering (SE), and with the notation and techniques of first-order logic
(FOL) and functional programming (FP).
"
185,"  Tissue engineering technology and tissue cell-based stem cell research have
made great strides in treating tissue and organ damage, correcting tissue and
organ dysfunction, and reducing surgical complications. In the past,
traditional methods have used biological substitutes for tissue repair
materials, while tissue engineering technology has focused on merging sperm
cells with biological materials to form biological tissues with the same
structure and function as their own tissues. The advantage is that tissue
engineering technology can overcome donors. Material procurement restrictions
can effectively reduce complications. The aim of studying tissue engineering
technology is to find sperm cells and suitable biological materials to replace
the original biological functions of tissues and to establish a suitable in
vivo microenvironment. This article mainly describes the current developments
of tissue engineering in various fields of urology and discusses the future
trends of tissue engineering technology in the treatment of complex diseases of
the urinary system. The results of the research in this article indicate that
while the current clinical studies are relatively few, the good results from
existing animal model studies indicate good prospects of tissue engineering
technology for the treatment of various urinary tract diseases in the future.
"
186,"  Research and development in computer technology and computational methods
have resulted in a wide variety of valuable tools for Computer-Aided
Engineering (CAE) and Industrial Engineering. However, despite the exponential
increase in computational capabilities and Artificial Intelligence (AI)
methods, many of the visionary perspectives on cybernetic automation of design,
engineering, and development have not been successfully pursued or realized
yet. While contemporary research trends and movements such as Industry 4.0
primarily target progress by connected automation in manufacturing and
production, the objective of this paper is to survey progress and formulate
perspectives targeted on the automation and autonomization of engineering
development processes. Based on an interdisciplinary mini-review, this work
identifies open challenges, synergies, and research opportunities towards the
realization of resource-efficient cooperative engineering and development
systems. In order to go beyond conventional human-centered, tool-based CAE
approaches and realize Computational Intelligence Driven Development processes,
it is suggested to extend the framework of Computational Rationality to
challenges in design, engineering and development.
"
187,"  As software engineering research becomes more concerned with the
psychological, sociological and managerial aspects of software development,
relevant theories from reference disciplines are increasingly important for
understanding the field's core phenomena of interest. However, the degree to
which software engineering research draws on relevant social sciences remains
unclear. This study therefore investigates the use of social science theories
in five influential software engineering journals over 13 years. It analyzes
not only the extent of theory use but also what, how and where these theories
are used. While 87 different theories are used, less than two percent of papers
use a social science theory, most theories are used in only one paper, most
social sciences are ignored, and the theories are rarely tested for
applicability to software engineering contexts. Ignoring relevant social
science theories may (1) undermine the community's ability to generate,
elaborate and maintain a cumulative body of knowledge; and (2) lead to
oversimplified models of software engineering phenomena. More attention to
theory is needed for software engineering to mature as a scientific discipline.
"
188,"  Brownian information engines can extract work from thermal fluctuations by
utilizing information. So far, the studies on Brownian information engines
consider the system in a thermal bath; however, many processes in nature occur
in a nonequilibrium setting, such as the suspensions of self-propelled
microorganisms or cellular environments called an active bath. Here, we
introduce an archetypal model for Maxwell-demon type cyclic Brownian
information engine operating in a Gaussian correlated active bath. The active
engine can extract more work than its thermal counterpart, exceeding the bound
set by the second law of information thermodynamics. We obtain a general
integral fluctuation theorem for the active engine that includes additional
mutual information gained from the active bath with a unique effective
temperature. This effective description modifies the second law and provides a
new upper bound for the extracted work. Unlike the passive information engine
operating in a thermal bath, the active information engine extracts colossal
power that peaks at the finite cycle period. Our study provides fundamental
insights into the design and functioning of synthetic and biological submicron
motors in active baths under measurement and feedback control.
"
189,"  The traditional path to a software engineering career involves a
post-secondary diploma in Software Engineering, Computer Science, or a related
field. However, many software engineers take a non-traditional path to their
career, starting from other industries or fields of study. This paper proposes
a study on barriers faced by software engineers with non-traditional
educational and occupational backgrounds, and possible mitigation strategies
for those barriers. We propose a two-stage methodology, consisting of an
exploratory study, followed by a validation study. The exploratory study will
involve a grounded-theory-based qualitative analysis of relevant Reddit data to
yield a framework around the barriers and possible mitigation strategies. These
findings will then be validated using a survey in the validation study. Making
software engineering more accessible to those with non-traditional backgrounds
will not only bring about the benefits of functional diversity, but also serves
as a method of filling in the labour shortages of the software engineering
industry.
"
190,"  Video game developers use game engines as a tool to manage complex aspects of
game development. While engines play a big role in the success of games, to the
best of our knowledge, they are often developed in isolation, in a
closed-source manner, without architectural discussions, comparison, and
collaboration among projects. In this work in progress, we compare the call
graphs of two open-source engines: Godot 3.4.4 and Urho3D 1.8. While static
analysis tools could provide us with a general picture without precise call
graph paths, the use of a profiler such as Callgrind allows us to also view the
call order and frequency. These graphs give us insight into the engines'
designs. We showed that, by using Callgrind, we can obtain a high-level view of
an engine's architecture, which can be used to understand it. In future work,
we intend to apply both dynamic and static analysis to other open-source
engines to understand architectural patterns and their impact on aspects such
as performance and maintenance.
"
191,"  Driving a quantum system across quantum critical points leads to
non-adiabatic excitations in the system. This in turn may adversely affect the
functioning of a quantum machine which uses a quantum critical substance as its
working medium. Here we propose a bath-engineered quantum engine (BEQE), in
which we use the Kibble--Zurek mechanism and critical scaling laws to formulate
a protocol for enhancing the performance of finite-time quantum engines
operating close to quantum phase transitions. In the case of free fermionic
systems, BEQE enables finite-time engines to outperform engines operating in
the presence of shortcuts to adiabaticity, and even infinite-time engines under
suitable conditions, thus showing the remarkable advantages offered by this
technique. Open questions remain regarding the use of BEQE based on
non-integrable models.
"
192,"  Dynamical phases are obtained for a quantum thermal engine, whose working
medium is a single harmonic oscillator. The dynamics of this engine is obtained
by using four steps where in two steps the time dependent frequency is
changing. In the other two steps, the thermal engine is coupled alternatively
to hot and cold heat baths. Similar dynamical phases are obtained in a quantum
thermal engine whose working medium is spin 1/2 system. The role of times
durations of such steps in the quantum engines for getting maximal efficiency
is analyzed. The dynamic of charge pumping in a quantum dot coupled to two
reservoirs is studied. The effects of many modulation parameters including
their fluctuations for getting geometric phases are analyzed. Since the
separate steps in thermal engines describe non-cyclic circuits, we propose to
use a special method for measuring geometric phases in thermal engines for
non-cyclic circuits which is gauge invariant.
"
193,"  We propose a thermodynamically consistent, analytically tractable model of
steady-state active heat engines driven by both temperature difference and a
constant chemical driving. While the engine follows the dynamics of the Active
Ornstein-Uhlenbeck Particle, its self-propulsion stems from the mechanochemical
coupling with the fuel consumption dynamics, allowing for both even- and
odd-parity self-propulsion forces. Using the standard methods of stochastic
thermodynamics, we show that the entropy production of the engine satisfies the
conventional Clausius relation, based on which we define the efficiency of the
model that is bounded from above by the second law of thermodynamics. Using
this framework, we obtain exact expressions for the efficiency at maximum
power. The results show that the engine performance has a nonmonotonic
dependence on the magnitude of the chemical driving, and that the even-parity
(odd-parity) engines perform better when the size of the engine is smaller
(larger) than the persistence length of the active particle. We also discuss
the existence of a tighter upper bound on the efficiency of the odd-parity
engines stemming from the detailed structure of the entropy production.
"
194,"  Considerable attention has been devoted to microscopic heat engines in both
theoretical and experimental aspects. Notably, the fundamental limits
pertaining to power and efficiency, as well as the tradeoff relations between
these two quantities, have been intensively studied. This study aims to shed
further light on the ultimate limits of heat engines by exploring the
relationship between the geometric length along the path of cyclic heat engines
operating at arbitrary speeds and their power and efficiency. We establish a
tradeoff relation between power and efficiency using the geometric length and
the timescale of the heat engine. Remarkably, because the geometric quantity
comprises experimentally accessible terms in classical cases, this relation is
useful for the inference of thermodynamic efficiency. Moreover, we reveal that
the power of a heat engine is always upper bounded by the product of its
geometric length and the statistics of energy. Our results provide a geometric
characterization of the performance of cyclic heat engines, which is
universally applicable to both classical and quantum heat engines operating far
from equilibrium.
"
195,"  The aim of this primer is to introduce the subject of knowledge engineering
in a concise but synthetic way to develop the reader's intuition about the
area.
"
196,"  This paper addresses the control of diesel engine nitrogen oxides (NOx) and
Soot emissions through the application of Model Predictive Control (MPC). The
developments described in the paper are based on a high-fidelity model of the
engine airpath and torque response in GT-Power, which is extended with a
feedforward neural network (FNN)-based model of engine out (feedgas) emissions
identified from experimental engine data to enable the controller co-simulation
and performance verification. A Recurrent Neural Network (RNN) is then
identified for use as a prediction model in the implementation of a nonlinear
economic MPC that adjusts intake manifold pressure and EGR rate set-points to
the inner loop airpath controller as well as the engine fueling rate. Based on
GT-Power engine model and FNN emissions model, the closed-loop simulations of
the control system and the plant model, over different driving cycles,
demonstrate the capability to shape engine out emissions response by adjusting
weights and constraints in economic MPC formulation.
"
197,"  Biologically Inspired Design (BID), or Biomimicry, is a problem-solving
methodology that applies analogies from nature to solve engineering challenges.
For example, Speedo engineers designed swimsuits based on shark skin. Finding
relevant biological solutions for real-world problems poses significant
challenges, both due to the limited biological knowledge engineers and
designers typically possess and to the limited BID resources. Existing BID
datasets are hand-curated and small, and scaling them up requires costly human
annotations.
  In this paper, we introduce BARcode (Biological Analogy Retriever), a search
engine for automatically mining bio-inspirations from the web at scale. Using
advances in natural language understanding and data programming, BARcode
identifies potential inspirations for engineering challenges. Our experiments
demonstrate that BARcode can retrieve inspirations that are valuable to
engineers and designers tackling real-world problems, as well as recover famous
historical BID examples. We release data and code; we view BARcode as a step
towards addressing the challenges that have historically hindered the practical
application of BID to engineering innovation.
"
198,"  Digital Engineering currently relies on costly and often bespoke integration
of disparate software products to assemble the authoritative source of truth of
the system-of-interest. Tools not originally designed to work together become
an acknowledged system-of-systems, with their own separate feature roadmaps,
deprecation, and support timelines. The resulting brittleness and
conglomeration of disparate interfaces in the Digital Engineering Ecosystem of
an organization drains resources and impairs efficiency and efficacy. If
Model-Based Systems Engineering were applied to this problem, a complete system
architecture model would be defined, and a purpose-built computing
system-of-systems would be constructed to satisfy stakeholder needs. We have
decades of research in computer science, cybersecurity, software and systems
engineering, and human-computer interaction from which to draw that informs the
design of a Seamless Digital Engineering tooling system, but it would require
starting from a clean slate while carefully adopting existing standards. In
this paper, this problem space and solution space are characterized, defining
and identifying Seamless Digital Engineering as a grand challenge in Digital
Engineering research.
"
199,"  Finite-time quantum heat engines are of practical relevance as they can
generate finite-power, distinguishing them from ideal quasistatic engines
typically used for theoretical purposes. However, these engines encounter
energy losses due to quantum friction, which is particularly pronounced in
many-body systems with non-trivial coherences in their density operator.
Strategies such as shortcuts to adiabaticity and fast routes to thermalization
have been developed although the associated cost requirements remain uncertain.
In this study, we theoretically investigate the finite-time operation of a
trapped-atom Otto engine with light-induced dipole-dipole interactions and
projection measurements in one of the isochoric processes. The investigation
reveals that appropriate control of dipole-dipole interactions of the working
medium prompts engine operation upon interacting with the hot reservoir, while
projection measurements and adjustment of the unitary driving protocols
effectively reduce quantum friction to enhance finite-time engine performance
compared to non-interacting and quasi-static counterparts. This setup presents
a compelling avenue for further investigation of finite-time many-body quantum
heat engines and provides an opportunity to explore the full potential of
photon-mediated dipole-dipole interactions in their operations.
"
200,"  AI systems cannot exist without data. Now that AI models (data science and
AI) have matured and are readily available to apply in practice, most
organizations struggle with the data infrastructure to do so. There is a
growing need for data engineers that know how to prepare data for AI systems or
that can setup enterprise-wide data architectures for analytical projects. But
until now, the data engineering part of AI engineering has not been getting
much attention, in favor of discussing the modeling part. In this paper we aim
to change this by perform a mapping study on data engineering for AI systems,
i.e., AI data engineering. We found 25 relevant papers between January 2019 and
June 2023, explaining AI data engineering activities. We identify which life
cycle phases are covered, which technical solutions or architectures are
proposed and which lessons learned are presented. We end by an overall
discussion of the papers with implications for practitioners and researchers.
This paper creates an overview of the body of knowledge on data engineering for
AI. This overview is useful for practitioners to identify solutions and best
practices as well as for researchers to identify gaps.
"
201,"  As quantum computers evolve, so does the complexity of the software that they
can run. To make this software efficient, maintainable, reusable, and
cost-effective, quality attributes that any industry-grade software should
strive for, mature software engineering approaches should be applied during its
design, development, and operation. Due to the significant differences between
classical and quantum software, applying classical software engineering
solutions to quantum software is difficult. This resulted in the birth of
Quantum Software Engineering as a discipline in the contemporary software
engineering landscape. In this work, a set of active researchers is currently
addressing the challenges of Quantum Software Engineering and analyzing the
most recent research advances in this domain. This analysis is used to identify
needed breakthroughs and future research directions for Quantum Software
Engineering.
"
202,"  The performance of large language models (LLMs) is significantly influenced
by the quality of the prompts provided. In response, researchers have developed
enormous prompt engineering strategies aimed at modifying the prompt text to
enhance task performance. In this paper, we introduce a novel technique termed
position engineering, which offers a more efficient way to guide large language
models. Unlike prompt engineering, which requires substantial effort to modify
the text provided to LLMs, position engineering merely involves altering the
positional information in the prompt without modifying the text itself. We have
evaluated position engineering in two widely-used LLM scenarios:
retrieval-augmented generation (RAG) and in-context learning (ICL). Our
findings show that position engineering substantially improves upon the
baseline in both cases. Position engineering thus represents a promising new
strategy for exploiting the capabilities of large language models.
"
203,"  A finite cycle time information engine based on a two-level system in contact
with a thermal reservoir is studied analytically. The model for the engine
incorporates an error in measuring the system's state and time delay between
the measurement and the feedback process. The efficiency and power of the
engine in steady state are derived as a function of level spacing, feedback
delay time, engine cycle time, and measurement error. For a fixed value of
level spacing and feedback delay, there is an upper bound on measurement error
such that the engine can extract positive work. This threshold value of error
is found to be independent of the cycle time. For a range of values of level
spacing and feedback delay time, efficiency has a non-monotonic dependence on
the measurement error, implying that there is an optimal measurement error for
the information engine to operate efficiently. At high temperatures and with
precise measurement, the engine's ability to extract positive work is extended
over a larger range of feedback delay time.
"
204,"  Digital engineering practices offer significant yet underutilized potential
for improving information assurance and system lifecycle management. This paper
examines how capabilities like model-based engineering, digital threads, and
integrated product lifecycles can address gaps in prevailing frameworks. A
reference model demonstrates applying digital engineering techniques to a
reference information system, exhibiting enhanced traceability, risk
visibility, accuracy, and integration. The model links strategic needs to
requirements and architecture while reusing authoritative elements across
views. Analysis of the model shows digital engineering closes gaps in
compliance, monitoring, change management, and risk assessment. Findings
indicate purposeful digital engineering adoption could transform cybersecurity,
operations, service delivery, and system governance through comprehensive
digital system representations. This research provides a foundation for
maturing application of digital engineering for information systems as
organizations modernize infrastructure and pursue digital transformation.
"
205,"  Performance of nano- and micro-scale heat engines can be improved with a help
from quantum mechanical phenomena. Recently, heat reservoirs with quantum
coherence have been proposed to enhance engine performance beyond the Carnot
limit even with a single reservoir. However, no physical realizations have been
achieved so far. Here, we report the first proof-of-principle experimental
demonstration of a photonic quantum engine driven by superradiance employing a
single heat reservoir composed of atoms and photonic vacuum. Reservoir atoms
prepared in a quantum coherent superposition state underwent superradiance
while traversing the cavity. This led to about 40-fold increase of the
effective engine temperature, resulting in a near-unity engine efficiency.
Moreover, the observed engine output power grew quadratically with respect to
the atomic injection rate. Our work can be utilized in quantum mechanical heat
transfer as well as in boosting engine powers, opening a pathway to development
of photomechanical devices that run on quantum coherence embedded in heat
baths.
"
206,"  Collisional Brownian engines have been proposed as alternatives for
nonequilibrium nanoscale engines. However, most studies have focused on the
simpler overdamped case, leaving the role of inertia much less explored. In
this work, we introduce the idea of collisional engines to underdamped Brownian
particles, where each stage is sequentially subjected to a distinct driving
force. A careful comparison between the performance of underdamped and
overdamped Brownian work-to-work engines has been undertaken. The results show
that underdamped Brownian engines generally outperform their overdamped
counterparts. A key difference is the presence of a resonant regime in
underdamped engines, in which both efficiency and power output are enhanced
across a broad set of parameters. Our study highlights the importance of
carefully selecting dynamics and driving protocols to achieve optimal engine
performance.
"
207,"  Social Engineering is the act of manipulating individuals to perform actions
or reveal information. Social engineering tactics are widely recognized as a
significant risk to information security. The increasing digital environment
has increased the prevalence of social engineering attacks, bringing huge
threats to both people and organizations. This paper explores current deception
techniques used during social engineering attacks to understand emerging trends
and discuss effective countermeasures. It is always a good idea to have
knowledge of counter measures and risks from these increasing cyber threats. We
have also explored the types of deception attacks and role of social
engineering in Advanced Persistent Threats. Today major concern for
cybersecurity and other web related attacks is due to social engineering
attacks that is also the driving force of increasing cybercrimes worldwide. By
uncovering emerging trends and analyzing the psychological underpinnings of
these attacks this paper highlights the known deception techniques, emerging
trends and counter measures of social engineering attacks.
"
208,"  Organizations, particularly medium and large enterprises, typically today
rely heavily on complex, distributed systems to deliver critical services and
products. However, the growing complexity of these systems poses challenges in
ensuring service availability, performance, and reliability. Traditional
resilience testing methods often fail to capture modern systems' intricate
interactions and failure modes. Chaos Engineering addresses these challenges by
proactively testing how systems in production behave under turbulent
conditions, allowing developers to uncover and resolve potential issues before
they escalate into outages. Though chaos engineering has received growing
attention from researchers and practitioners alike, we observed a lack of a
comprehensive literature review. Hence, we performed a Multivocal Literature
Review (MLR) on chaos engineering to fill this research gap by systematically
analyzing 88 academic and grey literature sources published from January 2019
to April 2024. We first used the selected sources to derive a unified
definition of chaos engineering and to identify key capabilities, components,
and adoption drivers. We also developed a taxonomy for chaos engineering and
compared the relevant tools using it. Finally, we analyzed the state of the
current chaos engineering research and identified several open research issues.
"
209,"  Empirical software engineering research on production systems has brought
forth a better understanding of the software engineering process for
practitioners and researchers alike. However, only a small subset of production
systems is studied, limiting the impact of this research. While software
engineering practitioners could benefit from replicating research on their own
data, this poses its own set of challenges, since performing replications
requires a deep understanding of research methodologies and subtle nuances in
software engineering data. Given that large language models (LLMs), such as
GPT-4, show promise in tackling both software engineering- and science-related
tasks, these models could help replicate and thus democratize empirical
software engineering research.
  In this paper, we examine GPT-4's abilities to perform replications of
empirical software engineering research on new data. We study their ability to
surface assumptions made in empirical software engineering research
methodologies, as well as their ability to plan and generate code for analysis
pipelines on seven empirical software engineering papers. We perform a user
study with 14 participants with software engineering research expertise, who
evaluate GPT-4-generated assumptions and analysis plans (i.e., a list of module
specifications) from the papers. We find that GPT-4 is able to surface correct
assumptions, but struggles to generate ones that apply common knowledge about
software engineering data. In a manual analysis of the generated code, we find
that the GPT-4-generated code contains correct high-level logic, given a subset
of the methodology. However, the code contains many small implementation-level
errors, reflecting a lack of software engineering knowledge. Our findings have
implications for leveraging LLMs for software engineering research as well as
practitioner data scientists in software teams.
"
210,"  The conventional continuous quantum heat engines rely on incoherent heat
transfer with the baths and, thus, have limited capability to outperform their
classical counterparts. In this work, we introduce distinct continuous quantum
heat engines that utilize coherent heat transfer with baths, yielding
significant quantum enhancement in performance. These continuous engines,
termed as coherent engines, consist of one qutrit system and two photonic baths
and enable coherent heat transfer via two-photon transitions involving
three-body interactions between the system and hot and cold baths. The closest
quantum incoherent analogs are those that only allow incoherent heat transfer
between the qutrit and the baths via one-photon transitions relying on two-body
interactions between the system and hot or cold baths. We demonstrate that
coherent engines deliver much higher power output and a much lower
signal-to-noise ratio in power, where the latter signifies the reliability of
an engine, compared to incoherent engines. Coherent engines manifest more
non-classical features than incoherent engines because they violate the
classical thermodynamic uncertainty relation by a greater amount and for a
wider range of parameters. Importantly, coherent engines can operate close to
or at the fundamental lower limit on reliability given by the quantum version
of the thermodynamic uncertainty relation, making them highly reliable. These
genuine enhancements in performance by hundreds of folds over incoherent
engines and the saturation of the quantum limit by coherent engines are
directly attributed to its capacity to harness higher energetic coherence which
is, again, a consequence of coherent heat transfer. The experimental
feasibility of coherent engines and the improved understanding of how quantum
properties can enhance performance may find important implications in emerging
quantum technologies.
"
211,"  Researchers have recently achieved significant advances in deep learning
techniques, which in turn has substantially advanced other research
disciplines, such as natural language processing, image processing, speech
recognition, and software engineering. Various deep learning techniques have
been successfully employed to facilitate software engineering tasks, including
code generation, software refactoring, and fault localization. Many papers have
also been presented in top conferences and journals, demonstrating the
applications of deep learning techniques in resolving various software
engineering tasks. However, although several surveys have provided overall
pictures of the application of deep learning techniques in software
engineering, they focus more on learning techniques, that is, what kind of deep
learning techniques are employed and how deep models are trained or fine-tuned
for software engineering tasks. We still lack surveys explaining the advances
of subareas in software engineering driven by deep learning techniques, as well
as challenges and opportunities in each subarea. To this end, in this paper, we
present the first task-oriented survey on deep learning-based software
engineering. It covers twelve major software engineering subareas significantly
impacted by deep learning techniques. Such subareas spread out the through the
whole lifecycle of software development and maintenance, including requirements
engineering, software development, testing, maintenance, and developer
collaboration. As we believe that deep learning may provide an opportunity to
revolutionize the whole discipline of software engineering, providing one
survey covering as many subareas as possible in software engineering can help
future research push forward the frontier of deep learning-based software
engineering more systematically.
"
212,"  We analyse the experimental time series of internal pressure in a four
cylinder spark ignition engine. In our experiment, performed for different
spark advance angles, apart from usual cyclic changes of engine pressure we
observed oscillations. These oscillations are with longer time scales ranging
from one to several hundred engine cycles depending on engine working
conditions. Basing on the pressure time dependence we have calculated the heat
released per cycle. Using the time series of heat release to calculate the
correlation coarse-grained entropy we estimated the noise level for internal
combustion process. Our results show that for a smaller spark advance angle the
system is more deterministic.
"
213,"  The engineering and design of self-organizing systems with emergent
properties is a long-standing problem in the field of complex and distributed
systems, for example in the engineering of self-organizing Multi-Agent Systems.
The problem of combining engineering with emergence - to find a simple rule for
a complex pattern - equals the problem of science in general. Therefore the
answers are similar, and the scientific method is the general solution to the
problem of engineering complex systems.
"
214,"  The name 'sorption heat engines' is proposed for simple negative entropy
generators that are driven by thermal cycling and work on alternating
adsorption and desorption. These generators are in general not explicitly
recognized as heat engines. Their mechanism is applicable to the fields of
engineering, physics, chemistry, geology, and biology, in particular the origin
of life. Four kinds of sorption heat engines are distinguished depending on the
occurrence of changes in the adsorbent or adsorbate during the thermal cycle.
"
215,"  Spreadsheet engineering adapts the lessons of software engineering to
spreadsheets, providing eight principles as a framework for organizing
spreadsheet programming recommendations. Spreadsheets raise issues inadequately
addressed by software engineering. Spreadsheets are a powerful modeling
language, allowing strategic rapid model change, and enabling exploratory
modeling. Spreadsheets users learn slowly with experience because they focus on
the problem domain not programming. The heterogeneity of spreadsheet users
requires a taxonomy to guide recommendations. Deployment of best practices is
difficult and merits research.
"
216,"  In previous work we described how the process algebra based language PSF can
be used in software engineering, using the ToolBus, a coordination architecture
also based on process algebra, as implementation model. In this article we
summarize that work and describe the software development process more formally
by presenting the tools we use in this process in a CASE setting, leading to
the PSF-ToolBus software engineering environment. We generalize the refine step
in this environment towards a process algebra based software engineering
workbench of which several instances can be combined to form an environment.
"
217,"  An approach that provides students with an ability to transfer learning in
physics and mathematics to the engineering-technology courses through
e-teaching and e-learning process is proposed. E-modules of courses in
mathematics, physics, computer systems technology, and electrical and
telecommunications engineering technology have been developed. These modules
being used in the Blackboard and Web-based communications systems create a
virtual interdisciplinary learning community, which helps the students to
transfer knowledge from physics and mathematics to their study in engineering
technology.
"
218,"  This paper describes the use of the Levels of Conceptual Interoperability
Model (LCIM) as a framework for conceptual modeling and its descriptive and
prescriptive uses. LCIM is applied to show its potential and shortcomings in
the current simulation interoperability approaches, in particular the High
Level Architecture (HLA) and Base Object Models (BOM). It emphasizes the need
to apply rigorous engineering methods and principles and replace ad-hoc
approaches.
"
219,"  Based on the old but famous distinction between ""in the small"" and ""in the
large"" software development, at Nancy Universit\'e, UHP Nancy 1, we experience
for a while software engineering education thanks to actual project
engineering. This education method has the merit to enable students to discover
and to overcome actual problems when faced to a large project which may be
conducted by a large development team. The mode of education is a simulation of
an actual software engineering project as encountered in ""real life\'e""
activities.
"
220,"  Regulatory compliance is increasingly being addressed in the practice of
requirements engineering as a main stream concern. This paper points out a gap
in the theoretical foundations of regulatory compliance, and presents a theory
that states (i) what it means for requirements to be compliant, (ii) the
compliance problem, i.e., the problem that the engineer should resolve in order
to verify whether requirements are compliant, and (iii) testable hypotheses
(predictions) about how compliance of requirements is verified. The theory is
instantiated by presenting a requirements engineering framework that implements
its principles, and is exemplified on a real-world case study.
"
221,"  Dynamic web applications such as mashups need efficient access to web data
that is only accessible via entity search engines (e.g. product or publication
search engines). However, most current mashup systems and applications only
support simple keyword searches for retrieving data from search engines. We
propose the use of more powerful search strategies building on so-called query
generators. For a given set of entities query generators are able to
automatically determine a set of search queries to retrieve these entities from
an entity search engine. We demonstrate the usefulness of query generators for
on-demand web data integration and evaluate the effectiveness and efficiency of
query generators for a challenging real-world integration scenario.
"
222,"  This article is about the author's experience with developing and teaching an
introductory electrical engineering course for students of Faculty (department)
of Information Technology of a Russian university. The curriculum of this
department conforms to typical computer science curricula of US engineering
schools with a noticeable omission of comparable electrical engineering
courses. When developing the course, I did my best to pay attention to learning
preferences of the department's student body. I also hoped to contribute to a
degree to meeting labor market demands for developers of electrical engineering
CAD software. As for inspiration, I was enchanted with ideas of the Mead &
Conway revolution, albeit indirectly related to my enterprise.
"
223,"  The nature of software re-engineering is to improve or transform existing
software so it can be understood, controlled and reused as new software. Needs,
the necessity of re-engineering software has greatly increased. The system
software has become obsolete no longer used in architecture, platform they're
running, stable and consistent they support the development and support needs
change. Software re-engineering is vital to restore and reuse the things
inherent in the existing software, put the cost of software maintenance to the
lowest in the control and establish a basis for the development of software in
the future.
"
224,"  Requirements Engineering Methods (REMs) support Requirements Engineering (RE)
tasks, from elicitation, through modeling and analysis, to validation and
evolution of requirements. Despite the growing interest to design, validate and
teach REMs, it remains unclear what components REMs should have. A
classification framework for REMs is proposed. It distinguishes REMs based on
the domain-independent properties of their components. The classification
framework is intended to facilitate (i) analysis, teaching and extension of
existing REMs, (ii) engineering and validation of new REMs, and (iii)
identifying research challenges in REM design. The framework should help
clarify further the relations between REM and other concepts of interest in and
to RE, including Requirements Problem and Solution, Requirements Modeling
Language, and Formal Method.
"
225,"  This manuscript aims to develop and describe gain scheduling control concept
for a gas turbine engine which drives a variable pitch propeller. An
architecture for gain-scheduling control is developed that controls the
turboshaft engine for large thrust commands in stable fashion with good
performance. Fuel ow and propeller pitch angle are the two control inputs of
the system. New stability proof has been developed for gain scheduling control
of gas turbine engines using global linearization and LMI techniques. This
approach guarantees absolute stability of the closed loop gas turbine engine
systems with gain-scheduling controllers.
"
226,"  A quantum-mechanical analog of the Carnot engine reversibly working at
vanishing temperature, shortly termed the quantum-mechanical Carnot engine, is
discussed. A general formula for the efficiency of such an engine with an
arbitrary confining potential is presented. Its expression is purely given in
terms of the structure of the energy spectrum. Dependency of the efficiency on
the form of a potential as an analog of the working material in thermodynamics
implies nonuniversality of the engine. This may be due to the absence of the
second-law-like principle in pure-state quantum mechanics.
"
227,"  Based on quantum thermodynamic processes, we make a quantum-mechanical (QM)
extension of the typical heat engine cycles, such as the Carnot, Brayton, Otto,
and Diesel cycles, etc. The temperature is not included in these QM engine
cycles, as lies in the fact that the concept of energy is well-defined in
quantum mechanics, temperature \emph{a priori} is not. These QM engine cycles
are implemented by an ideal or interacting system with an arbitrary number of
particles confined in an arbitrary power-law trap. As a result, a relation
between the quantum adiabatic exponent and trap exponent is found. The
efficiency of a given QM engine cycle is similar to that of its classical
counterpart, thereby identifying the universality of the efficiency.
"
228,"  This paper presents research on current industry practices with respect to
requirements engineering as implemented within software development companies
in New Zealand. A survey instrument is designed and deployed. The results are
analysed and compared against what is internationally considered ""best
practice"" and previous New Zealand and Australian studies. An attempt is made
to assess the requirements engineering capability of New Zealand companies
using both formal and informal frameworks.
"
229,"  Modern spreadsheet systems can be used to implement complex spreadsheet
applications including data sheets, customized user forms and executable
procedures written in a scripting language. These applications are often
developed by practitioners that do not follow any software engineering practice
and do not produce any design documentation. Thus, spreadsheet applications may
be very difficult to be maintained or restructured. In this position paper we
present in a nutshell two reverse engineering techniques and a tool that we are
currently realizing for the abstraction of conceptual data models and business
logic models.
"
230,"  Thermodynamics places a limit on the efficiency of heat engines, but not on
their output power or on how the power and efficiency change with the engine's
cycle time. In this manuscript, we develop a geometrical description of the
power and efficiency as a function of the cycle time, applicable to an
important class of heat engine models. This geometrical description is used to
design engine protocols that attain both the maximal power and maximal
efficiency at the fast driving limit. Furthermore, using this method we also
prove that no protocol can exactly attain the Carnot efficiency at non-zero
power.
"
231,"  We studied the Szilard engine under the effect of generalized uncertainty
principle (GUP). In the classical Szilard engine, the work done by the engine
is reduced by the GUP effect via a modified ideal gas law. In the quantum
Szilard engine, the correction comes from the shifted eigen energy due to the
nonlinear momentum dependence. We studied its effect on both bosonic and
fermionic molecules.
"
232,"  In this paper the analogy between a thermal engine and a waterwheel is
developed in details, showing that the analogous of the flow of water in an
hydraulic engine is the flow of entropy in a thermal one. This analogy mat
serve to analyse in details the aspects of a thermal engine that are quite
distant from pupils' intuition. The discussion is complemented by an
illustration of the working of thermal and hydraulic engines at the microscopic
level, thus furnishing a view of what heat and work are at this level, and
introducing the statistical and information aspects of entropy. Both hydraulic
and thermal non-ideal engines are also discussed.
"
233,"  The aim of this paper is to determine lost works in a molecular engine and
compare results with macro (classical) heat engines. Firstly, irreversible
thermodynamics are reviewed for macro and molecular cycles. Secondly,
irreversible thermodynamics approaches are applied for a quantum heat engine
with -1/2 spin system. Finally, lost works are determined for considered system
and results show that macro and molecular heat engines obey same limitations.
Moreover, a quantum thermodynamic approach is suggested in order to explain the
results previously obtained from an atomic viewpoint.
"
234,"  We construct an entangled quantum Otto engine based on spin-1/2 systems
undergoing Dzyaloshinski-Moriya (DM) interaction within a varying magnetic
field. We investigate the influence of the DM interaction on basic
thermodynamic quantities, including heat transfer, work done, and efficiency
and find that the DM interaction importantly influences the engine's
thermodynamics. We obtain an expression for engine efficiency, finding it to
yield the same efficiency for antiferromagnetic and ferromagnetic coupling. A
new upper bound, nontrivially consistent with the second law of thermodynamics,
is derived for engine efficiency in the case of non-zero DM interaction.
"
235,"  The overall objective of Requirements Engineering is to specify, in a
systematic way, a system that satisfies the expectations of its stakeholders.
Despite tremendous effort in the field, recent studies demonstrate this is
objective is not always achieved. In this paper, we discuss one particularly
challenging factor to Requirements Engineering projects, namely the change of
requirements. We proposes a rough discussion of how learning and time explain
requirements changes, how it can be introduced as a key variable in the
formulation of the Requirements Engineering Problem, and how this induces costs
for a requirements engineering project. This leads to a new discipline of
requirements economics.
"
236,"  With the explosion in the field of Big Data and introduction of more
stringent emission norms every three to five years, automotive companies must
not only continue to enhance the fuel economy ratings of their products, but
also provide valued services to their customers such as delivering engine
performance and health reports at regular intervals. A reasonable solution to
both issues is installing a variety of sensors on the engine. Sensor data can
be used to develop fuel economy features and will directly indicate engine
performance. However, mounting a plethora of sensors is impractical in a very
cost-sensitive industry. Thus, virtual sensors can replace physical sensors by
reducing cost while capturing essential engine data.
"
237,"  Descartes is a tool that implements extreme mutation operators and aims at
finding pseudo-tested methods in Java projects. It leverages the efficient
transformation and runtime features of PIT. The demonstration compares
Descartes with Gregor, the default mutation engine provided by PIT, in a set of
real open source projects. It considers the execution time, number of mutants
created and the relationship between the mutation scores produced by both
engines. It provides some insights on the main features exposed by Descartes.
"
238,"  In this position paper, we elaborate on the possibilities and needs to
integrate Design Thinking into Requirements Engineering. We draw from our
research and project experiences to compare what is understood as Design
Thinking and Requirements Engineering considering their involved artifacts. We
suggest three approaches for tailoring and integrating Design Thinking and
Requirements Engineering with complementary synergies and point at open
challenges for research and practice.
"
239,"  Studying materials informatics from a data mining perspective can be
beneficial for manufacturing and other industrial engineering applications.
Predictive data mining technique and machine learning algorithm are combined to
design a knowledge discovery system for the selection of engineering materials
that meet the design specifications. Predictive method-Naive Bayesian
classifier and Machine learning Algorithm - Pearson correlation coefficient
method were implemented respectively for materials classification and
selection. The knowledge extracted from the engineering materials data sets is
proposed for effective decision making in advanced engineering materials design
applications.
"
240,"  The maximum efficiency of autonomous engines with finite chemical potential
difference is investigated. We show that without a particular type of
singularity autonomous engines cannot attain the Carnot efficiency. In
addition, we demonstrate that a special autonomous engine with the singularity
attains the Carnot efficiency even if it is macroscopic. Our results clearly
illustrate that the singularity plays a crucial role for the maximum efficiency
of autonomous engines.
"
241,"  Software is a key component of solutions for 21st Century problems. These
problems are often ""wicked"", complex, and unpredictable. To provide the best
possible solution, millennial software engineers must be prepared to make
ethical decisions, thinking critically, and acting systematically. This reality
demands continuous changes in educational systems and curricula delivery, as
misjudgment might have serious social impact. This study aims to investigate
and reflect on Software Engineering (SE) Programs, proposing a conceptual
framework for analyzing cyberethics education and a set of suggestions on how
to integrate it into the SE undergraduate curriculum.
"
242,"  We propose quantum engines powered entirely by the quantum measurement
process. Our theoretical construction of the engine requires no work from the
system Hamiltonian, and takes energy only from the process of observation to
move a particle against a force. We present results for the work done and the
efficiency for different values of the engine parameters. Feedback is required
for optimal performance. We find that unit efficiency can be approached when
one measurement outcome prepares the initial state of the next engine cycle,
while the other outcomes leave the original state nearly unchanged.
"
243,"  At Sandia National Laboratories, the Software Engineering and Research
Department seeks to provide sustainable career pathways for research software
engineers (RSEs). The conceptual model for our organization follows what we
call a Research, Develop, and Deploy (RDD) workflow pattern, enabling RSEs to
partner with research and deployment specialists. We argue that this
interdisciplinary model allows our department to act as an incubator and an
accelerator for impactful ideas. We describe these tactics and our experiences
as a RSE team in a scientific computing center.
"
244,"  We are research software engineers and team members in the Department of
Software Engineering and Research at Sandia National Laboratories, an
organization which aims to advance software engineering in the domain of
computational science. Our team hopes to promote processes and principles that
lead to quality, rigor, correctness, and repeatability in the implementation of
algorithms and applications in scientific software for high consequence
applications. We use our experience to argue that there is a readily achievable
set of software tools and best practices with a large return on investment that
can be imparted upon scientific researchers that will remarkably improve the
quality of software and, as a result, the quality of research.
"
245,"  Heat engines are fundamental physical objects to develop nonequilibrium
thermodynamics. The thermodynamic performance of the heat engine is determined
by the choice of cycle and time-dependence of parameters. Here, we propose a
systematic numerical method to find a heat engine cycle to optimize some target
functions. We apply the method to heat engines with slowly varying parameters
and show that the method works well. Our numerical method is based on the
genetic algorithm which is widely applied to various optimization problems.
"
246,"  In this paper, we describe the development and operating principles of an
immersive virtual reality (VR) visualisation environment that is designed
around the use of consumer VR headsets in an existing wide area motion capture
suite. We present two case studies in the application areas of visualisation of
scientific and engineering data. Each of these case studies utilise a different
render engine, namely a custom engine for one case and a commercial game engine
for the other. The advantages and appropriateness of each approach are
discussed along with suggestions for future work.
"
247,"  This paper describes the realization of the Ontology Web Search Engine. The
Ontology Web Search Engine is realizable as independent project and as a part
of other projects. The main purpose of this paper is to present the Ontology
Web Search Engine realization details as the part of the Semantic Web Expert
System and to present the results of the Ontology Web Search Engine
functioning. It is expected that the Semantic Web Expert System will be able to
process ontologies from the Web, generate rules from these ontologies and
develop its knowledge base.
"
248,"  We study the extended thermodynamical properties of the charged black hole in
Horndeski model with the $k$-essence sector. Then we define a holographic heat
engine via the black hole. We compute the engine efficiency in the large
temperature limit and compare the results with the exact ones. With the given
specified parameters in the rectangular engine, the higher order coupling
suppresses the engine efficiencies.
"
249,"  A quantum computer (QC) can solve many computational problems more
efficiently than a classic one. The field of QCs is growing: companies (such as
DWave, IBM, Google, and Microsoft) are building QC offerings. We position that
software engineers should look into defining a set of software engineering
practices that apply to QC's software. To start this process, we give examples
of challenges associated with testing such software and sketch potential
solutions to some of these challenges.
"
250,"  Digitization not only affects society, it also requires a redefinition of the
location of computer science and computer scientists, as the science journalist
Yogeshwar suggests. Since all official aspects of digitalization are based on
software, this article is intended to attempt to redefine the role of software
engineering and its research. Software-based products, systems or services are
influencing all areas of life and are a critical component and central
innovation driver of digitization in all areas of life. Scientifically, there
are new opportunities and challenges for software engineering as a driving
discipline in the development of any technical innovation. However, the chances
must not be sacrificed to the competition for bibliometric numbers as an end in
themselves.
"
251,"  Despite its idealizations, thermodynamics has proven its power as a
predictive theory for practical applications. In particular, the Curzon-Ahlborn
efficiency provides a benchmark for any real engine operating at maximal power.
Here we further develop the analysis of endoreversible Otto engines. For a
generic class of working mediums, whose internal energy is proportional to some
power of the temperature, we find that no engine can achieve the Carnot
efficiency at finite power. However, we also find that for the specific example
of photonic engines the efficiency at maximal power is larger than the
Curzon-Ahlborn efficiency.
"
252,"  We propose a quantum-enhanced heat engine with entanglement. The key feature
of our scheme is superabsorption, which facilitates enhanced energy absorption
by entangled qubits. Whereas a conventional engine with $N$ separable qubits
provides power with a scaling of $P = \Theta (N)$, our engine uses
superabsorption to provide power with a quantum scaling of $P = \Theta(N^2)$.
This quantum heat engine also exhibits a scaling advantage over classical ones
composed of $N$-particle Langevin systems. Our work elucidates the quantum
properties allowing for the enhancement of performance.
"
253,"  As a newly designated professional title, research software engineers (RSEs)
link the two worlds of software engineering and research science. They lack
clear development and training opportunities, particularly in the realm of
mentoring. In this paper, we discuss mentorship as it pertains to the unique
needs of RSEs and propose ways in which organizations and institutions can
support mentor/mentee relationships for RSEs
"
254,"  Information availability affects people's behavior and perception of the
world. Notably, people rely on search engines to satisfy their need for
information. Search engines deliver results relevant to user requests usually
without being or making themselves accountable for the information they
deliver, which may harm people's lives and, in turn, society. This potential
risk urges the development of evaluation mechanisms of bias in order to empower
the user in judging the results of search engines. In this paper, we give a
possible solution to measuring representation bias with respect to societal
features for search engines and apply it to evaluating the gender
representation bias for Google's Knowledge Graph Carousel for listing
occupations.
"
255,"  In this work, the relationship between Carnot engine and Szil\'ard engine was
discussed. By defining the available information about the temperature
difference between two heat reservoirs, the Carnot engine was found to have a
same physical essence with Szil\'ard engine: lossless conversion of available
information. Thus, a generalized Carnot's theorem for wider scope of
application can be described as ""all the available information is 100% coded
into work"".
"
256,"  We report on a lossless information engine that converts nearly all available
information from an error-free feedback protocol into mechanical work.
Combining high-precision detection at resolution of 1 nm with ultrafast
feedback control, the engine is tuned to extract the maximum work from
information on the position of a Brownian particle. We show that the work
produced by the engine achieves a bound set by a generalized second law of
thermodynamics, demonstrating for the first time the sharpness of this bound.
We validate a generalized Jarzynski equality for error-free feedback-controlled
information engines.
"
257,"  Deficit and redundancies in existing automotive product development hinder a
systems engineering based development. In this paper we discuss a methodical
procedure to eliminate deficits in the current product development and in turn
to enable the introduction of a new systems engineering based development
methodology. As the core part of our approach, we discuss how to transform an
opaque heterogeneous product development to a homogenous consistent product
development taking into account existing disciplines. Our approach paves the
way to achieve a process structure that is more amenable to verification and
validation. We show the effectiveness of our proposed solution approach on an
automotive use case.
"
258,"  In the past few years, we have observed a huge supply-demand gap for
autonomous driving engineers. The core problem is that autonomous driving is
not one single technology but rather a complex system integrating many
technologies, and no one single academic department can provide comprehensive
education in this field. We advocate to create a cross-disciplinary program to
expose students with technical background in computer science, computer
engineering, electrical engineering, as well as mechanical engineering. On top
of the cross-disciplinary technical foundation, a capstone project that
provides students with hands-on experiences of working with a real autonomous
vehicle is required to consolidate the technical foundation.
"
259,"  One of the pillars of any machine learning model is its concepts. Using
software engineering, we can engineer these concepts and then develop and
expand them. In this article, we present a SELM framework for Software
Engineering of machine Learning Models. We then evaluate this framework through
a case study. Using the SELM framework, we can improve a machine learning
process efficiency and provide more accuracy in learning with less processing
hardware resources and a smaller training dataset. This issue highlights the
importance of an interdisciplinary approach to machine learning. Therefore, in
this article, we have provided interdisciplinary teams' proposals for machine
learning.
"
260,"  Consistency checking of interdependent heterogeneous engineering artifacts,
such as requirements, specifications, and code, is a challenging task in
large-scale engineering projects. The lack of team-oriented solutions allowing
a multitude of project stakeholders to collaborate in a consistent manner is
thus becoming a critical problem. In this context, this work proposes an
approach for team-oriented consistency checking of collaboratively developed
heterogeneous engineering artifacts.
"
261,"  We present a thermodynamics experiment suitable for first year undergraduate
students employing Stirling Engines to create a demonstration of energy
transformation and to measure the mechanical efficiency of such engines. Using
an inexpensive transparent chambered Stirling Engine, students can connect
concepts such as the theoretical pressure-volume diagram with the physical
movements of the engine's pistons and the resultant useful output work of a
spinning wheel. We found the majority of students successfully complete this
experiment obtaining results similar to when performed by the authors. In
addition to the core thermodynamics lesson, this experiment incorporates DC
circuits, oscilloscopes, and data analysis so it can be integrated into a wider
undergraduate physics course to combine the teaching of multiple subjects.
"
262,"  The article describes what constitutes chemical engineering and its branches
are in plain language. It outlines what to expect when one enrolls in a
chemical engineering program as an undergraduate or graduate student. This may
include core subjects to take, skillset to master, and other essential
expertise that might be useful in the workplace. The discussion continues with
career options for enthusiastic chemical engineers and how these young and
early careers graduates could discover their reason for well-being and life
purpose as aspiring chemical engineers.
"
263,"  It is expected that scholars will continuously strengthen the depth and
breadth of theoretical research on RIS, and provide a higher theoretical upper
bound for the engineering application of RIS. While making breakthroughs in
academic research, it has also made rapid progress in engineering application
research and industrialization promotion. This paper will provide an overview
of RIS engineering applications, and make a systematic and in-depth analysis of
the challenges and candidate solutions of RIS engineering applications. Future
trends and challenges are also provided.
"
264,"  Social engineering is described as the art of manipulation. Cybercriminal use
manipulation to victims their targets using psychological principles to change
their behavior to make unconscious decisions. This study identifies the attack
and techniques used by cybercriminal to conduct social engineering attacks
within an organization. This study evaluate how social engineering attacks are
delivered, techniques used and highlights how attackers take advantage
Compromised systems. Lastly this study will also evaluate and provide the best
solutions to help mitigate social engineering attacks with an organization
"
265,"  Software engineering capabilities are increasingly important to the success
of economic and political blocs. This paper analyzes quantity and quality of
software engineering research output originating from the US, Europe, and China
over time. The results indicate that the quantity of research is increasing
across the board with Europe leading the field. Depending of the scope of the
analysis, either the US or China come in second. Regarding research quality,
Europe appears to be lagging the other blocs, with China having caught up to
and even having overtaken the US over time.
"
266,"  Heat engines cannot generally operate at maximum power and efficiency,
imposing a trade-off between the two. Here, we highlight the exact nature of
this trade-off for engines that exchange heat radiatively with a hot source. We
derive simple analytical expressions for the performance bounds of reciprocal
and nonreciprocal radiative heat engines. We also highlight that radiative
engines can achieve a better power-efficiency trade-off than linear ones. These
bounds are especially relevant for thermophotovoltaics, offering useful metrics
against which to compare device performance.
"
267,"  We investigate the performance of a Brownian heat engine working in a
heterogeneous thermal bath where the mobility fluctuates. Brownian particle is
trapped by the time-dependent harmonic potential, by changing the stiffness
coefficient and the bath temperatures, we perform a Stirling cycle. We
numerically evaluated the average work, power and efficiency. We compare our
results with the Brownian heat engine working in a homogeneous thermal bath. We
find that for the normal diffusive system, the performance of a Gaussian heat
engine serves as an upper bound. We also observe that the non-Gaussian position
distribution decreases the stochastic heat engine performance.
"
268,"  Protein engineering is an emerging field in biotechnology that has the
potential to revolutionize various areas, such as antibody design, drug
discovery, food security, ecology, and more. However, the mutational space
involved is too vast to be handled through experimental means alone. Leveraging
accumulative protein databases, machine learning (ML) models, particularly
those based on natural language processing (NLP), have considerably expedited
protein engineering. Moreover, advances in topological data analysis (TDA) and
artificial intelligence-based protein structure prediction, such as AlphaFold2,
have made more powerful structure-based ML-assisted protein engineering
strategies possible. This review aims to offer a comprehensive, systematic, and
indispensable set of methodological components, including TDA and NLP, for
protein engineering and to facilitate their future development.
"
269,"  Recommendation engine suggest content, product or services to the user by
using machine learning algorithm. This paper proposed a content-based
recommendation engine for providing video suggestion to the user based on their
previous interests and choices. We will use TF-IDF text vectorization method to
determine the relevance of words in a document. Then we will find out the
similarity between each content by calculating cosine similarity between them.
Finally, engine will recommend videos to the users based on the obtained
similarity score value. In addition, we will measure the engine's performance
by computing precision, recall, and F1 core of the proposed system.
"
270,"  The RET (Requirements Engineering and Testing) workshop series provides a
meeting point for researchers and practitioners from the two separate fields of
Requirements Engineering (RE) and Testing. The long term aim is to build a
community and a body of knowledge within the intersection of RE and Testing,
i.e., RET. The 4th workshop was co-located with the 25th International
Requirements Engineering Conference (RE'17) in Lisbon, Portugal and attracted
about 20 participants. In line with the previous workshop instances, RET 2017 o
ered an interactive setting with a keynote, an invited talk, paper
presentations, and a concluding hands-on exercise.
"
271,"  Electrical heat engines driven by the Johnson-Nyquist noise of resistors are
introduced. They utilize Coulomb's law and the fluctuation-dissipation theorem
of statistical physics that is the reverse phenomenon of heat dissipation in a
resistor. No steams, gases, liquids, photons, combustion, phase transition, or
exhaust/pollution are present here. In these engines, instead of heat
reservoirs, cylinders, pistons and valves, resistors, capacitors and switches
are the building elements. For the best performance, a large number of parallel
engines must be integrated to run in a synchronized fashion and the
characteristic size of the elementary engine must be at the 10 nanometers
scale. At room temperature, in the most idealistic case, a two-dimensional
ensemble of engines of 25 nanometer characteristic size integrated on a 2.5x2.5
cm silicon wafer with 12 Celsius temperature difference between the warm-source
and the cold-sink would produce a specific power of about 0.4 Watt. Regular and
coherent (correlated-cylinder states) versions are shown and both of them can
work in either four-stroke or two-stroke modes. The coherent engines have
properties that correspond to coherent quantum heat engines without the
presence of quantum coherence. In the idealistic case, all these engines have
Carnot efficiency, which is the highest possible efficiency of any heat engine,
without violating the second law of thermodynamics.
"
272,"  We present a unified perspective on nonequilibrium heat engines by
generalizing nonlinear irreversible thermodynamics. For tight-coupling heat
engines, a generic constitutive relation of nonlinear response accurate up to
the quadratic order is derived from the symmetry argument and the stall
condition. By applying this generic nonlinear constitutive relation to
finite-time thermodynamics, we obtain the necessary and sufficient condition
for the universality of efficiency at maximum power, which states that a
tight-coupling heat engine takes the universal efficiency at maximum power up
to the quadratic order if and only if either the engine symmetrically interacts
with two heat reservoirs or the elementary thermal energy flowing through the
engine matches the characteristic energy of the engine. As a result, we solve
the following paradox: On the one hand, the universal quadratic term in the
efficiency at maximum power for tight-coupling heat engines proved as a
consequence of symmetry [M. Esposito, K. Lindenberg, and C. Van den Broeck,
Phys. Rev. Lett. 102, 130602 (2009); S. Q. Sheng and Z. C. Tu, Phys. Rev. E 89,
012129 (2014)]; On the other hand, two typical heat engines including the
Curzon-Ahlborn endoreversible heat engine [F. L. Curzon and B. Ahlborn, Am. J.
Phys. 43, 22 (1975)] and the Feynman ratchet [Z. C. Tu, J. Phys. A 41, 312003
(2008)] recover the universal efficiency at maximum power regardless of any
symmetry.
"
273,"  Context: Understanding the types of software engineering practices and
techniques used in the industry is important. There is a wide spectrum in terms
of the types and maturity of software engineering practices conducted in each
software team and company. To characterize the type of software engineering
practices conducted in software firms, a variety of surveys have been conducted
in different countries and regions. Turkey has a vibrant software industry and
it is important to characterize and understand the state of software
engineering practices in this industry. Objective: Our objective is to
characterize and grasp a high-level view on type of software engineering
practices in the Turkish software industry. Among the software engineering
practices that we have surveyed in this study are the followings: software
requirements, design, development, testing, maintenance, configuration
management, release planning and support practices. The current survey is the
most comprehensive of its type ever conducted in the context of Turkish
software industry. Method: To achieve the above objective, we systematically
designed an online survey with 46 questions based on our past experience in the
Canadian and Turkish contexts and using the Software Engineering Body of
Knowledge (SWEBOK). 202 practicing software engineers from the Turkish software
industry participated in the survey. We analyze and report in this paper the
results of the questions. Whenever possible, we also compare the trends and
results of our survey with the results of a similar 2010 survey conducted in
the Canadian software industry.
"
274,"  A hyperaccreting stellar-mass black hole has been proposed as the candidate
central engine of gamma-ray bursts (GRBs). The rich observations of GRBs by
\textit{Fermi} and \textit{Swift} make it possible to constrain the central
engine model by comparing the model predications against data. This paper is
dedicated to studying the temporal evolution of central engine parameters for
both prompt emission and afterglow phases. We consider two jet launching
mechanisms, i.e., $\nu\bar{\nu}$ annihilations and the Blandford-Znajek (BZ)
processe, and obtain analytical solutions to these two models. We then
investigate the black hole central engine parameters, such as the jet power,
the dimensionless entropy $\eta$, and the central engine parameter $\mu_0=\eta
(1+\sigma_0)$ (where $\sigma_0$ is the initial magnetization of the engine) at
the base of the jet. The black hole may be spun up by accretion, or spun down
by the BZ process, leaving imprints in GRB lightcurves. Usually, a BZ jet is
more powerful and is likely responsible for the late time central engine
activities. However, an initially non-spinning black hole central engine may
first launch a thermal ""fireball"" via neutrino annihilations, and then launch a
Poynting-flux-dominated jet via the BZ process. Multiple flares, giant bumps,
and plateaus in GRB afterglows can be well produced as the result of late time
accretion onto the black hole.
"
275,"  Information on the web is prodigious; searching relevant information is
difficult making web users to rely on search engines for finding relevant
information on the web. Search engines index and categorize web pages according
to their contents using crawlers and rank them accordingly. For given user
query they retrieve millions of webpages and display them to users according to
web-page rank. Every search engine has their own algorithms based on certain
parameters for ranking web-pages. Search Engine Optimization (SEO) is that
technique by which webmasters try to improve ranking of their websites by
optimizing it according to search engines ranking parameters. It is the aim of
this research to identify the most popular SEO techniques used by search
engines for ranking web-pages and to establish their importance for indexing
and categorizing web data. The research tries to establish that using more SEO
parameters in ranking algorithms helps in retrieving better search results thus
increasing user satisfaction.
  In the accomplished research, a web based Meta search engine is proposed to
aggregates search results from different search engines and rank web-pages
based on new page ranking algorithm which will assign heuristic page rank to
web-pages based on SEO parameters such as title tag, Meta description, sitemap
etc. The research also provides insight into techniques which webmasters can
use for better ranking their websites in Google and Bing.
  Initial results has shown that using certain SEO parameters in present
ranking algorithm helps in retrieving more useful results for user queries.
These results generated from Meta search engine outperformed existing search
engines in terms of better retrieved search results and high precision.
"
276,"  Traffic engineering has been used in IP and MPLS networks for a number of
years as a tool for making more efficient use of capacity by explicitly routing
traffic demands where there is available network capacity that would otherwise
be unused. Deployment of traffic engineering imposes an additional layer of
complexity to network design and operations, however, which has constrained its
adoption for capacity optimisation. The rise of Software Defined Networks has
renewed interest in the use of traffic engineering approaches leveraging
centralised network controllers for capacity optimisation. We argue that future
networks can realise the network optimisation benefits of traffic engineering
without incurring additional network complexity through closer coupling between
the network and the applications and services using the network. This can be
achieved through leveraging a network- and traffic-aware controller to directly
influence where applications and services site or locate service instances,
i.e. which implicitly impacts the paths that the applications or services
traffic demands take through the network. We call this technique Demand
Engineering. Demand Engineering has the additional benefit of providing an
admission control capability, i.e. which can provide an assurance that network
SLAs can be met. In this paper we describe the concept of Demand Engineering,
give examples of its use and present simulation results indicating its
potential benefits. We also compare demand engineering to traffic engineering.
"
277,"  In this paper, the dynamic couplings among different inputs and outputs of a
highly nonlinear spark ignition (SI) engine control problem during the cold
start phase are evaluated by using relative gain array (RGA) technique. First,
based on the experimental data, a multi-input multi-output model is developed
to represent the engine dynamics. Second, the coupling among different inputs
and outputs of the model is evaluated by using RGA technique in both open-loop
and closed-loop structures. The results show that although there is an internal
coupling within the engine dynamics in the open-loop framework, the closed-loop
engine controller can be designed using a decentralized structure without
significantly affecting the system performance. In the next step, based on a
nonlinear physics-based model of the engine, a set of single-input
single-output (SISO) adaptive second order discrete sliding mode controllers
(DSMC) are designed to drive the states of the engine model to their
pre-defined desired trajectories and minimize the tailpipe HC emission, under
modelling and implementation (data sampling and quantization) uncertainties.
The real-time test results on an actual engine control unit (ECU) show that the
proposed SISO adaptive second order DSMC provides accurate and fast tracking
performance for the highly nonlinear and internally coupled engine dynamics,
and can meet the HC emission limit by controlling the engine-out emissions and
exhaust catalytic converter efficiency.
"
278,"  Assisting users by suggesting completed queries as they type is a common
feature of search systems known as query auto-completion. A query
auto-completion engine may use prior signals and available information (e.g.,
user is anonymous, user has a history, user visited the site before the search
or not, etc.) in order to improve its recommendations. There are many possible
strategies for query auto-completion and a challenge is to design one optimal
engine that considers and uses all available information. When different
strategies are used to produce the suggestions, it becomes hard to rank these
heterogeneous suggestions. An alternative strategy could be to aggregate
several engines in order to enhance the diversity of recommendations by
combining the capacity of each engine to digest available information
differently, while keeping the simplicity of each engine. The main objective of
this research is therefore to find such mixture of query completion engines
that would beat any engine taken alone. We tackle this problem under the
bandits setting and evaluate four strategies to overcome this challenge.
Experiments conducted on three real datasets show that a mixture of engines can
outperform a single engine.
"
279,"  An engine producing a finite power at the ideal (Carnot) efficiency is a
dream engine, which is not prohibited by the thermodynamic second law. Some
years ago, a two-terminal heat engine with {\em asymmetric} Onsager
coefficients in the linear response regime was suggested by Benenti, Saito, and
Casati [Phys. Rev. Lett. {\bf 106}, 230602 (2011)], as a prototypical system to
make such a dream come true with non-divergent system parameter values.
However, such a system has never been realized in spite of many trials. Here,
we introduce an exactly solvable two-terminal Brownian heat engine with the
asymmetric Onsager coefficients in the presence of a Lorenz (magnetic) force.
Nevertheless, we show that the dream engine regime cannot be accessible even
with the asymmetric Onsager coefficients, due to an instability keeping the
engine from reaching its steady state. This is consistent with recent trade-off
relations between the engine power and efficiency, where the (cyclic)
steady-state condition is implicitly presumed. We conclude that the
inaccessibility to the dream engine originates from the steady-state constraint
on the engine.
"
280,"  Accessing to required data on the internet is wide via search engines in the
last two decades owing to the huge amount of available data and the high rate
of new data is generating daily. Accordingly, search engines are encouraged to
make the most valuable existing data on the web searchable. Knowing how to
handle a large amount of data in each step of a search engines' procedure from
crawling to indexing and ranking is just one of the challenges that a
professional search engine should solve. Moreover, it should also have the best
practices in handling users' traffics, state-of-the-art natural language
processing tools, and should also address many other challenges on the edge of
science and technology. As a result, evaluating these systems is too
challenging due to the level of internal complexity they have, and is crucial
for finding the improvement path of the existing system. Therefore, an
evaluation procedure is a normal subsystem of a search engine that has the role
of building its roadmap. Recently, several countries have developed national
search engine programs to build an infrastructure to provide special services
based on their needs on the available data of their language on the web. This
research is conducted accordingly to enlighten the advancement path of two
Iranian national search engines: Yooz and Parsijoo in comparison with two
international ones, Google and Bing. Unlike related work, it is a
semi-automatic method to evaluate the search engines at the first pace.
Eventually, we obtained some interesting results which based on them the
component-based improvement roadmap of national search engines could be
illustrated concretely.
"
281,"  Low-temperature-differential (LTD) Stirling heat engines are able to operate
with a small temperature difference between low-temperature heat reservoirs
that exist in our daily lives, and thus they are considered to be an important
sustainable energy technology. The author recently proposed a nonlinear
dynamics model of an LTD kinematic Stirling heat engine to study the rotational
mechanism of the engine [Y. Izumida, EPL \textbf{121}, 50004 (2018)]. This
paper presents our study of the nonequilibrium thermodynamics analysis of this
engine model, where a load torque against which the engine does work is
introduced. We demonstrate that the engine's rotational state is in a
quasi-linear response regime where the thermodynamic fluxes show a linear
dependency on the thermodynamic forces. Significantly, it is found that the
response coefficients of the quasi-linear relations are symmetric, which is
similar to Onsager symmetry in linear irreversible thermodynamics. Based on
these relations, we formulate the maximum efficiency of the engine. We also
elucidate that the symmetry of the quasi-linear response coefficients emerges
by reflecting the (anti-)reciprocity of the Onsager kinetic coefficients
identified for the relaxation dynamics of the engine in the vicinity of an
equilibrium state. We expect that the present study paves the way for
developing nonequilibrium thermodynamics of autonomous heat engines described
as a nonlinear dynamical system.
"
282,"  Context: Advancements in machine learning (ML) lead to a shift from the
traditional view of software development, where algorithms are hard-coded by
humans, to ML systems materialized through learning from data. Therefore, we
need to revisit our ways of developing software systems and consider the
particularities required by these new types of systems. Objective: The purpose
of this study is to systematically identify, analyze, summarize, and synthesize
the current state of software engineering (SE) research for engineering ML
systems. Method: I performed a systematic literature review (SLR). I
systematically selected a pool of 141 studies from SE venues and then conducted
a quantitative and qualitative analysis using the data extracted from these
studies. Results: The non-deterministic nature of ML systems complicates all SE
aspects of engineering ML systems. Despite increasing interest from 2018
onwards, the results reveal that none of the SE aspects have a mature set of
tools and techniques. Testing is by far the most popular area among
researchers. Even for testing ML systems, engineers have only some tool
prototypes and solution proposals with weak experimental proof. Many of the
challenges of ML systems engineering were identified through surveys and
interviews. Researchers should conduct experiments and case studies, ideally in
industrial environments, to further understand these challenges and propose
solutions. Conclusion: The results may benefit (1) practitioners in foreseeing
the challenges of ML systems engineering; (2) researchers and academicians in
identifying potential research questions; and (3) educators in designing or
updating SE courses to cover ML systems engineering.
"
283,"  Engineering Thermodynamics has been the core course of many science and
engineering majors around the world, including energy and power, mechanical
engineering, civil engineering, aerospace, cryogenic refrigeration, food
engineering, chemical engineering, and environmental engineering, among which
gas power cycle is one of the important contents. However, many Engineering
Thermodynamics textbooks focus only on evaluating the thermal efficiency of gas
power cycle, while the important concept of specific cycle work is ignored.
Based on the generalized temperature-entropy diagram for the gas power cycles
proposed by the authors, an ideal Otto cycle and an ideal Miller-Diesel cycle
are taking as examples for the thermodynamic analyses of gas power cycles. The
optimum compression ratio (or the pressure ratio) for the maximum specific
cycle work or the maximum mean effective pressure is analyzed and determined.
The ideal Otto and the ideal Miller-Diesel cycles, and also other gas power
cycles for movable applications, are concluded that the operation under the
maximum specific cycle work or the maximum mean effective pressure, instead of
under the higher efficiency, is more economic and more reasonable. We concluded
that the very important concept, i.e., the optimum compression (or pressure)
ratio for the gas power cycles, should be emphasized in the Engineering
Thermodynamics teaching process and in the latter revised or the newly edited
textbooks, in order to better guide the engineering applications.
"
284,"  A subset of type Ic supernovae (SNe Ic), broad-lined SNe Ic (SNe Ic-bl), show
unusually high kinetic energies ($\sim 10^{52}$ erg) which cannot be explained
by the energy supplied by neutrinos alone. Many SNe Ic-bl have been observed in
coincidence with long gamma-ray bursts (GRBs) which suggests a connection
between SNe and GRBs. A small fraction of core-collapse supernovae (CCSNe) form
a rapidly-rotating and strongly-magnetized protoneutron star (PNS), a
proto-magnetar. Jets from such magnetars can provide the high kinetic energies
observed in SNe Ic-bl and also provide the connection to GRBs. In this work we
use the jetted outflow produced in a 3D CCSN simulation from a consistently
formed proto-magnetar as the central engine for full-star explosion
simulations. We extract a range of central engine parameters and find that the
extracted engine energy is in the range of $6.231 \times 10^{51}-1.725 \times
10^{52}$ erg, the engine time-scale in the range of $0.479-1.159$ s and the
engine half-opening angle in the range of $\sim 9-19^{\circ}$. Using these as
central engines, we perform 2D special-relativistic (SR) hydrodynamic (HD) and
radiation transfer simulations to calculate the corresponding light curves and
spectra. We find that these central engine parameters successfully produce SNe
Ic-bl which demonstrates that jets from proto-magnetars can be viable engines
for SNe Ic-bl. We also find that only the central engines with smaller opening
angles ($\sim 10^{\circ}$) form a GRB implying that GRB formation is likely
associated with narrower jet outflows and Ic-bl's without GRBs may be
associated with wider outflows.
"
285,"  Macroscopic cyclic heat engines have been a major motivation for the
emergence of thermodynamics. In the last decade, cyclic heat engines that have
large fluctuations and operate at finite time were studied within the more
modern framework of stochastic thermodynamics. The second law for such heat
engines states that the efficiency cannot be larger than the Carnot efficiency.
The concept of cyclic active heat engines for a system in the presence of
hidden dissipative degrees of freedom, also known as a nonequilibrium or active
reservoir, has also been studied in theory and experiment. Such active engines
show rather interesting behavior such as an ``efficiency'' larger than the
Carnot bound. They are also likely to play an important role in future
developments, given the ubiquitous presence of active media. However, a general
second law for cyclic active heat engines has been lacking so far. Here, upon
using a known inequality in stochastic stochastic thermodynamics for the excess
entropy, we obtain a general second law for active heat engines, which does not
involve the energy dissipation of the hidden degrees of freedom and is
expressed in terms of quantities that can be measured directly from the
observable degrees of freedom. Besides heat and work, our second law contains
an information-theoretic term, which allows an active heat engine to extract
work beyond the limits valid for a passive heat engine. To obtain a second law
expressed in terms of observable variables in the presence of hidden degrees of
freedom we introduce a coarse-grained excess entropy and prove a fluctuation
theorem for this quantity.
"
286,"  It is investigated whether non-Markovianity, i.e., the memory effects
resulting from the coupling of the system to its environment, can be beneficial
for the performance of quantum heat engines. Specifically, two physical models
are considered. The first one is a well known single-qubit Otto engine; the
non-Markovian behaviour is there implemented by replacing standard
thermalization strokes with so-called extremal thermal operations which cannot
be realized without the memory effects. The second one is a three-stroke engine
in which the cycle consists of two extremal thermal operations and a single
qubit rotation. It is shown that the non-Markovian Otto engine can generate
more work-per-cycle for a given efficiency than its Markovian counterpart,
whereas performance of both setups is superior to the three-stroke engine.
Furthermore, both the non-Markovian Otto engine and the three-stroke engine can
reduce the work fluctuations in comparison with the Markovian Otto engine, with
their relative advantage depending on the performance target. This demonstrates
the beneficial influence of non-Markovianity on both the average performance
and the stability of operation of quantum heat engines.
"
287,"  Search engines decide what we see for a given search query. Since many people
are exposed to information through search engines, it is fair to expect that
search engines are neutral. However, search engine results do not necessarily
cover all the viewpoints of a search query topic, and they can be biased
towards a specific view since search engine results are returned based on
relevance, which is calculated using many features and sophisticated algorithms
where search neutrality is not necessarily the focal point. Therefore, it is
important to evaluate the search engine results with respect to bias. In this
work we propose novel web search bias evaluation measures which take into
account the rank and relevance. We also propose a framework to evaluate web
search bias using the proposed measures and test our framework on two popular
search engines based on 57 controversial query topics such as abortion, medical
marijuana, and gay marriage. We measure the stance bias (in support or
against), as well as the ideological bias (conservative or liberal). We observe
that the stance does not necessarily correlate with the ideological leaning,
e.g. a positive stance on abortion indicates a liberal leaning but a positive
stance on Cuba embargo indicates a conservative leaning. Our experiments show
that neither of the search engines suffers from stance bias. However, both
search engines suffer from ideological bias, both favouring one ideological
leaning to the other, which is more significant from the perspective of
polarisation in our society.
"
288,"  Context: Advances in technical debt research demonstrate the benefits of
applying the financial debt metaphor to support decision-making in software
development activities. Although decision-making during requirements
engineering has significant consequences, the debt metaphor in requirements
engineering is inadequately explored. Objective: We aim to conceptualize how
the debt metaphor applies to requirements engineering by organizing concepts
related to practitioners' understanding and managing of requirements
engineering debt (RED). Method: We conducted two in-depth expert interviews to
identify key requirements engineering debt concepts and construct a survey
instrument. We surveyed 69 practitioners worldwide regarding their perception
of the concepts and developed an initial analytical theory. Results: We propose
a RED theory that aligns key concepts from technical debt research but
emphasizes the specific nature of requirements engineering. In particular, the
theory consists of 23 falsifiable propositions derived from the literature, the
interviews, and survey results. Conclusions: The concepts of requirements
engineering debt are perceived to be similar to their technical debt
counterpart. Nevertheless, measuring and tracking requirements engineering debt
are immature in practice. Our proposed theory serves as the first guide toward
further research in this area.
"
289,"  Context: Software development is human-centric and vulnerable to human error.
Human errors are errors in the human thought process. To ensure software
quality, practitioners must understand how to manage these human errors.
Organizations often change the requirements engineering process to prevent
human errors from occurring or to mitigate the harm caused when those errors do
occur. While there are studies on human error management in other disciplines,
research on the prevention and mitigation of human errors in software
engineering, and requirements engineering specifically, are limited. The
software engineering studies do not provide strong results about the types of
changes that are most effective in requirements engineering. Objective: The
goal of this paper is to develop a taxonomy of human error prevention and
mitigation strategies based on data from requirements engineering
professionals. Method: We performed a qualitative analysis of two practitioner
surveys on requirements engineering practices to identify and classify
strategies for the prevention and mitigation of human errors. Results: We
organized the human error management strategies into a taxonomy based on
whether they primarily affect People, Processes, or the Environment. Inside
each high-level category, we further organized the strategies into low-level
classes. More than 50% of the reported strategies require a change in Process,
23% require a change in Environment, 21% require a change in People, with the
remaining 5% too ambiguous to classify. In addition, more than 50\% of the
strategies focus on Management activities. Conclusions: The Human Error
Management Taxonomy provides a systematic classification and organization of
strategies for prevention and mitigation of human errors in requirements
engineering. This systematic organization provides a foundation upon which
research can build.
"
290,"  We demonstrate that the efficiency of effective negative temperature-based
quantum Otto engines, already known to outperform their traditional
counterparts operating with positive-temperature thermal reservoirs, can be
further improved by terminating the isochoric strokes before the working
substance reaches perfect equilibrium with its environment. Our investigation
encompasses both Markovian and non-Markovian dynamics during these finite-time
isochoric processes while considering a weak coupling between the working
substance and the reservoirs. We assess the performance of these engines as
they undergo a transition from the Markovian to the non-Markovian regime using
two figures of merit: maximum achievable efficiency at a certain finite time
during the isochoric heating stroke, and overall performance of the engine over
an extended period during the transient phase of this stroke. We show that the
maximum efficiency increases with the increase of non-Markovianity. However,
the overall engine performance decreases as non-Markovianity increases.
Additionally, we discover the existence of effective negative temperature-based
necessarily transient quantum Otto engines. These engines operate within an
extended operational domain, reaching into temperature ranges where
conventional effective negative temperature-based quantum Otto engines, which
rely on perfect thermalization during the isochoric strokes, are unable to
function. Furthermore, this extended operational domain of an effective
negative temperature-based necessarily transient quantum Otto engine increases
as non-Markovianity becomes more pronounced.
"
291,"  The increasing popularity of AI, particularly Large Language Models (LLMs),
has significantly impacted various domains, including Software Engineering.
This study explores the integration of AI tools in software engineering
practices within a large organization. We focus on ANZ Bank, which employs over
5000 engineers covering all aspects of the software development life cycle.
This paper details an experiment conducted using GitHub Copilot, a notable AI
tool, within a controlled environment to evaluate its effectiveness in
real-world engineering tasks. Additionally, this paper shares initial findings
on the productivity improvements observed after GitHub Copilot was adopted on a
large scale, with about 1000 engineers using it. ANZ Bank's six-week experiment
with GitHub Copilot included two weeks of preparation and four weeks of active
testing. The study evaluated participant sentiment and the tool's impact on
productivity, code quality, and security. Initially, participants used GitHub
Copilot for proposed use-cases, with their feedback gathered through regular
surveys. In the second phase, they were divided into Control and Copilot
groups, each tackling the same Python challenges, and their experiences were
again surveyed. Results showed a notable boost in productivity and code quality
with GitHub Copilot, though its impact on code security remained inconclusive.
Participant responses were overall positive, confirming GitHub Copilot's
effectiveness in large-scale software engineering environments. Early data from
1000 engineers also indicated a significant increase in productivity and job
satisfaction.
"
292,"  Digital twin (DT) technology has received immense attention over the years
due to the promises it presents to various stakeholders in science and
engineering. As a result, different thematic areas of DT have been explored.
This is no different in specific fields such as manufacturing, automation, oil
and gas, and civil engineering, leading to fragmented approaches for
field-specific applications. The civil engineering industry is further
disadvantaged in this regard as it relies on external techniques by other
engineering fields for its DT adoption. A rising consequence of these
extensions is a concentrated application of DT to the operations and
maintenance phase. On another spectrum, Building Information Modeling (BIM) is
pervasively utilized in the planning/design phase, and the transient nature of
the construction phase remains a challenge for its DT adoption. In this paper,
we present a phase-based development of DT in the Architecture, Engineering,
and Construction industry. We commence by presenting succinct expositions on DT
as a concept and as a service, and establish a five-level scale system.
Furthermore, we present separately a systematic literature review of the
conventional techniques employed at each civil engineering phase. In this
regard, we identified enabling technologies such as computer vision for
extended sensing and the Internet of Things for reliable integration.
Ultimately, we attempt to reveal DT as an important tool across the entire life
cycle of civil engineering projects, and nudge researchers to think more
holistically in their quest for the integration of DT for civil engineering
applications.
"
293,"  This paper introduces a quantum heat engine model that utilizes an ultracold
atomic gas coupled with a nanomechanical mirror. The mirror's vibration induces
an opto-mechanical sideband in the control field, affecting the behavior of the
cold gas and subsequently influencing the output radiation of the engine. The
model incorporates mirror vibration while omitting cavity confinement,
establishing a bridge between a multi-level atom-laser interacting system that
plays with coherences and the mechanical vibration of the nanomechanical
mirror, which jointly function as heat engines. Three distinct heat engine
configurations are proposed: the first involves a vibration-free three-level
$\Lambda$-type system, the second introduces nanomechanical vibration to the
three-level $\Lambda$-type system, and the third constitutes a composite engine
that combines the previous setups along with nanomechanical vibration. The
spectral brightness of a three-level heat engine is diminished with mirror
vibration, whereas for a composite heat engine, there is a slight enhancement
in the brightness peak. However, the maximum brightness is attained when there
is no vibration. Comparisons between the proposed model and an ideal system are
made regarding entropy balance, adhering to the constraints of the second law
of thermodynamics. The model observed that when subjected to mirror vibration,
the proposed heat engines diverged from the characteristics expected in an
ideal heat engine.
"
294,"  Considerable efforts have been made at the high school level to encourage
girls to pursue software engineering careers and raise awareness about
diversity within the field. Similarly, software companies have become more
active in diversity and inclusion (D&I) topics, aiming to create more inclusive
work environments. However, the way diversity and inclusion are approached
inside software engineering university education remains less clear. This study
investigates the current state of D&I in software engineering education and
faculties in Finland. An online survey (N=30) was conducted among Finnish
software engineering university teachers to investigate which approaches and
case examples of D&I are most commonly used by software engineering teachers in
Finland. In addition, it was researched how software engineering teachers
perceive the importance of D&I in their courses. As a result of the
quantitative and thematic analysis, a framework to identify attitudes,
approaches, challenges and pedagogical strategies when implementing D&I themes
in software engineering education is presented. This framework also offers a
process for integrating D&I themes for the curriculum or at the faculty level.
The findings of this study emphasize that there is a continuing need for
diverse-aware education and training. The results underline the responsibility
of universities to ensure that future professionals are equipped with the
necessary skills and knowledge to promote D&I in the field of software
engineering.
"
295,"  Large Language Models (LLMs) have significantly advanced software engineering
(SE) tasks, with prompt engineering techniques enhancing their performance in
code-related areas. However, the rapid development of foundational LLMs such as
the non-reasoning model GPT-4o and the reasoning model o1 raises questions
about the continued effectiveness of these prompt engineering techniques. This
paper presents an extensive empirical study that reevaluates various prompt
engineering techniques within the context of these advanced LLMs. Focusing on
three representative SE tasks, i.e., code generation, code translation, and
code summarization, we assess whether prompt engineering techniques still yield
improvements with advanced models, the actual effectiveness of reasoning models
compared to non-reasoning models, and whether the benefits of using these
advanced models justify their increased costs. Our findings reveal that prompt
engineering techniques developed for earlier LLMs may provide diminished
benefits or even hinder performance when applied to advanced models. In
reasoning LLMs, the ability of sophisticated built-in reasoning reduces the
impact of complex prompts, sometimes making simple zero-shot prompting more
effective. Furthermore, while reasoning models outperform non-reasoning models
in tasks requiring complex reasoning, they offer minimal advantages in tasks
that do not need reasoning and may incur unnecessary costs. Based on our study,
we provide practical guidance for practitioners on selecting appropriate prompt
engineering techniques and foundational LLMs, considering factors such as task
requirements, operational costs, and environmental impact. Our work contributes
to a deeper understanding of effectively harnessing advanced LLMs in SE tasks,
informing future research and application development.
"
296,"  This paper presents a physics-informed neural network (PINN) approach for
monitoring the health of diesel engines. The aim is to evaluate the engine
dynamics, identify unknown parameters in a ""mean value"" model, and anticipate
maintenance requirements. The PINN model is applied to diesel engines with a
variable-geometry turbocharger and exhaust gas recirculation, using measurement
data of selected state variables. The results demonstrate the ability of the
PINN model to predict simultaneously both unknown parameters and dynamics
accurately with both clean and noisy data, and the importance of the
self-adaptive weight in the loss function for faster convergence. The input
data for these simulations are derived from actual engine running conditions,
while the outputs are simulated data, making this a practical case study of
PINN's ability to predict real-world dynamical systems. The mean value model of
the diesel engine incorporates empirical formulae to represent certain states,
but these formulae may not be generalizable to other engines. To address this,
the study considers the use of deep neural networks (DNNs) in addition to the
PINN model. The DNNs are trained using laboratory test data and are used to
model the engine-specific empirical formulae in the mean value model, allowing
for a more flexible and adaptive representation of the engine's states. In
other words, the mean value model uses both the PINN model and the DNNs to
represent the engine's states, with the PINN providing a physics-based
understanding of the engine's overall dynamics and the DNNs offering a more
engine-specific and adaptive representation of the empirical formulae. By
combining these two approaches, the study aims to offer a comprehensive and
versatile approach to monitoring the health and performance of diesel engines.
"
297,"  Web Engineering is the application of systematic, disciplined and
quantifiable approaches to development, operation, and maintenance of Web-based
applications. It is both a pro-active approach and a growing collection of
theoretical and empirical research in Web application development. This paper
gives an overview of Web Engineering by addressing the questions: a) why is it
needed? b) what is its domain of operation? c) how does it help and what should
it do to improve Web application development? and d) how should it be
incorporated in education and training? The paper discusses the significant
differences that exist between Web applications and conventional software, the
taxonomy of Web applications, the progress made so far and the research issues
and experience of creating a specialisation at the master's level. The paper
reaches a conclusion that Web Engineering at this stage is a moving target
since Web technologies are constantly evolving, making new types of
applications possible, which in turn may require innovations in how they are
built, deployed and maintained.
"
298,"  One may define a complex system as a system in which phenomena emerge as a
consequence of multiscale interaction among the system's components and their
environments. The field of Complex Systems is the study of such
systems--usually naturally occurring, either bio-logical or social. Systems
Engineering may be understood to include the conceptualising and building of
systems that consist of a large number of concurrently operating and
interacting components--usually including both human and non-human elements. It
has become increasingly apparent that the kinds of systems that systems
engineers build have many of the same multiscale characteristics as those of
naturally occurring complex systems. In other words, systems engineering is the
engineering of complex systems. This paper and the associated panel will
explore some of the connections between the fields of complex systems and
systems engineering.
"
299,"  The performance in finite time of a discrete heat engine with internal
friction is analyzed. The working fluid of the engine is composed of an
ensemble of noninteracting two level systems. External work is applied by
changing the external field and thus the internal energy levels. The friction
induces a minimal cycle time. The power output of the engine is optimized with
respect to time allocation between the contact time with the hot and cold baths
as well as the adiabats. The engine's performance is also optimized with
respect to the external fields. By reversing the cycle of operation a heat pump
is constructed. The performance of the engine as a heat pump is also optimized.
By varying the time allocation between the adiabats and the contact time with
the reservoir a universal behavior can be identified. The optimal performance
of the engine when the cold bath is approaching absolute zero is studied. It is
found that the optimal cooling rate converges linearly to zero when the
temperature approaches absolute zero.
"
300,"  In order to describe quantum heat engines, here we systematically study
isothermal and isochoric processes for quantum thermodynamic cycles. Based on
these results the quantum versions of both the Carnot heat engine and the Otto
heat engine are defined without ambiguities. We also study the properties of
quantum Carnot and Otto heat engines in comparison with their classical
counterparts. Relations and mappings between these two quantum heat engines are
also investigated by considering their respective quantum thermodynamic
processes. In addition, we discuss the role of Maxwell's demon in quantum
thermodynamic cycles. We find that there is no violation of the second law,
even in the existence of such a demon, when the demon is included correctly as
part of the working substance of the heat engine.
"
301,"  We consider a class of quantum heat engines consisting of two subsystems
interacting via a unitary transformation and coupled to two separate baths at
different temperatures $T_h > T_c$. The purpose of the engine is to extract
work due to the temperature difference. Its dynamics is not restricted to the
near equilibrium regime. The engine structure is determined by maximizing the
extracted work under various constraints. When this maximization is carried out
at finite power, the engine dynamics is described by well-defined temperatures
and satisfies the local version of the second law. In addition, its efficiency
is bounded from below by the Curzon-Ahlborn value $1-\sqrt{T_c/T_h}$ and from
above by the Carnot value $1-(T_c/T_h)$. The latter is reached|at finite
power|for a macroscopic engine, while the former is achieved in the equilibrium
limit $T_h\to T_c$. When the work is maximized at a zero power, even a small
(few-level) engine extracts work right at the Carnot efficiency.
"
302,"  In this article we introduce the concept and the first implementation of a
lightweight client-server-framework as middleware for distributed computing. On
the client side an installation without administrative rights or privileged
ports can turn any computer into a worker node. Only a Java runtime environment
and the JAR files comprising the workflow client are needed. To connect all
clients to the engine one open server port is sufficient. The engine submits
data to the clients and orchestrates their work by workflow descriptions from a
central database. Clients request new task descriptions periodically, thus the
system is robust against network failures. In the basic set-up, data up- and
downloads are handled via HTTP communication with the server. The performance
of the modular system could additionally be improved using dedicated file
servers or distributed network file systems.
  We demonstrate the design features of the proposed engine in real-world
applications from mechanical engineering. We have used this system on a compute
cluster in design-of-experiment studies, parameter optimisations and robustness
validations of finite element structures.
"
303,"  Over the past years there has been quite a lot of activity in the algebraic
community about using algebraic methods for providing support to model-driven
software engineering. The aim of this workshop is to gather researchers working
on the development and application of algebraic methods to provide rigorous
support to model-based software engineering. The topics relevant to the
workshop are all those related to the use of algebraic methods in software
engineering, including but not limited to: formally specifying and verifying
model-based software engineering concepts and related ones (MDE, UML, OCL, MOF,
DSLs, ...); tool support for the above; integration of formal and informal
methods; and theoretical frameworks (algebraic, rewriting-based, category
theory-based, ...). The workshop's main goal is to examine, discuss, and relate
the existing projects within the algebraic community that address common
open-issues in model-driven software engineering.
"
304,"  As opposed to more mature subjects, software engineering lacks general
theories to establish its foundations as a discipline. The Essence Theory of
software engineering (Essence) has been proposed by the Software Engineering
Methods and Theory (SEMAT) initiative. Essence goal is to develop a
theoretically sound basis for software engineering practice and its wide
adoption. Essence is yet far from reaching academic and industry adoption.
Reasons include a struggle to foresee its utilization potential and the lack of
tools implementing it. SEMAT Accelerator (SematAcc) is a Web-positioning tool
for a software engineering endeavor, which implements the SEMAT's Essence
kernel. SematAcc allows using Essence, thus helping to understand it. The tool
enables teaching, adopting, and researching Essence in controlled experiments
and case studies.
"
305,"  A control software verification framework for gas turbine engines is
developed. A stability proof is presented for gain scheduled closed-loop engine
system based on global linearization and linear matrix inequality (LMI)
techniques. Using convex optimization tools, a single quadratic Lyapunov
function is computed for multiple linearizations near equilibrium points of the
closed-loop system. With the computed stability matrices, ellipsoid invariant
sets are constructed, which are used efficiently for DGEN turbofan engine
control code stability analysis. Then a verifiable linear gain scheduled
controller for DGEN engine is developed based on formal methods, and tested on
the engine virtual test bench. Simulation results show that the developed
verifiable gain scheduled controller is capable of regulating the engine in a
stable fashion with proper tracking performance.
"
306,"  Thinking of todays web search scenario which is mainly keyword based, leads
to the need of effective and meaningful search provided by Semantic Web.
Existing search engines are vulnerable to provide relevant answers to users
query due to their dependency on simple data available in web pages. On other
hand, semantic search engines provide efficient and relevant results as the
semantic web manages information with well defined meaning using ontology. A
Meta-Search engine is a search tool that forwards users query to several
existing search engines and provides combined results by using their own page
ranking algorithm. SemanTelli is a meta semantic search engine that fetches
results from different semantic search engines such as Hakia, DuckDuckGo,
SenseBot through intelligent agents. This paper proposes enhancement of
SemanTelli with improved snippet analysis based page ranking algorithm and
support for image and news search.
"
307,"  It is shown that in theories of gravity where the cosmological constant is
considered a thermodynamic variable, it is natural to use black holes as heat
engines. Two examples are presented in detail using AdS charged black holes as
the working substance. We notice that for static black holes, the maximally
efficient traditional Carnot engine is also a Stirling engine. The case of
negative cosmological constant supplies a natural realization of these engines
in terms of the field theory description of the fluids to which they are
holographically dual. We first propose a precise picture of how the traditional
thermodynamic dictionary of holography is extended when the cosmological
constant is dynamical and then conjecture that the engine cycles can be
performed by using renormalization group flow. We speculate about the existence
of a natural dual field theory counterpart to the gravitational thermodynamic
volume.
"
308,"  We have performed an extensive analysis of a single particle stochastic heat
engine constructed by manipulating a Brownian particle in a time dependent
harmonic potential. The cycle consists of two isothermal steps at different
temperatures and two adiabatic steps similar to that of a Carnot engine. The
engine shows qualitative differences in inertial and overdamped regimes. All
the thermodynamic quantities, including efficiency, exhibit strong fluctuations
in a time periodic steady state. The fluctuations of stochastic efficiency
dominate over the mean values even in the quasistatic regime. Interestingly,
our system acts as an engine provided the temperature difference between the
two reservoirs is greater than a finite critical value which in turn depends on
the cycle time and other system parameters. This is supported by our analytical
results carried out in the quasistatic regime. Our system works more reliably
as an engine for large cycle times. By studying various model systems we
observe that the operational characteristics are model dependent. Our results
clearly rules out any universal relation between efficiency at maximum power
and temperature of the baths. We have also verified fluctuation relations for
heat engines in time periodic steady state.
"
309,"  Internet is fast becoming critically important to commerce, industry and
individuals. Search Engine (SE) is the most vital component for communication
network and also used for discover information for users or people. Search
engine optimization (SEO) is the process that is mostly used to increasing
traffic from free, organic or natural listings on search engines and also helps
to increase website ranking. It includes techniques like link building,
directory submission, classified submission etc. but SMO, on the other hand, is
the process of promoting your website on social media platforms. It includes
techniques like RSS feeds, social news and bookmarking sites, video and
blogging sites, as well as social networking sites, such as Facebook, Twitter,
Google+, Tumblr, Pinterest, Instagram etc.Social media optimization is becoming
increasingly important for search engine optimization, as search engines are
increasingly utilizing the recommendations of users of social networks to rank
pages in the search engine result pages. Since it is more difficult to tip the
influence the search engines in this way. Social Media Optimization (SMO) may
also use to generate traffic on a website, promote your business at the center
of social marketing place and increase ranking.
"
310,"  In this paper we introduce a knowledge engine, which learns and shares
knowledge representations, for robots to carry out a variety of tasks. Building
such an engine brings with it the challenge of dealing with multiple data
modalities including symbols, natural language, haptic senses, robot
trajectories, visual features and many others. The \textit{knowledge} stored in
the engine comes from multiple sources including physical interactions that
robots have while performing tasks (perception, planning and control),
knowledge bases from the Internet and learned representations from several
robotics research groups.
  We discuss various technical aspects and associated challenges such as
modeling the correctness of knowledge, inferring latent information and
formulating different robotic tasks as queries to the knowledge engine. We
describe the system architecture and how it supports different mechanisms for
users and robots to interact with the engine. Finally, we demonstrate its use
in three important research areas: grounding natural language, perception, and
planning, which are the key building blocks for many robotic tasks. This
knowledge engine is a collaborative effort and we call it RoboBrain.
"
311,"  We apply the time-dependent decoherence-free subspace theory to a Markovian
open quantum system in order to present a novel proposal for quantum-state
engineering program. By quantifying the purity of the quantum state, we verify
that the quantum-state engineering process designed via our method is
completely unitary within any total engineering time. Even though the controls
on the open quantum system are not perfect, the asymptotic purity is still
robust. Owing to its ability to completely resist decoherence and the lack of
restraint in terms of the total engineering time, our proposal is suitable for
multitask quantum-state engineering program. Therefore, this proposal is not
only useful for achieving the quantum-state engineering program experimentally,
it also helps us build both a quantum simulation and quantum information
equipment in reality.
"
312,"  Engineering software for robotics applications requires multidomain and
application-specific solutions. Model-driven engineering and modeling language
integration provide means for developing specialized, yet reusable models of
robotics software architectures. Code generators transform these platform
independent models into executable code specific to robotic platforms.
Generative software engineering for multidomain applications requires not only
the integration of modeling languages but also the integration of validation
mechanisms and code generators. In this paper we sketch a conceptual model for
code generator composition and show an instantiation of this model in the
MontiArc- Automaton framework. MontiArcAutomaton allows modeling software
architectures as component and connector models with different component
behavior modeling languages. Effective means for code generator integration are
a necessity for the post hoc integration of applicationspecific languages in
model-based robotics software engineering.
"
313,"  This paper presents an approach to identify efficient techniques used in Web
Search Engine Optimization (SEO). Understanding SEO factors which can influence
page ranking in search engine is significant for webmasters who wish to attract
large number of users to their website. Different from previous relevant
research, in this study we developed an intelligent Meta search engine which
aggregates results from various search engines and ranks them based on several
important SEO parameters. The research tries to establish that using more SEO
parameters in ranking algorithms helps in retrieving better search results thus
increasing user satisfaction. Initial results generated from Meta search engine
outperformed existing search engines in terms of better retrieved search
results with high precision.
"
314,"  Within the growing domain of software engineering in the automotive sector,
the number of used tools, processes, methods and languages has increased
distinctly in the past years. To be able to choose proper methods for
particular development use cases, factors like the intended use, key-features
and possible limitations have to be evaluated. This requires a taxonomy that
aids the decision making. An analysis of the main existing taxonomies revealed
two major deficiencies: the lack of the automotive focus and the limitation to
particular engineering method types. To face this, a graphical taxonomy is
proposed based on two well-established engineering approaches and enriched with
additional classification information. It provides a self-evident and
-explanatory overview and comparison technique for engineering methods in the
automotive domain. The taxonomy is applied to common automotive engineering
methods. The resulting diagram classifies each method and enables the reader to
select appropriate solutions for given project requirements.
"
315,"  We introduce a simple two-level heat engine to study the efficiency in the
condition of the maximum power output, depending on the energy levels from
which the net work is extracted. In contrast to the quasi-statically operated
Carnot engine whose efficiency reaches the theoretical maximum, recent research
on more realistic engines operated in finite time has revealed other classes of
efficiency such as the Curzon-Ahlborn efficiency maximizing the power output.
We investigate yet another side with our heat engine model, which consists of
pure relaxation and net work extraction processes from the population
difference caused by different transition rates. Due to the nature of our
model, the time-dependent part is completely decoupled from the other terms in
the generated work. We derive analytically the optimal condition for transition
rates maximizing the generated power output and discuss its implication on
general premise of realistic heat engines. In particular, the optimal engine
efficiency of our model is different from the Curzon-Ahlborn efficiency,
although they share the universal linear and quadratic coefficients at the
near-equilibrium limit. We further confirm our results by taking an alternative
approach in terms of the entropy production at hot and cold reservoirs.
"
316,"  The paper at hand studies the heat engine provided by black holes in the
presence of massive gravity. The main motivation is to investigate the effects
of massive gravity on different properties of the heat engine. It will be shown
that massive gravity parameters and graviton's mass modify the efficiency of
engine on a significant level. Furthermore, it will be shown that it is
possible to have the heat engine for non-spherical black holes in massive
gravity and we study the effects of topological factor on properties of the
heat engine. Surprisingly, it will be shown that the highest efficiency for the
heat engine belongs to black holes with hyperbolic horizon, while the lowest
one belongs to spherical black holes.
"
317,"  One source of software project challenges and failures is the systematic
errors introduced by human cognitive biases. Although extensively explored in
cognitive psychology, investigations concerning cognitive biases have only
recently gained popularity in software engineering (SE) research. This paper
therefore systematically maps, aggregates and synthesizes the literature on
cognitive biases in software engineering to generate a comprehensive body of
knowledge, understand state of the art research and provide guidelines for
future research and practise. Focusing on bias antecedents, effects and
mitigation techniques, we identified 65 articles, which investigate 37
cognitive biases, published between 1990 and 2016. Despite strong and
increasing interest, the results reveal a scarcity of research on mitigation
techniques and poor theoretical foundations in understanding and interpreting
cognitive biases. Although bias-related research has generated many new
insights in the software engineering community, specific bias mitigation
techniques are still needed for software professionals to overcome the
deleterious effects of cognitive biases on their work.
"
318,"  Core-collapse supernova science is now entering an era where engine models
are beginning to make both qualitative and quantitative predictions. Although
the evidence in support of the convective engine for core-collapse supernova
continues to grow, it is difficult to place quantitative constraints on this
engine. Some studies have made specific predictions for the remnant
distribution from the convective engine, but the results differ between
different groups. Here we use a broad parameterization for the supernova engine
to understand the differences between distinct studies. With this broader set
of models, we place error bars on the remnant mass and basic yields from the
uncertainties in the explosive engine. We find that, even with only 3
progenitors and a narrow range of explosion energies, we can produce a wide
range of remnant masses and nucleosynthetic yields.
"
319,"  Self-adaptive software systems are often structured into an adaptation engine
that manages an adaptable software by operating on a runtime model that
represents the architecture of the software (model-based architectural
self-adaptation). Despite the popularity of such approaches, existing exemplars
provide application programming interfaces but no runtime model to develop
adaptation engines. Consequently, there does not exist any exemplar that
supports developing, evaluating, and comparing model-based self-adaptation off
the shelf. Therefore, we present mRUBiS, an extensible exemplar for model-based
architectural self-healing and self-optimization. mRUBiS simulates the
adaptable software and therefore provides and maintains an architectural
runtime model of the software, which can be directly used by adaptation engines
to realize and perform self-adaptation. Particularly, mRUBiS supports injecting
issues into the model, which should be handled by self-adaptation, and
validating the model to assess the self-adaptation. Finally, mRUBiS allows
developers to explore variants of adaptation engines (e.g., event-driven
self-adaptation) and to evaluate the effectiveness, efficiency, and scalability
of the engines.
"
320,"  A broad class of software engineering problems can be generalized as the
""total recall problem"". This short paper claims that identifying and exploring
total recall language processing problems in software engineering is an
important task with wide applicability.
  To make that case, we show that by applying and adapting the state of the art
active learning and text mining, solutions of the total recall problem, can
help solve two important software engineering tasks: (a) supporting large
literature reviews and (b) identifying software security vulnerabilities.
Furthermore, we conjecture that (c) test case prioritization and (d) static
warning identification can also be categorized as the total recall problem.
  The widespread applicability of ""total recall"" to software engineering
suggests that there exists some underlying framework that encompasses not just
natural language processing, but a wide range of important software engineering
tasks.
"
321,"  Although classical and quantum heat engines work on entirely different
fundamental principles, there is an underlying similarity. For instance, the
form of efficiency at optimal performance may be similar for both types of
engines. In this work, we study a three-level laser quantum heat engine
operating at maximum ecological function (EF) which represents a compromise
between the power output and the loss of power due to entropy production. We
derive analytic expressions for efficiency under the assumptions of strong
matter-field coupling and high bath temperatures. Upper and lower bounds on the
efficiency exist in case of extreme asymmetric dissipation when the ratio of
system-bath coupling constants at the hot and the cold contacts respectively
approaches, zero or infinity. These bounds have been established previously for
various classical models of Carnot-like engines. We conclude that while the
engine produces at least 75\% of the power output as compared with the maximum
power conditions, the fractional loss of power is appreciably low in case of
the engine operating at maximum EF, thus making this objective function
relevant from an environmental point of view.
"
322,"  Established heat engines in quantum regime can be modeled with various
quantum systems as working substances. For example, in the non-relativistic
case, we can model the heat engine using infinite potential well as a working
substance to evaluate the efficiency and work done of the engine. Here, we
propose quantum heat engine with a relativistic particle confined in the
one-dimensional potential well as working substance. The cycle comprises of two
isothermal processes and two potential well processes of equal width, which
forms the quantum counterpart of the known isochoric process in classical
nature. For a concrete interpretation about the relation between the quantum
observables with the physically measurable parameters (like the efficiency and
work done), we develop a link between the thermodynamic variables and the
uncertainty relation. We have used this model to explore the work extraction
and the efficiency of the heat engine for a relativistic case from the
standpoint of uncertainty relation, where the incompatible observables are the
position and the momentum operators. We are able to determine the bounds (the
upper and the lower bounds) of the efficiency of the heat engine through the
thermal uncertainty relation.
"
323,"  This paper identifies and tackles the challenges of the requirements
engineering discipline when applied to development of AI-based complex systems.
Due to their complex behaviour, there is an immanent need for a tailored
development process for such systems. However, there is still no widely used
and specifically tailored process in place to effectively and efficiently deal
with requirements suitable for specifying a software solution that uses machine
learning. By analysing the related work from software engineering and
artificial intelligence fields, potential contributions have been recognized
from agent-based software engineering and goal-oriented requirements
engineering research, as well as examples from large product development
companies. The challenges have been discussed, with proposals given how and
when to tackle them. RE4AI taxonomy has also been outlined, to inform the
tailoring of development process.
"
324,"  Analysis of the standards for the preparation of electromechanics in Ukraine
showed that the electromechanic engineer is able to solve complex specialized
problems and practical problems in a certain area of professional activity or
in the process of study. These problems are characterized by complexity and
uncertainty of conditions. The main competencies include social-personal,
general-scientific, instrumental, general-professional and
specialized-professional. A review of scientific publications devoted to the
training of electromechanics has shown that four branches of engineering are
involved in the training of electromechanical engineers: mechanical and
electrical engineering (with a common core of electromechanics), electronic
engineering and automation. The common use of the theory, methods and means of
these industries leads to the emergence of a combined field of engineering -
mechatronics. Summarizing the experience of electrical engineers professional
training in Ukraine and abroad makes it possible to determine the main
directions of their professional training modernization.
"
325,"  The efficiency of macroscopic heat engines is restricted by the second law of
thermodynamics. They can reach at most the efficiency of a Carnot engine. In
contrast, heat currents in mesoscopic heat engines show fluctuations. Thus,
there is a small probability that a mesoscopic heat engine exceeds Carnot's
maximum value during a short measurement time. We illustrate this effect using
a quantum point contact as a heat engine. When a temperature difference is
applied to a quantum point contact, the system may be utilized as a source of
electrical power under steady state conditions. We first discuss the optimal
working point of such a heat engine that maximizes the generated electrical
power and subsequently calculate the statistics for deviations of the
efficiency from its most likely value. We find that deviations surpassing the
Carnot limit are possible, but unlikely.
"
326,"  The difference between quantum isoenergetic process and quantum isothermal
process comes from the violation of the law of equipartition of energy in the
quantum regime. To reveal an important physical meaning of this fact, here we
study a special type of quantum heat engine consisting of three processes:
isoenergetic, isothermal and adiabatic processes. Therefore, this engine works
between the energy and heat baths. Combining two engines of this kind, it is
possible to realize the quantum Carnot engine. Furthermore, considering finite
velocity of change of the potential shape, here an infinite square well with
moving walls, the power output of the engine is discussed. It is found that the
efficiency and power output are both closely dependent on the initial and final
states of the quantum isothermal process. The performance of the engine cycle
is shown to be optimized by control of the occupation probability of the ground
state, which is determined by the temperature and the potential width. The
relation between the efficiency and power output is also discussed.
"
327,"  The Carnot heat engine sets an upper bound on the efficiency of a heat
engine. As an ideal, reversible engine, a single cycle must be performed in
infinite time, and so the Carnot engine has zero power. However, there is
nothing in principle forbidding the existence of a heat engine whose efficiency
approaches that of Carnot while maintaining finite power. Such an engine must
have very special properties, some of which have been discussed in the
literature, in various limits. While recent theorems rule out a large class of
engines from maintaining finite power at exactly the Carnot efficiency, the
approach to the limit still merits close study. Presented here is an exactly
solvable model of such an approach that may serve as a laboratory for
exploration of the underlying mechanisms. The equations of state have their
origins in the extended thermodynamics of electrically charged black holes.
"
328,"  We analyze an engine whose working fluid consists of a single quantum
particle, paralleling Szilard's construction of a classical single-particle
engine. Following his resolution of Maxwell's Second Law paradox using the
latter, which turned on physically instantiating the demon (control subsystem),
the quantum engine's design mirrors the classically-chaotic Szilard Map that
operates a thermodynamic cycle of measurement, thermal-energy extraction, and
memory reset. Focusing on the thermodynamic costs to observe and control the
particle and comparing these in the quantum and classical limits, we detail the
thermodynamic tradeoffs behind Landauer's Principle for
information-processing-induced thermodynamic dissipation in the quantum and
classical regimes. In particular, and as found with the classical engine, we
show that the sum of the thermodynamic costs over a cycle obeys a generalized
Landauer Principle, exactly balancing energy extraction from the heat bath.
Thus, the quantum engine obeys the Second Law. However, the quantum engine does
so via substantially different mechanisms: classically measurement and erasure
determine the thermodynamics, while in the quantum implementation the cost of
partition insertion is key.
"
329,"  As Engineering Education Research (EER) develops as a discipline it is
necessary for EER scholars to contribute to the development of learning theory
rather than simply being informed by it. It has been suggested that to do this
effectively will require partnerships between Engineering scholars and
psychologists, education researchers, including other social scientists. The
formation of such partnerships is particularly important when considering the
introduction of business-related skills into engineering curriculum designed to
prepare 21st Century Engineering Students for workplace challenges. In order to
encourage scholars beyond Engineering to engage with EER, it is necessary to
provide an introduction to the complexities of EER. With this aim in mind, this
paper provides an outline review of what is considered rigorous research from
an EER perspective as well as highlighting some of the core methodological
traditions of EER. The paper aims to facilitate further discussion between EER
scholars and researchers from other disciplines, ultimately leading to future
collaboration on innovative and rigorous EER.
"
330,"  Quantum coherences, correlations and collective effects can be harnessed to
the advantage of quantum batteries. Here, we introduce a feasible structure
engineering scheme that is applicable to spin-based open quantum batteries. Our
scheme, which builds solely upon a modulation of spin energy gaps, allows
engineered quantum batteries to exploit spin-spin correlations for mitigating
environment-induced aging. As a result of this advantage, an engineered quantum
battery can preserve relatively more energy as compared with its non-engineered
counterpart over the course of the storage phase. Particularly, the excess in
stored energy is independent of system size. This implies a scale-invariant
passive protection strategy, which we demonstrate on an engineered quantum
battery with staggered spin energy gaps. Our findings establish structure
engineering as a useful route for advancing quantum batteries, and bring new
perspectives on efficient quantum battery designs.
"
331,"  BACKGROUND: Software engineering is a human activity. People naturally make
sense of their activities and experience through storytelling. But storytelling
does not appear to have been properly studied by software engineering research.
AIM: We explore the question: what contribution can storytelling make to
human--centric software engineering research? METHOD: We define concepts,
identify types of story and their purposes, outcomes and effects, briefly
review prior literature, identify several contributions and propose next steps.
RESULTS: Storytelling can, amongst other contributions, contribute to data
collection, data analyses, ways of knowing, research outputs, interventions in
practice, and advocacy, and can integrate with evidence and arguments. Like all
methods, storytelling brings risks. These risks can be managed. CONCLUSION:
Storytelling provides a potential counter--balance to abstraction, and an
approach to retain and honour human meaning in software engineering.
"
332,"  Robert Stirling's patent for what was essentially a new type of engine to
create work from heat was submitted in 1816. Its reception was underwhelming
and although the idea was sporadically developed, it was eclipsed by the steam
engine and, later, the internal combustion engine. Today, though, the
environmentally favourable credentials of the Stirling engine principles are
driving a resurgence of interest, with modern designs using modern materials.
These themes are woven through a historically based narrative that introduces
Robert Stirling and his background, a description of his patent and the
principles behind his engine, and discusses the now popular model Stirling
engines readily available. These topical models, or alternatives made 'in
house', form a good platform for investigating some of the thermodynamics
governing the performance of engines in general.
"
333,"  The momentum conservation law is applied to analyse the dynamics of pulsejet
engine in vertical motion in a uniform gravitational field in the absence of
friction. The model predicts existence of a terminal speed given frequency of
the short pulses. The conditions that the engine does not return to the
starting position are identified. The number of short periodic pulses after
which the engine returns to the starting position is found to be independent of
the exhaust velocity and gravitational field intensity for certain frequency of
the pulses. The pulsejet engine and turbojet engine aircraft models of dynamics
are compared. Also the octopus dynamics is modelled. The paper is addressed to
intermediate undergraduate students of classical mechanics and aerospace
engineering.
"
334,"  This report documents the program and the outcomes of GI-Dagstuhl Seminar
16394 ""Software Performance Engineering in the DevOps World"".
  The seminar addressed the problem of performance-aware DevOps. Both, DevOps
and performance engineering have been growing trends over the past one to two
years, in no small part due to the rise in importance of identifying
performance anomalies in the operations (Ops) of cloud and big data systems and
feeding these back to the development (Dev). However, so far, the research
community has treated software engineering, performance engineering, and cloud
computing mostly as individual research areas. We aimed to identify
cross-community collaboration, and to set the path for long-lasting
collaborations towards performance-aware DevOps.
  The main goal of the seminar was to bring together young researchers (PhD
students in a later stage of their PhD, as well as PostDocs or Junior
Professors) in the areas of (i) software engineering, (ii) performance
engineering, and (iii) cloud computing and big data to present their current
research projects, to exchange experience and expertise, to discuss research
challenges, and to develop ideas for future collaborations.
"
335,"  Game engines provide a platform for developers to build games with an
interface tailored to handle the complexity during game development. To reduce
effort and improve quality of game development, there is a strong need to
understand and analyze the quality of game engines and their various aspects
such as API usability, code quality, code reuse and so on. To the best our
knowledge, we are not aware of any dataset that caters to game engines in the
literature. To this end, we present GE852, a dataset of 852 game engine
repositories mined from GitHub in two languages, namely Java and C++. The
dataset contains metadata of all the mined repositories including commits, pull
requests, issues and so on. We believe that our dataset can lay foundation for
empirical investigation in the area of game engines.
"
336,"  Software engineering has long studied how software developers work, building
a body of work which forms the foundation of many software engineering best
practices, tools, and theories. Recently, some developers have begun recording
videos of themselves engaged in programming tasks contributing to open source
projects, enabling them to share knowledge and socialize with other developers.
We believe that these videos offer an important opportunity for both software
engineering research and education. In this paper, we discuss the potential use
of these videos as well as open questions for how to best enable this
envisioned use. We propose creating a central repository of programming videos,
enabling analyzing and annotating videos to illustrate specific behaviors of
interest such as asking and answering questions, employing strategies, and
software engineering theories. Such a repository would offer an important new
way in which both software engineering researchers and students can understand
how software developers work.
"
337,"  The topic of microscopic heat engine has undergone intensive research in
recent years. Microscopic heat engines can exploit thermal as well as active
fluctuations to extract thermodynamic work. We investigate the properties of a
microscopic Stirling's engine that uses an active (self-propelling) particle as
a working substance, in contact with two thermal baths. It is shown that the
presence of activity leads to an enhanced performance of the engine. The
efficiency can be improved by increasing the activity strength for all cycle
time, including the non-quasistatic regime. We verify that the analytical
results agree very well with our simulations. The variation of efficiency with
the temperature difference between the two thermal baths has also been
explored. The optimum region of operation of the engine has been deduced, by
using its efficient power as a quantifier. Finally, a simple model is provided
that emulates the behaviour of a flywheel driven by this engine.
"
338,"  Finland is considered a country with a good track record in gender equality.
Whilst statistics support the notion that Finland is performing well compared
to many other countries in terms of workplace equality, there are still many
areas for improvement. This paper focuses on the problems that some women face
in obtaining software engineering roles. We report a preliminary analysis of
survey data from 252 respondents. These are mainly women who have shown an
interest in gaining programming roles by joining the Mimmit koodaa initiative,
which aims to increase equality and diversity within the software industry. The
survey sought to understand what early experiences may influence later career
choices and feelings of efficacy and confidence needed to pursue
technology-related careers. These initial findings reveal that women's feelings
of computing self-efficacy and attitudes towards software engineering are
shaped by early experiences. More negative experiences decrease the likelihood
of working in software engineering roles in the future, despite expressing an
interest in the field.
"
339,"  Representative sampling appears rare in empirical software engineering
research. Not all studies need representative samples, but a general lack of
representative sampling undermines a scientific field. This article therefore
reports a critical review of the state of sampling in recent, high-quality
software engineering research. The key findings are: (1) random sampling is
rare; (2) sophisticated sampling strategies are very rare; (3) sampling,
representativeness and randomness often appear misunderstood. These findings
suggest that software engineering research has a generalizability crisis. To
address these problems, this paper synthesizes existing knowledge of sampling
into a succinct primer and proposes extensive guidelines for improving the
conduct, presentation and evaluation of sampling in software engineering
research. It is further recommended that while researchers should strive for
more representative samples, disparaging non-probability sampling is generally
capricious and particularly misguided for predominately qualitative research.
"
340,"  This paper presents an engine able to predict jointly the real-time
concentration of the main pollutants harming people's health: nitrogen dioxyde
(NO2), ozone (O3) and particulate matter (PM2.5 and PM10, which are
respectively the particles whose size are below 2.5 um and 10 um).
  The engine covers a large part of the world and is fed with real-time
official stations measures, atmospheric models' forecasts, land cover data,
road networks and traffic estimates to produce predictions with a very high
resolution in the range of a few dozens of meters. This resolution makes the
engine adapted to very innovative applications like street-level air quality
mapping or air quality adjusted routing.
  Plume Labs has deployed a similar prediction engine to build several products
aiming at providing air quality data to individuals and businesses. For the
sake of clarity and reproducibility, the engine presented here has been built
specifically for this paper and differs quite significantly from the one used
in Plume Labs' products. A major difference is in the data sources feeding the
engine: in particular, this prediction engine does not include mobile sensors
measurements.
"
341,"  Service-orientation is a promising paradigm that enables the engineering of
large-scale distributed software systems using rigorous software development
processes. The existing problem is that every service-oriented software
development project often requires a customized development process that
provides specific service-oriented software engineering tasks in support of
requirements unique to that project. To resolve this problem and allow
situational method engineering, we have defined a set of method fragments in
support of the engineering of the project-specific service-oriented software
development processes. We have derived the proposed method fragments from the
recurring features of eleven prominent service-oriented software development
methodologies using a systematic mining approach. We have added these new
fragments to the repository of OPEN Process Framework to make them available to
software engineers as reusable fragments using this well-known method
repository.
  Keyword. Service-Oriented Software Development, OPEN Process Framework, OPF
Repository, Method Fragment, Situational Method Engineering
"
342,"  The engineering of artificial systems hosting topological excitations is at
the heart of current condensed matter research. Most of these efforts focus on
single-particle properties neglecting possible engineering routes via the
modifications of the fundamental many-body interactions. Interestingly, recent
experimental breakthroughs have shown that Coulomb interactions can be
efficiently controlled by substrate screening engineering. Inspired by this
success } we propose a simple platform in which topologically non-trivial
many-body excitations emerge solely from dielectrically-engineered Coulomb
interactions in an otherwise topologically trivial single-particle band
structure. Furthermore, by performing a realistic microscopic modeling of
screening engineering, we demonstrate how our proposal can be realized in
one-dimensional systems such as quantum-dot chains. Our results put forward
Coulomb engineering as a powerful tool to create topological excitations, with
potential applications in a variety of solid-state platforms.
"
343,"  Recent predictions for quantum-mechanical enhancements in the operation of
small heat engines have raised renewed interest in their study from both a
fundamental perspective and in view of applications. One essential question is
whether collective effects may help to carry enhancements over larger scales,
when increasing the number of systems composing the working substance of the
engine. Such enhancements may consider not only power and efficiency, that is
its performance, but, additionally, its constancy, i.e. the stability of the
engine with respect to unavoidable environmental fluctuations. We explore this
issue by introducing a many-body quantum heat engine model composed by spin
pairs working in continuous operation. We study how power, efficiency and
constancy scale with the number of spins composing the engine and introduce a
well-defined macroscopic limit where analytical expressions are obtained. Our
results predict power enhancements, both in finite-size and macroscopic cases,
for a broad range of system parameters and temperatures, without compromising
the engine efficiency, accompanied by coherence-enhanced constancy for finite
sizes. We discuss these quantities in connection to Thermodynamic Uncertainty
Relations (TUR).
"
344,"  The field of structural engineering is vast, spanning areas from the design
of new infrastructure to the assessment of existing infrastructure. From the
onset, traditional entry-level university courses teach students to analyse
structural response given data including external forces, geometry, member
sizes, restraint, etc. -- characterising a forward problem (structural
causalities $\to$ structural response). Shortly thereafter, junior engineers
are introduced to structural design where they aim to, for example, select an
appropriate structural form for members based on design criteria, which is the
inverse of what they previously learned. Similar inverse realisations also hold
true in structural health monitoring and a number of structural engineering
sub-fields (response $\to$ structural causalities). In this light, we aim to
demonstrate that many structural engineering sub-fields may be fundamentally or
partially viewed as inverse problems and thus benefit via the rich and
established methodologies from the inverse problems community. To this end, we
conclude that the future of inverse problems in structural engineering is
inexorably linked to engineering education and machine learning developments.
"
345,"  An active environment is a reservoir containing \emph{active} materials, such
as bacteria and Janus particles. Given the self-propelled motion of these
materials, powered by chemical energy, an active environment has unique,
nonequilibrium environmental noise. Recently, studies on engines that harvest
energy from active environments have attracted a great deal of attention
because the theoretical and experimental findings indicate that these engines
outperform conventional ones. Studies have explored the features of active
environments essential for outperformance, such as the non-Gaussian or
non-Markovian nature of the active noise. However, these features have not yet
been systematically investigated in a general setting. Therefore, we
systematically study the effects of the non-Gaussianity and non-Markovianity of
active noise on engine performance. We show that non-Gaussianity is irrelevant
to the performance of an engine driven by {any linear force (including a
harmonic trap) regardless of time dependency}, whereas non-Markovianity is
relevant. However, for a system driven by a general nonlinear force, both
non-Gaussianity and non-Markovianity enhance engine performance. Also, the
memory effect of an active reservoir should be considered when fabricating a
cyclic engine.
"
346,"  The civil aviation community is actively exploring and developing the
solutions of single pilot operations SPO for large commercial aircraft. Human
factors engineering research for SPO has been launched, and the research mainly
focuses on three research solutions: flight deck airborne equipment upgrade,
flight support from ground stations, and the combined SPO solution of ""flight
deck airborne equipment upgrade, flight support from ground stations"". This
paper reviews and analyzez the progress of human factors engineering research
on SPO. The preliminary research outcome tends to support the combined SPO
solution. However, the current human factors engineering research is not
comprehensive and cannot provide a complete human factors engineering solution
for SPO. For future human factors engineering research, this paper analyzes the
key human factors issues on SPO and points out the gaps in the current research
and the areas for future work. Finally, this paper puts forward an overall
strategy and recommendations for future human factors engineering research on
SPO.
"
347,"  We report an experimental demonstration of a coupled-mode heat engine in a
two-membrane-in-the-middle cavity optomechanical system. The normal mode of the
cavity-mediated strongly coupled nanoresonators is utilized as the working
medium and an Otto cycle is realized by extracting work between two phononic
thermal reservoirs. The heat engine performance is characterized in both normal
mode and bare mode pictures, which reveals that the correlation of two
membranes plays a significant role during the thermodynamic cycle. Moreover, a
straight-twin nanomechanical engine is implemented by engineering the normal
modes and operating two cylinders out-of-phase. Our results demonstrate an
essential class of heat engine for the first time in cavity optomechanical
systems and provide a novel platform for investigating heat engines of
interacting subsystems in small scales with controllability and scalability.
"
348,"  Background: Philosophers of science including Collins, Feyerabend, Kuhn and
Latour have all emphasized the importance of consensus within scientific
communities of practice. Consensus is important for maintaining legitimacy with
outsiders, orchestrating future research, developing educational curricula and
agreeing industry standards. Low consensus contrastingly undermines a field's
reputation and hinders peer review. Aim: This paper aims to investigate the
degree of consensus within the software engineering academic community
concerning members' implicit theories of software engineering. Method: A
convenience sample of 60 software engineering researchers produced diagrams
describing their personal understanding of causal relationships between core
software engineering constructs. The diagrams were then analyzed for patterns
and clusters. Results: At least three schools of thought may be forming;
however, their interpretation is unclear since they do not correspond to known
divisions within the community (e.g. Agile vs. Plan-Driven methods).
Furthermore, over one third of participants do not belong to any cluster.
Conclusion: Although low consensus is common in social sciences, the rapid pace
of innovation observed in software engineering suggests that high consensus is
achievable given renewed commitment to empiricism and evidence-based practice.
"
349,"  Gate camouflaging is a known security enhancement technique that tries to
thwart reverse engineering by hiding the functions of gates or the connections
between them. A number of works on SAT-based attacks have shown that it is
often possible to reverse engineer a circuit function by combining a
camouflaged circuit model and the ability to have oracle access to the
obfuscated combinational circuit. Especially in small circuits it is easy to
reverse engineer the circuit function in this way, but SAT-based reverse
engineering techniques provide no guarantees of recovering a circuit that is
gate-by-gate equivalent to the original design. In this work we show that an
attacker who does not know gate functions or connections of an aggressively
camouflaged circuit cannot learn the correct gate-level schematic even if able
to control inputs and probe all combinational nodes of the circuit. We then
present a stronger attack that extends SAT-based reverse engineering with fault
analysis to allow an attacker to recover the correct gate-level schematic. We
analyze our reverse engineering approach on an S-Box circuit.
"
350,"  In finite-time quantum heat engines, some work is consumed to drive a working
fluid accompanying coherence, which is called `friction'. To understand the
role of friction in quantum thermodynamics, we present a couple of finite-time
quantum Otto cycles with two different baths: Agarwal versus Lindbladian. We
solve them exactly and compare the performance of the Agarwal engine with that
of the Lindbladian engine. In particular, we find remarkable and
counterintuitive results that the performance of the Agarwal engine due to
friction can be much higher than that in the quasistatic limit with the Otto
efficiency, and the power of the Lindbladian engine can be nonzero in the
short-time limit. Based on additional numerical calculations of these outcomes,
we discuss possible origins of such differences between two engines and reveal
them. Our results imply that even with an equilibrium bath, a nonequilibrium
working fluid brings on the higher performance than what an equilibrium working
fluid does.
"
351,"  Background: The state of the art in software engineering consists of a myriad
of contributions and the gaps between them; it is difficult to characterize.
  Questions: In order to help understanding the state of the art, can we
identify gaps in our knowledge that are at a very general, widely relevant
level? Which research directions do these gaps suggest?
  Method: 54 expert interviews with senior members of the ICSE community,
evaluated qualitatively using elements of Grounded Theory Methodology.
  Results: Our understanding of complexity, of good-enoughness, and of
developers' strengths is underdeveloped. Some other relevant factors' relevance
is apparently not clear. Software engineering is not yet an evidence-based
discipline.
  Conclusion: More software engineering research should concern itself with
emergence phenomena, with how engineering tradeoffs are made, with the
assumptions underlying research works, and with creating certain taxonomies.
Such work would also allow software engineering to become more evidence-based.
"
352,"  Various quantum systems are considered as the working substance for the
analysis of quantum heat cycles and quantum refrigerators. The ongoing
technological challenge is how efficiently can a heat engine convert thermal
energy to mechanical work. The seminal work of Carnot has proposed a
fundamental upper limit-the Carnot limit on the efficiency of the heat engine.
However, the heat engines can be operated beyond the fundamental upper limit by
exploiting non-equilibrium reservoirs. Here, the change in the space structure
introduces the non-equilibrium effect. So, a question arises whether a change
in the space structure can provide any boost for the quantum engines and
refrigerators. The efficiency of the heat cycle and the coefficient of
performance (COP) of the refrigerator cycles in the non-commutative space are
analyzed here. The efficiency of the quantum heat engines gets a boost with the
change in the space structure than the traditional quantum heat engine but the
effectiveness of the non-commutative parameter is less for the efficiency
compared to the COP of the refrigerator. There is a steep boost for the
coefficient of performance of the refrigerator cycles for the non-commutative
space harmonic oscillator compared to the harmonic oscillator.
"
353,"  Organizations struggle to comply with legal requirements as well as customers
calls for better data protection. On the implementation level, incorporation of
privacy protections in products and services depends on the commitment of the
engineers who design them. We interviewed six senior engineers, who work for
globally leading IT corporations and research institutions to investigate their
motivation and ability to comply with privacy regulations. Our findings point
to a lack of perceived responsibility, control, autonomy, and frustrations with
interactions with the legal world. While we increasingly call on engineers to
go beyond functional requirements and be responsive to human values in our
increasingly technological society, we may be facing the dilemma of asking
engineers to live up to a challenge they are currently not ready to embrace.
"
354,"  Here, we show the implementation of a complete cycle of a quantum engine
fuelled by information. This engine is a quantum version of the Szilard engine,
where information is used to extract heat from the environment and fully
convert it into work. In our experiment, this work is used to make a weight,
initially in the ground state, reach its excited state. We measure the energy
and the state of each component of the engine, after each step of the cycle,
and compare them with the theoretical prediction to show that the cycle is
implemented with high precision. We also perform experiments to show that the
engine is well isolated from the environment after the heat extraction, and we
measure the entropy of the weight to show the full conversion of heat into
work. Thus, we successfully demonstrate that information can be used as a fuel
for single-reservoir engines.
"
355,"  Social engineering cyberattacks are a major threat because they often prelude
sophisticated and devastating cyberattacks. Social engineering cyberattacks are
a kind of psychological attack that exploits weaknesses in human cognitive
functions. Adequate defense against social engineering cyberattacks requires a
deeper understanding of what aspects of human cognition are exploited by these
cyberattacks, why humans are susceptible to these cyberattacks, and how we can
minimize or at least mitigate their damage. These questions have received some
amount of attention but the state-of-the-art understanding is superficial and
scattered in the literature. In this paper, we review human cognition through
the lens of social engineering cyberattacks. Then, we propose an extended
framework of human cognitive functions to accommodate social engineering
cyberattacks. We cast existing studies on various aspects of social engineering
cyberattacks into the extended framework, while drawing a number of insights
that represent the current understanding and shed light on future research
directions. The extended framework might inspire future research endeavors
towards a new sub-field that can be called Cybersecurity Cognitive Psychology,
which tailors or adapts principles of Cognitive Psychology to the cybersecurity
domain while embracing new notions and concepts that are unique to the
cybersecurity domain.
"
356,"  UML Class diagram is very important to visualize the whole software we are
working on and helps understand the whole system in the easiest way possible by
showing the system classes, its attributes, methods, and relations with other
objects. In the real world, there are two types of Class diagram engineers work
with namely 1) Forward Engineered Class Diagram (FwCD) which are hand-made as
part of the forward-looking development process, and 2). Reverse Engineered
Class Diagram (RECD) which are those diagrams that are reverse engineered from
the source code. In the software industry while working with new open software
projects it is important to know which type of class diagram it is. Which UML
diagram was used in a particular project is an important factor to be known? To
solve this problem, we propose to build a classifier that can classify a UML
diagram into FwCD or RECD. We propose to solve this problem by using a
supervised Machine Learning technique. The approach in this involves analyzing
the features that are useful in classifying class diagrams. Different Machine
Learning models are used in this process and the Random Forest algorithm has
proved to be the best out of all. Performance testing was done on 999 Class
diagrams.
"
357,"  Advanced reverse engineering tools are required to cope with the complexity
of software systems and the specific requirements of numerous different tasks
(re-architecturing, migration, evolution). Consequently, reverse engineering
tools should adapt to a wide range of situations. Yet, because they require a
large infrastructure investment, being able to reuse these tools is key. Moose
is a reverse engineering environment answering these requirements. While Moose
started as a research project 20 years ago, it is also used in industrial
projects, exposing itself to all these difficulties. In this paper we present
ModMoose, the new version of Moose. ModMoose revolves around a new meta-model,
modular and extensible; a new toolset of generic tools (query module,
visualization engine, ...); and an open architecture supporting the
synchronization and interaction of tools per task. With ModMoose, tool
developers can develop specific meta-models by reusing existing elementary
concepts, and dedicated reverse engineering tools that can interact with the
existing ones.
"
358,"  Nowadays it is inevitable to use intelligent systems to improve the
performance and optimization of different components of devices or factories.
Furthermore, it's so essential to have appropriate predictions to make better
decisions in businesses, medical studies, and engineering studies, etc. One of
the newest and most widely used of these methods is a field called Data Science
that all of the scientists, engineers, and factories need to learn and use in
their careers. This article briefly introduced data science and reviewed its
methods, especially it's usages in mechanical engineering and challenges and
ways of developing data science in mechanical engineering. In the introduction,
different definitions of data science and its background in technology
reviewed. In the following, data science methodology which is the process that
a data scientist needs to do in its works been discussed. Further, some
researches in the mechanical engineering area that used data science methods in
their studies, are reviewed. Eventually, it has been discussed according to the
subjects that have been reviewed in the article, why it is necessary to use
data science in mechanical engineering researches and projects.
"
359,"  The software ecosystem is a trust-rich part of the world. Collaboratively,
software engineers trust major hubs in the ecosystem, such as package managers,
repository services, and programming language ecosystems. This trust, however,
is often broken by vulnerabilities, ransomware, and abuse from malignant
actors.
  But what is trust? In this paper we explore, through twelve in-depth
interviews with software engineers, how they perceive trust in their daily
work. From the interviews we conclude three things. First, software engineers
make a distinction between an adoption factor and a trust factor when selecting
a package. Secondly, while in literature mostly technical factors are
considered as the main trust factors, the software engineers in this study
conclude that organizational factors are more important. Finally, we find that
different kinds of software engineers require different views on trust, and
that it is impossible to create one unified perception of trust.
  Keywords: software ecosystem trust, empirical software engineering,
TrustSECO, external software adoption, cross-sectional exploratory interview
analysis, trust perception.
"
360,"  We propose a quantum Otto cycle in a two spin-$1/2$ anisotropic XY model in a
transverse external magnetic field. We first characterize the parameter regime
that the working medium operates as an engine in the adiabatic regime. Then, we
consider finite-time behavior of the engine with and without utilizing a
shortcut to adiabaticity (STA) technique. STA schemes guarantee that the
dynamics of a system follows the adiabatic path, at the expense of introducing
an external control. We compare the performance of the non-adiabatic and STA
engines for a fixed adiabatic efficiency but different parameters of the
working medium. We observe that, for certain parameter regimes, the
irreversibility, as measured by the efficiency lags, due to finite-time driving
is so low that non-adiabatic engine performs quite close to the adiabatic
engine, leaving the STA engine only marginally better than the non-adiabatic
one. This suggests that by designing the working medium Hamiltonian one may
spare the difficulty of dealing with an external control protocol.
"
361,"  Software engineers need relevant and up-to-date architectural knowledge (AK),
in order to make well-founded design decisions. However, finding such AK is
quite challenging. One pragmatic approach is to search for AK on the web using
traditional search engines (e.g. Google); this is common practice among
software engineers. Still, we know very little about what AK is retrieved, from
where, and how useful it is. In this paper, we conduct an empirical study with
53 software engineers, who used Google to make design decisions using the
Attribute-Driven-Design method. Based on how the subjects assessed the nature
and relevance of the retrieved results, we determined how effective web search
engines are to find relevant architectural information. Moreover, we identified
the different sources of AK on the web and their associated AK concepts.
"
362,"  Many scientific and practical areas have shown increasing interest in reaping
the benefits of blockchain technology to empower software systems. However, the
unique characteristics and requirements associated with Blockchain Based
Software (BBS) systems raise new challenges across the development lifecycle
that entail an extensive improvement of conventional software engineering. This
article presents a systematic literature review of the state-of-the-art in BBS
engineering research from a software engineering perspective. We characterize
BBS engineering from the theoretical foundations, processes, models, and roles
and discuss a rich repertoire of key development activities, principles,
challenges, and techniques. The focus and depth of this survey not only gives
software engineering practitioners and researchers a consolidated body of
knowledge about current BBS development but also underpins a starting point for
further research in this field.
"
363,"  Effective Requirements Engineering is a crucial activity in softwareintensive
development projects. The human-centric working mode of Design Thinking is
considered a powerful way to complement such activities when designing
innovative systems. Research has already made great strides to illustrate the
benefits of using Design Thinking for Requirements Engineering. However, it has
remained mostly unclear how to actually realize a combination of both. In this
chapter, we contribute an artifact-based model that integrates Design Thinking
and Requirements Engineering for innovative software-intensive systems. Drawing
from our research and project experiences, we suggest three strategies for
tailoring and integrating Design Thinking and Requirements Engineering with
complementary synergies.
"
364,"  Digital transformation is a hot topic in the current global environment as a
large number of organizations have been working to adopt digital solutions.
Software engineering has also emerged to be a more important role as a large
number of systems, either traditional or smart, are dependent on the software
that collects, store, and process data. The role of software engineers has also
become crucial in digital transformation. In this regard, this paper aims to
examine the trends of software engineering and the role of software engineers
in digital transformation. In addition to this, this paper also examines the
importance of secure software development in digital transformation. It can be
concluded that software engineering is an integral part of digital
transformation as all digital systems make use of software to perform their
functions efficiently. Software act as a bridge between digital systems and
humans to use the systems interactively and efficiently.
"
365,"  Recent innovations in self-supervised representation learning have led to
remarkable advances in natural language processing. That said, in the speech
processing domain, self-supervised representation learning-based systems are
not yet considered state-of-the-art. We propose leveraging recent advances in
self-supervised-based speech processing to create a common speech analysis
engine. Such an engine should be able to handle multiple speech processing
tasks, using a single architecture, to obtain state-of-the-art accuracy. The
engine must also enable support for new tasks with small training datasets.
Beyond that, a common engine should be capable of supporting distributed
training with client in-house private data. We present the architecture for a
common speech analysis engine based on the HuBERT self-supervised speech
representation. Based on experiments, we report our results for language
identification and emotion recognition on the standard evaluations NIST-LRE 07
and IEMOCAP. Our results surpass the state-of-the-art performance reported so
far on these tasks. We also analyzed our engine on the emotion recognition task
using reduced amounts of training data and show how to achieve improved
results.
"
366,"  Ascertaining reproducibility of scientific experiments is receiving increased
attention across disciplines. We argue that the necessary skills are important
beyond pure scientific utility, and that they should be taught as part of
software engineering (SWE) education. They serve a dual purpose: Apart from
acquiring the coveted badges assigned to reproducible research, reproducibility
engineering is a lifetime skill for a professional industrial career in
computer science. SWE curricula seem an ideal fit for conveying such
capabilities, yet they require some extensions, especially given that even at
flagship conferences like ICSE, only slightly more than one-third of the
technical papers (at the 2021 edition) receive recognition for artefact
reusability. Knowledge and capabilities in setting up engineering environments
that allow for reproducing artefacts and results over decades (a standard
requirement in many traditional engineering disciplines), writing semi-literate
commit messages that document crucial steps of a decision-making process and
that are tightly coupled with code, or sustainably taming dynamic, quickly
changing software dependencies, to name a few: They all contribute to solving
the scientific reproducibility crisis, and enable software engineers to build
sustainable, long-term maintainable, software-intensive, industrial systems. We
propose to teach these skills at the undergraduate level, on par with
traditional SWE topics.
"
367,"  In this paper, we study the role and relevance of the cost for an
invariant-based shortcut to adiabaticity enabled qubit heat engine operates in
a quantum Otto cycle. We consider a qubit heat engine with Landau-Zener
Hamiltonian and improve its performance using the Lewis-Riesenfeld
invariant-based shortcut to adiabaticity method. Addressing the importance of
cost for better performance, the paper explores its relationship with the work
and efficiency of the heat engine. We analyze the cost variation with the time
duration of non-adiabatic unitary processes involved in the heat engine cycle.
The cost required to attain the quasi-static performance of the qubit heat
engine is also discussed. We found the efficiency lost due to non-adiabaticity
of the engine can be revived using the shortcut method and it is even possible
to attain quasi-static performance under finite time with higher cost.
"
368,"  Software is becoming a critical component of most products and organizational
functions. The ability to continuously improve software determines how well the
organization can respond to market opportunities. Continuous software
engineering promises numerous advantages over sprint-based or plan-driven
development. However, implementing a continuous software engineering pipeline
in an existing organization is challenging.
  In this invited position paper, we discuss the adoption challenges and argue
for a more systematic methodology to drive the adoption of continuous
engineering. Our discussion is based on ongoing work with several industrial
partners as well as experience reported in both state-of-practice and
state-of-the-art.
  We conclude that the adoption of continuous software engineering primarily
requires analysis of the organization, its goals, and constraints. One size
does not fit all purposes, meaning that many of the principles behind
continuous engineering are relevant for most organizations, but the level of
realization and the benefits may still vary. The main hindrances to continuous
flow of software arise from sub-optimal organizational structures and the lack
of alignment. Once those are removed, the organization can implement automation
to further improve the software delivery.
"
369,"  The out of equilibrium nature of active systems can be exploited for the
design of information-based engines. We design two types of an active Szilard
engine that use a Maxwell daemon to extract work from an active bath composed
of non-interacting Active Brownian Particles (ABPs). The two engines exploit
either the quasi-static active pressure of ABPs or the long correlation time of
their velocities. For both engines the Landauer principle can be violated so
that larger work can be extracted compared to conventional Szilard engines
operating in quasi thermal equilibrium. For both of our engines,we identify the
optimal regimes at which the work extracted and the efficiency are maximized.
Finally, we we discuss them in the context of synthetic and biological active
systems.
"
370,"  Development of machine learning (ML) applications is hard. Producing
successful applications requires, among others, being deeply familiar with a
variety of complex and quickly evolving application programming interfaces
(APIs). It is therefore critical to understand what prevents developers from
learning these APIs, using them properly at development time, and understanding
what went wrong when it comes to debugging. We look at the (lack of) guidance
that currently used development environments and ML APIs provide to developers
of ML applications, contrast these with software engineering best practices,
and identify gaps in the current state of the art. We show that current ML
tools fall short of fulfilling some basic software engineering gold standards
and point out ways in which software engineering concepts, tools and techniques
need to be extended and adapted to match the special needs of ML application
development. Our findings point out ample opportunities for research on
ML-specific software engineering.
"
371,"  Increasing the impact of software engineering research in the software
industry and the society at large has long been a concern of high priority for
the software engineering community. The problem of two cultures, research
conducted in a vacuum (disconnected from the real world), or misaligned time
horizons are just some of the many complex challenges standing in the way of
successful industry-academia collaborations. This paper reports on the
experience of research collaboration and knowledge co-creation between industry
and academia in software engineering as a way to bridge the research-practice
collaboration gap. Our experience spans 14 years of collaboration between
researchers in software engineering and the European and Norwegian software and
IT industry. Using the participant observation and interview methods we have
collected and afterwards analyzed an extensive record of qualitative data.
Drawing upon the findings made and the experience gained, we provide a set of
14 patterns and 14 anti-patterns for industry-academia collaborations, aimed to
support other researchers and practitioners in establishing and running
research collaboration projects in software engineering.
"
372,"  Six months ago an important call was made for researchers globally to provide
insights into the way Software Engineering is done in their region. Heeding
this call we hereby outline the position Software Engineering in Australasia
(New Zealand and Australia). This article first considers the software
development methods practices and tools that are popular in the Australasian
software engineering community. We then briefly review the particular strengths
of software engineering researchers in Australasia. Finally we make an open
call for collaborators by reflecting on our current position and identifying
future opportunities
"
373,"  Graph database engines stand out in the era of big data for their efficiency
of modeling and processing linked data. There is a strong need of testing graph
database engines. However, random testing, the most practical way of automated
test generation, faces the challenges of semantic validity, non-empty result,
and behavior diversity to detect bugs in graph database engines. To address
these challenges, in this paper, we propose GDsmith, the first black-box
approach for testing graph database engines. It ensures that each randomly
generated Cypher query satisfies the semantic requirements via skeleton
generation and completion. GDsmith includes our technique to increase the
probability of producing Cypher queries that return non-empty results by
leveraging three types of structural mutation strategies. GDsmith also includes
our technique to improve the behavior diversity of the generated Cypher queries
by selecting property keys according to their previous frequencies when
generating new queries. Our evaluation results demonstrate that GDsmith is
effective and efficient for automated query generation and substantially
outperforms the baseline. GDsmith successfully detects 27 previously unknown
bugs on the released versions of three popular open-source graph database
engines and receive positive feedback from their developers.
"
374,"  Using models for requirements engineering (RE) is uncommon in systems
engineering, despite the widespread use of model-based engineering in general.
One reason for this lack of use is that formal models do not match well the
trend to move towards agile developing methods. While there exists work that
investigates challenges in the adoption of requirements modeling and agile
methods in systems engineering, there is a lack of work studying successful
approaches of using requirements modelling in agile systems engineering. To
address this gap, we conducted a case study investigating the application of
requirements models at Ericsson AB, a Swedish telecommunications company. We
studied a department using requirements models to bridge agile development and
plan-driven development aspects. We find that models are used to understand how
requirements relate to each other, and to keep track with the product's
evolution. To cope with the effort to maintain models over time, study
participants suggest to rely on text-based notations that bring the models
closer to developers and allow integration into existing software development
workflows. This results in tool trade-offs, e.g., losing the possibility to
control diagram layout.
"
375,"  The Princeton Research Software Engineering Group has grown rapidly since its
inception in late 2016. The group, housed in the central Research Computing
Department, comprised of professional Research Software Engineers (RSEs), works
directly with researchers to create high quality research software to enable
new scientific advances. As the group has matured so has the need for
formalizing operational details and procedures. The RSE group uses an RSE
partnership model, where Research Software Engineers work long-term with a
designated academic department, institute, center, consortium, or individual
principal investigator (PI). This article describes the operation of the
central Princeton RSE group including funding, partner & project selection, and
best practices for defining expectations for a successful partnership with
researchers.
"
376,"  In spite of machine learning's rapid growth, its engineering support is
scattered in many forms, and tends to favor certain engineering stages,
stakeholders, and evaluation preferences. We envision a capability-based
framework, which uses fine-grained specifications for ML model behaviors to
unite existing efforts towards better ML engineering. We use concrete scenarios
(model design, debugging, and maintenance) to articulate capabilities' broad
applications across various different dimensions, and their impact on building
safer, more generalizable and more trustworthy models that reflect human needs.
Through preliminary experiments, we show capabilities' potential for reflecting
model generalizability, which can provide guidance for ML engineering process.
We discuss challenges and opportunities for capabilities' integration into ML
engineering.
"
377,"  Data-driven modeling is an approach in energy systems modeling that has been
gaining popularity. In data-driven modeling, machine learning methods such as
linear regression, neural networks or decision-tree based methods are being
applied. While these methods do not require domain knowledge, they are
sensitive to data quality. Therefore, improving data quality in a dataset is
beneficial for creating machine learning-based models. The improvement of data
quality can be implemented through preprocessing methods. A selected type of
preprocessing is feature engineering, which focuses on evaluating and improving
the quality of certain features inside the dataset. Feature engineering methods
include methods such as feature creation, feature expansion, or feature
selection. In this work, a Python framework containing different feature
engineering methods is presented. This framework contains different methods for
feature creation, expansion and selection; in addition, methods for
transforming or filtering data are implemented. The implementation of the
framework is based on the Python library scikit-learn. The framework is
demonstrated on a case study of a use case from energy demand prediction. A
data-driven model is created including selected feature engineering methods.
The results show an improvement in prediction accuracy through the engineered
features.
"
378,"  Much of software engineering research focuses on tools, algorithms, and
optimization of software. Recently, we, as a community, have come to
acknowledge that there is a gap in meta-research and addressing the
human-factors in software engineering research. Through meta research, we aim
to deepen our understanding of online participant recruitment and
human-subjects software engineering research. In this paper we motivate the
need to consider the unique challenges that human studies pose in software
engineering research. We present several challenges faced by our research team
in several distinct research studies, how they affected research, and motivate
how, as researchers, we can address these challenges. We present results from a
pilot study and categorize issues faced into three broad categories including
participant recruitment, community engagement, and data poisoning. We further
discuss how we can address these challenges and outline the benefits a
full-study could provide to the software engineering research community.
"
379,"  Context: The Internet of Things (IoT) has brought expectations for software
inclusion in everyday objects. However, it has challenges and requires
multidisciplinary technical knowledge involving different areas that should be
combined to enable IoT software systems engineering. Goal: To present an
evidence-based roadmap for IoT development to support developers in specifying,
designing, and implementing IoT systems. Method: An iterative approach based on
experimental studies to acquire evidence to define the IoT Roadmap. Next, the
Systems Engineering Body of Knowledge life cycle was used to organize the
roadmap and set temporal dimensions for IoT software systems engineering.
Results: The studies revealed seven IoT Facets influencing IoT development. The
IoT Roadmap comprises 117 items organized into 29 categories representing
different concerns for each Facet. In addition, an experimental study was
conducted observing a real case of a healthcare IoT project, indicating the
roadmap applicability. Conclusions: The IoT Roadmap can be a feasible
instrument to assist IoT software systems engineering because it can (a)
support researchers and practitioners in understanding and characterizing the
IoT and (b) provide a checklist to identify the applicable recommendations for
engineering IoT software systems.
"
380,"  Maxwell's demon can be utilized to construct quantum information engines.
While most of the existing quantum information engines harness thermal
fluctuations, quantum information engines that utilize quantum fluctuations
have recently been discussed. We propose a new type of genuinely quantum
information engine that harnesses quantum fluctuations to achieve cumulative
storage of useful work and unidirectional transport of a particle. Our scheme
does not require thermalization, which eliminates the ambiguity in evaluating
the power and velocity of our proposed engine in contrast to other existing
quantum information engines that can transport a particle. We find a tradeoff
relationship between the maximum achievable power and the maximum velocity. We
also propose an improved definition of efficiency by clarifying all possible
energy flows involved in the engine cycle.
"
381,"  The engineering of complex software systems is often the result of a highly
collaborative effort. However, collaboration within a multinational enterprise
has an overlooked legal implication when developers collaborate across national
borders: It is taxable. In this article, we discuss the unsolved problem of
taxing collaborative software engineering across borders. We (1) introduce the
reader to the basic principle of international taxation, (2) identify three
main challenges for taxing collaborative software engineering making it a
software engineering problem, and (3) estimate the industrial significance of
cross-border collaboration in modern software engineering by measuring
cross-border code reviews at a multinational software company.
"
382,"  In this contribution, we investigate two coupled spins as a working substance
of the quantum Stirling heat engine cycle. We propose an experimentally
implementable scheme in which the cycle is driven by tuning the dipole-dipole
interaction angle via dynamic-angle spinning technique in a fixed magnetic
field. Realistic parameters are chosen for the proposed heat engine cycle. In
addition, we aim to estimate power of the engine. To accomplish this, we focus
on the microdynamics of the quantum isothermal process to predict required-time
per engine cycle. The results obtained indicate that the engine produces work
with high efficiency. Furthermore, the engine reaches maximum power at same
point where the maximum efficiency is satisfied.
"
383,"  In today's world, many cities are embracing cutting-edge technology and
transforming into ""smart cities"". These emerging innovations are
revolutionizing the standard of living for people, and as a result, smart city
infrastructure development has become a major focus for city planners and
policymakers worldwide. The goal is to create more livable, sustainable, and
efficient urban environments, and software engineering plays a crucial role in
achieving this. In this article, we will delve into what makes a city ""smart""
and what it means for the future. We will explore the software engineering
roadmap for smart city infrastructure development, highlighting the goals and
challenges that come with this innovative approach to urban planning. Our aim
is to provide valuable insights into the importance of software engineering in
achieving successful smart city infrastructure development. As cities continue
to grow and evolve, it is essential to adopt new technologies that can help us
build smarter, more sustainable communities. Smart city initiatives are paving
the way for a brighter future, and software engineering is at the forefront of
this movement. By understanding the software engineering roadmap for smart city
infrastructure development, we can work towards creating more livable,
efficient, and sustainable urban environments for generations to come.
"
384,"  The Stirling engine, which possesses external combustion characteristics, a
simple structure, and high theoretical thermal efficiency, has excellent
potential for utilizing finite waste heat and cold resources. However,
practical applications of this technology suffered from thermal inefficiency
due to the discontinuity and instability of waste resources. Despite advances
in energy storage technology, temperature variations in the heat-exchanging
fluids at the hot and cold ends of the Stirling engine remained significant
obstacles. In this work, convective meta-thermal concentration (CMTC) was
introduced between the heating (cooling) fluids and the hot (cold) end of the
Stirling engine, employing alternating isotropic materials with high and low
thermal conductivities. It was demonstrated that CMTC effectively enhanced the
temperature difference between the hot and cold ends, leading to a remarkable
improvement in Stirling engine efficiency. Particularly, when the Stirling
engine efficiency tended to zero due to the limited availability of waste heat
and cold resources, CMTC overcame this limitation, surpassing existing
optimization technology. Further analysis under various operating conditions
showed that CMTC achieved a significant thermal efficiency improvement of up to
1460%. This work expanded the application of thermal metamaterials to heat
engine systems, offering an exciting avenue for sustainable energy utilization.
"
385,"  One of the objectives of software engineering education is to make students
to learn essential teamwork skills. This is done by having the students work in
groups for course assignments. Student team composition plays a vital role in
this, as it significantly affects learning outcomes, what is learned, and how.
The study presented in this paper aims to better understand the student team
composition in software engineering education and investigate the factors
affecting it in the international software engineering education context. Those
factors should be taken into consideration by software engineering teachers
when they design group work assignments in their courses. In this paper, the
initial findings of the ongoing Action research study are presented. The
results give some identified principles that should be considered when
designing student team composition in software engineering courses.
"
386,"  Knowledge engineering is the process of creating and maintaining
knowledge-producing systems. Throughout the history of computer science and AI,
knowledge engineering workflows have been widely used because high-quality
knowledge is assumed to be crucial for reliable intelligent agents. However,
the landscape of knowledge engineering has changed, presenting four challenges:
unaddressed stakeholder requirements, mismatched technologies, adoption
barriers for new organizations, and misalignment with software engineering
practices. In this paper, we propose to address these challenges by developing
a reference architecture using a mainstream software methodology. By studying
the requirements of different stakeholders and eras, we identify 23 essential
quality attributes for evaluating reference architectures. We assess three
candidate architectures from recent literature based on these attributes.
Finally, we discuss the next steps towards a comprehensive reference
architecture, including prioritizing quality attributes, integrating components
with complementary strengths, and supporting missing socio-technical
requirements. As this endeavor requires a collaborative effort, we invite all
knowledge engineering researchers and practitioners to join us.
"
387,"  Despite the increasing interest in quantum computing, the aspect of
development to achieve cost-effective and reliable quantum software
applications has been slow. One barrier is the software engineering of quantum
programs, which can be approached from two directions. On the one hand, many
software engineering practices, debugging in particular, are bound to classical
computing. On the other hand, quantum programming is closely associated with
the phenomena of quantum physics, and consequently, the way we express programs
resembles the early days of programming. Moreover, much of the software
engineering research today focuses on agile development, where computing cycles
are cheap and new software can be rapidly deployed and tested, whereas in the
quantum context, executions may consume lots of energy, and test runs may
require lots of work to interpret. In this paper, we aim at bridging this gap
by starting with the quantum computing workflow and by mapping existing
software engineering research to this workflow. Based on the mapping, we then
identify directions for software engineering research for quantum computing.
"
388,"  One of the most intriguing debates regarding a novel task is the development
of search engines and recommendation-based systems in the music industry.
Studies have shown a drastic depression in the search engine fields, due to
concerning factors such as speed, accuracy and the format of data given for
querying. Often people face difficulty in searching for a song solely based on
the title, hence a solution is proposed to complete a search analysis through a
single query input and is matched with the lyrics of the songs present in the
database. Hence it is essential to incorporate cutting-edge technology tools
for developing a user-friendly search engine. Jina AI is an MLOps framework for
building neural search engines that are utilized, in order for the user to
obtain accurate results. Jina AI effectively helps to maintain and enhance the
quality of performance for the search engine for the query given. An effective
search engine and a recommendation system for the music industry, built with
JinaAI.
"
389,"  We present the Quantum Monte Carlo Integration (QMCI) engine developed by
Quantinuum. It is a quantum computational tool for evaluating multi-dimensional
integrals that arise in various fields of science and engineering such as
finance. This white paper presents a detailed description of the architecture
of the QMCI engine, including a variety of distribution-loading methods, a
novel quantum amplitude estimation method that improves the statistical
robustness of QMCI calculations, and a library of statistical quantities that
can be estimated. The QMCI engine is designed with modularity in mind, allowing
for the continuous development of new quantum algorithms tailored in particular
to financial applications. Additionally, the engine features a resource mode,
which provides a precise resource quantification for the quantum circuits
generated. The paper also includes extensive benchmarks that showcase the
engine's performance, with a focus on the evaluation of various financial
instruments.
"
390,"  The primary theory of software engineering is that an organization's Policies
and Processes influence the quality of its Products. We call this the PPP
Theory. Although empirical software engineering research has grown common, it
is unclear whether researchers are trying to evaluate the PPP Theory. To assess
this, we analyzed half (33) of the empirical works published over the last two
years in three prominent software engineering conferences. In this sample, 70%
focus on policies/processes or products, not both. Only 33% provided
measurements relating policy/process and products. We make four
recommendations: (1) Use PPP Theory in study design; (2) Study feedback
relationships; (3) Diversify the studied feedforward relationships; and (4)
Disentangle policy and process. Let us remember that research results are in
the context of, and with respect to, the relationship between software
products, processes, and policies.
"
391,"  Game engines support video game development by providing functionalities such
as graphics rendering or input/output device management. However, their
architectures are often overlooked, which hinders their integration and
extension. In this paper, we use an approach for architecture recovery to
create architectural models for 10 open-source game engines. We use these
models to answer the following questions: Which subsystems more often couple
with one another? Do game engines share subsystem coupling patterns? We observe
that the Low-Level Renderer, Platform Independence Layer and Resource Manager
are frequently coupled to the game engine Core. By identifying the most
frequent coupling patterns, we describe an emergent game engine architecture
and discuss how it can be used by practitioners to improve system understanding
and maintainability.
"
392,"  We present a detailed study of an asymmetrically driven quantum Otto engine
with a time-dependent harmonic oscillator as its working medium. We obtain
analytic expressions for the upper bounds on the efficiency of the engine for
two different driving schemes having asymmetry in the expansion and compression
work strokes. We show that the Otto cycle under consideration cannot operate as
a heat engine in the low-temperature regime. Then, we show that the friction in
the expansion stroke is significantly more detrimental to the performance of
the engine as compared to the friction in the compression stroke. Further, by
comparing the performance of the engine with sudden expansion, sudden
compression, and both sudden strokes, we uncover a pattern of connections
between the operational points, and we indicate the optimal operation regime
for each case. Finally, we analytically characterize the complete phase diagram
of the Otto cycle for both driving schemes and highlight the different
operational modes of the cycle as a heat engine, refrigerator, accelerator, and
heater.
"
393,"  There is a lack of formalism for some key foundational concepts in systems
engineering. One of the most recently acknowledged deficits is the inadequacy
of systems engineering practices for engineering intelligent systems. In our
previous works, we proposed that closed systems precepts could be used to
accomplish a required paradigm shift for the systems engineering of intelligent
systems. However, to enable such a shift, formal foundations for closed systems
precepts that expand the theory of systems engineering are needed. The concept
of closure is a critical concept in the formalism underlying closed systems
precepts. In this paper, we provide formal, systems- and information-theoretic
definitions of closure to identify and distinguish different types of closed
systems. Then, we assert a mathematical framework to evaluate the subjective
formation of the boundaries and constraints of such systems. Finally, we argue
that engineering an intelligent system can benefit from appropriate closed and
open systems paradigms on multiple levels of abstraction of the system. In the
main, this framework will provide the necessary fundamentals to aid in systems
engineering of intelligent systems.
"
394,"  We consider a finite time quantum heat engine analogous to finite time
classical Carnot heat engine with a working substance of spin half particles.
We study the efficiency at maximum $\dot{\Omega}$ figure of merit of the
quantum heat engine of spin half particles as a working substance in the
presence of external magnetic field. The efficiency of this engine at maximum
$\dot{\Omega}$ figure of merit shows anomalous behavior in certain region of
particles population levels. Further, we find that the efficiency at maximum
$\dot{\Omega}$ figure exceeds all the known bounds and even approaches the
Carnot efficiency at finite time. Our study indicates that the population of
spin half particles plays a crucial role in quantum heat engine whose
collective effect in the quantum regime can provide superior engine performance
with higher efficiency.
"
395,"  This paper investigates the dynamics of human AI collaboration in software
engineering, focusing on the use of ChatGPT. Through a thematic analysis of a
hands on workshop in which 22 professional software engineers collaborated for
three hours with ChatGPT, we explore the transition of AI from a mere tool to a
collaborative partner. The study identifies key themes such as the evolving
nature of human AI interaction, the capabilities of AI in software engineering
tasks, and the challenges and limitations of integrating AI in this domain. The
findings show that while AI, particularly ChatGPT, improves the efficiency of
code generation and optimization, human oversight remains crucial, especially
in areas requiring complex problem solving and security considerations. This
research contributes to the theoretical understanding of human AI collaboration
in software engineering and provides practical insights for effectively
integrating AI tools into development processes. It highlights the need for
clear role allocation, effective communication, and balanced AI human
collaboration to realize the full potential of AI in software engineering.
"
396,"  Graph database engines play a pivotal role in efficiently storing and
managing graph data across various domains, including bioinformatics, knowledge
graphs, and recommender systems. Ensuring data accuracy within graph database
engines is paramount, as inaccuracies can yield unreliable analytical outcomes.
Current bug-detection approaches are confined to specific graph query
languages, limiting their applicabilities when handling graph database engines
that use various graph query languages across various domains. Moreover, they
require extensive prior knowledge to generate queries for detecting bugs. To
address these challenges, we introduces DGDB, a novel paradigm harnessing large
language models(LLM), such as ChatGPT, for comprehensive bug detection in graph
database engines. DGDB leverages ChatGPT to generate high-quality queries for
different graph query languages. It subsequently employs differential testing
to identify bugs in graph database engines. We applied this paradigm to graph
database engines using the Gremlin query language and those using the Cypher
query language, generating approximately 4,000 queries each. In the latest
versions of Neo4j, Agensgraph, and JanusGraph databases, we detected 2, 5, and
3 wrong-result bugs, respectively.
"
397,"  Efficiently harvesting thermodynamic resources requires a precise
understanding of their structure. This becomes explicit through the lens of
information engines -- thermodynamic engines that use information as fuel.
Maximizing the work harvested using available information is a form of
physically-instantiated machine learning that drives information engines to
develop complex predictive memory to store an environment's temporal
correlations. We show that an information engine's complex predictive memory
poses both energetic benefits and risks. While increasing memory facilitates
detection of hidden patterns in an environment, it also opens the possibility
of thermodynamic overfitting, where the engine dissipates additional energy in
testing. To address overfitting, we introduce thermodynamic regularizers that
incur a cost to engine complexity in training due to the physical constraints
on the information engine. We demonstrate that regularized thermodynamic
machine learning generalizes effectively. In particular, the physical
constraints from which regularizers are derived improve the performance of
learned predictive models. This suggests that the laws of physics jointly
create the conditions for emergent complexity and predictive intelligence.
"
398,"  Until recently, search engines were the predominant method for people to
access online information. The recent emergence of large language models (LLMs)
has given machines new capabilities such as the ability to generate new digital
artifacts like text, images, code etc., resulting in a new tool, a generative
search engine, which combines the capabilities of LLMs with a traditional
search engine. Through the empirical analysis of Bing Copilot (Bing Chat), one
of the first publicly available generative search engines, we analyze the types
and complexity of tasks that people use Bing Copilot for compared to Bing
Search. Findings indicate that people use the generative search engine for more
knowledge work tasks that are higher in cognitive complexity than were commonly
done with a traditional search engine.
"
399,"  In this work, we consider \textit{quantum unital Otto heat engines}. The
latter refers to the fact that both the unitaries of the adiabatic strokes and
the source of the heat provided to the engine preserve the maximally mixed
state. We show how to compute the cumulants of either the dephased or
undephased engine. For a qubit, we give the analytical expressions of the
averages and variances for arbitrary unitaries and unital channels. We do a
detailed comparative study between the dephased and undephased heat engines.
More precisely, we focus on the effect of the parameters on the average work
and its reliability and efficiency. As a case study of unital channels, we
consider a quantum projective measurement. We show on which basis we should
projectively measure the qubit, either the dephased or undephased heat engine,
to extract higher amounts of work, increase the latter's reliability, and
increase efficiency. Further, we show that non-adiabatic transitions
\textit{are not always detrimental} to thermodynamic quantities. Our results,
we believe, are important for heat engines fueled by \textit{quantum
measurement}.
"
400,"  Ethnography has become one of the established methods for empirical research
on software engineering. Although there is a wide variety of introductory books
available, there has been no material targeting software engineering students
particularly, until now. In this chapter we provide an introduction to teaching
and learning ethnography for faculty teaching ethnography to software
engineering graduate students and for the students themselves of such courses.
  The contents of the chapter focuses on what we think is the core basic
knowledge for newbies to ethnography as a research method. We complement the
text with proposals for exercises, tips for teaching, and pitfalls that we and
our students have experienced.
  The chapter is designed to support part of a course on empirical software
engineering and provides pointers and literature for further reading.
"
401,"  Refactoring is a critical process in software development, aiming at
improving the internal structure of code while preserving its external
behavior. Refactoring engines are integral components of modern Integrated
Development Environments (IDEs) and can automate or semi-automate this process
to enhance code readability, reduce complexity, and improve the maintainability
of software products. Like traditional software systems, refactoring engines
can generate incorrect refactored programs, resulting in unexpected behaviors
or even crashes. In this paper, we present the first systematic study of
refactoring engine bugs by analyzing bugs arising in three popular refactoring
engines (i.e., Eclipse, IntelliJ IDEA, and Netbeans). We analyzed these bugs
according to their refactoring types, symptoms, root causes, and triggering
conditions. We obtained 12 findings and provided a series of valuable
guidelines for future work on refactoring bug detection and debugging.
Furthermore, our transferability study revealed 130 new bugs in the latest
version of those refactoring engines. Among the 21 bugs we submitted, 10 bugs
are confirmed by their developers, and seven of them have already been fixed.
"
402,"  Recent advancements in Large Language Models (LLMs) have enhanced efficiency
across various domains, including protein engineering, where they offer
promising opportunities for dry lab and wet lab experiment workflow automation.
Previous work, namely TourSynbio-Agent, integrates a protein-specialized
multimodal LLM (i.e. TourSynbio-7B) with domain-specific deep learning (DL)
models to streamline both computational and experimental protein engineering
tasks. While initial validation demonstrated TourSynbio-7B's fundamental
protein property understanding, the practical effectiveness of the complete
TourSynbio-Agent framework in real-world applications remained unexplored. This
study presents a comprehensive validation of TourSynbio-Agent through five
diverse case studies spanning both computational (dry lab) and experimental
(wet lab) protein engineering. In three computational case studies, we evaluate
the TourSynbio-Agent's capabilities in mutation prediction, protein folding,
and protein design. Additionally, two wet-lab validations demonstrate
TourSynbio-Agent's practical utility: engineering P450 proteins with up to 70%
improved selectivity for steroid 19-hydroxylation, and developing reductases
with 3.7x enhanced catalytic efficiency for alcohol conversion. Our findings
from the five case studies establish that TourSynbio-Agent can effectively
automate complex protein engineering workflows through an intuitive
conversational interface, potentially accelerating scientific discovery in
protein engineering.
"
403,"  The rise of Foundation Models (FMs) like Large Language Models (LLMs) is
revolutionizing software development. Despite the impressive prototypes,
transforming FMware into production-ready products demands complex engineering
across various domains. A critical but overlooked aspect is performance
engineering, which aims at ensuring FMware meets performance goals such as
throughput and latency to avoid user dissatisfaction and financial loss. Often,
performance considerations are an afterthought, leading to costly optimization
efforts post-deployment. FMware's high computational resource demands highlight
the need for efficient hardware use. Continuous performance engineering is
essential to prevent degradation. This paper highlights the significance of
Software Performance Engineering (SPE) in FMware, identifying four key
challenges: cognitive architecture design, communication protocols, tuning and
optimization, and deployment. These challenges are based on literature surveys
and experiences from developing an in-house FMware system. We discuss problems,
current practices, and innovative paths for the software engineering community.
"
404,"  E-Commerce challenges traditional approaches to assessing monopolistic
practices due to the rapid rate of growth, rapid change in technology,
difficulty in assessing market share for information products like web sites,
and high degree of interconnectivity and alliance formation among corporations.
This paper has provided a fundamental framework that integrates a network and
economic perspective to the search engine market.
  The findings indicate that (1) despite an increasing number of search
engines, barriers to entry seem high, largely due to the exponential growth in
the number of web sites and the non-scalability of the current search
technology and collective switching costs; (2) older search engine sites tend
typically to have more features to lock in users. Using standard economic
indicators (CR4=58% and HHI=1163), the industry looks close to being plagued by
anticompetitive practices. But based on a network adjusted HHI constructed in
this paper, its value, 870, suggests that there is less cause for concern.
  Based on all indicators, it suggests that Yahoo would be a contender. Other
possible contenders are MSN and Netscape. On the basis of results to date, some
search engines keep increasing their audience reach while others don't. The
trend shows that some search engines may dominate the search engine market. We
suggest conducting research in the coverage performance of search engines and
investigate ""information search cost"" as a performance indicator of search
techniques. In addition, we suggest paying attention to any anticompetitive
conduct (e.g. product bundling) that may lesson competition and reduce consumer
welfare. The combination of network theory and economic theory to study the
search engine market is a particularly powerful approach for E-Commerce.
"
405,"  We introduce a class of quantum heat engines which consists of
two-energy-eigenstate systems, the simplest of quantum mechanical systems,
undergoing quantum adiabatic processes and energy exchanges with heat baths,
respectively, at different stages of a cycle. Armed with this class of heat
engines and some interpretation of heat transferred and work performed at the
quantum level, we are able to clarify some important aspects of the second law
of thermodynamics. In particular, it is not sufficient to have the heat source
hotter than the sink, but there must be a minimum temperature difference
between the hotter source and the cooler sink before any work can be extracted
through the engines. The size of this minimum temperature difference is
dictated by that of the energy gaps of the quantum engines involved. Our new
quantum heat engines also offer a practical way, as an alternative to Szilard's
engine, to physically realise Maxwell's daemon. Inspired and motivated by the
Rabi oscillations, we further introduce some modifications to the quantum heat
engines with single-mode cavities in order to, while respecting the second law,
extract more work from the heat baths than is otherwise possible in thermal
equilibria. Some of the results above are also generalisable to quantum heat
engines of an infinite number of energy levels including 1-D simple harmonic
oscillators and 1-D infinite square wells.
"
406,"  A typical web search engine consists of three principal parts: crawling
engine, indexing engine, and searching engine. The present work aims to
optimize the performance of the crawling engine. The crawling engine finds new
web pages and updates web pages existing in the database of the web search
engine. The crawling engine has several robots collecting information from the
Internet. We first calculate various performance measures of the system (e.g.,
probability of arbitrary page loss due to the buffer overflow, probability of
starvation of the system, the average time waiting in the buffer). Intuitively,
we would like to avoid system starvation and at the same time to minimize the
information loss. We formulate the problem as a multi-criteria optimization
problem and attributing a weight to each criterion. We solve it in the class of
threshold policies. We consider a very general web page arrival process modeled
by Batch Marked Markov Arrival Process and a very general service time modeled
by Phase-type distribution. The model has been applied to the performance
evaluation and optimization of the crawler designed by INRIA Maestro team in
the framework of the RIAM INRIA-Canon research project.
"
407,"  Recently, parallel search engines have been implemented based on scalable
distributed file systems such as Google File System. However, we claim that
building a massively-parallel search engine using a parallel DBMS can be an
attractive alternative since it supports a higher-level (i.e., SQL-level)
interface than that of a distributed file system for easy and less error-prone
application development while providing scalability. In this paper, we propose
a new approach of building a massively-parallel search engine using a DB-IR
tightly-integrated parallel DBMS and demonstrate its commercial-level
scalability and performance. In addition, we present a hybrid (i.e., analytic
and experimental) performance model for the parallel search engine. We have
built a five-node parallel search engine according to the proposed architecture
using a DB-IR tightly-integrated DBMS. Through extensive experiments, we show
the correctness of the model by comparing the projected output with the
experimental results of the five-node engine. Our model demonstrates that ODYS
is capable of handling 1 billion queries per day (81 queries/sec) for 30
billion web pages by using only 43,472 nodes with an average query response
time of 211 ms, which is equivalent to or better than those of commercial
search engines. We also show that, by using twice as many (86,944) nodes, ODYS
can provide an average query response time of 162 ms, which is significantly
lower than those of commercial search engines.
"
408,"  Artificial micro heat engines are prototypical models to explore and
elucidate the mechanisms of energy transduction in a regime that is dominated
by fluctuations [1-2]. Micro heat engines realized hitherto mimicked their
macroscopic counterparts and operated between reservoirs that were effectively
thermal [3-7]. For such reservoirs, temperature is a well-defined state
variable and stochastic thermodynamics provides a precise framework for
quantifying engine performance [8-9]. It remains unclear whether these concepts
readily carry over to situations where the reservoirs are out-of-equilibrium
[10], a scenario of particular importance to the functioning of synthetic
[11-12] and biological [13] micro engines and motors. Here we experimentally
realized a micrometer-sized active Stirling engine by periodically cycling a
colloidal particle in a time-varying harmonic optical potential across
bacterial baths at different activities. Unlike in equilibrium thermal
reservoirs, the displacement statistics of the trapped particle becomes
increasingly non-Gaussian with activity. We show that as much as $\approx$ 85\%
of the total power output and $\approx$ 50\% of the overall efficiency stems
from large non-Gaussian particle displacements alone. Most remarkably, at the
highest activities investigated, the efficiency of our quasi-static active heat
engines surpasses the equilibrium saturation limit of Stirling efficiency - the
maximum efficiency of a Stirling engine with the ratio of cold and hot
reservoir temperatures ${T_C\over T_H} \to 0$. Crucially, the failure of
effective temperature descriptions [14-16] for active reservoirs highlights the
dire need for theories that can better capture the physics of micro motors and
heat engines that operate in strongly non-thermal environments.
"
409,"  Empirical software engineering has received much attention in recent years
and coined the shift from a more design-science-driven engineering discipline
to an insight-oriented, and theory-centric one. Yet, we still face many
challenges, among which some increase the need for interdisciplinary research.
This is especially true for the investigation of human-centric aspects of
software engineering. Although we can already observe an increased recognition
of the need for more interdisciplinary research in (empirical) software
engineering, such research configurations come with challenges barely discussed
from a scientific point of view. In this position paper, we critically reflect
upon the epistemological setting of empirical software engineering and
elaborate its configuration as an Interdiscipline. In particular, we (1)
elaborate a pragmatic view on empirical research for software engineering
reflecting a cyclic process for knowledge creation, (2) motivate a path towards
symmetrical interdisciplinary research, and (3) adopt five rules of thumb from
other interdisciplinary collaborations in our field before concluding with new
emerging challenges. This shall support stopping to treating empirical software
engineering as a developing discipline moving towards a paradigmatic stage of
normal science, but as a configuration of symmetric interdisciplinary teams and
research methods.
"
410,"  Since underlying hardware components form the basis of trust in virtually any
computing system, security failures in hardware pose a devastating threat to
our daily lives. Hardware reverse engineering is commonly employed by security
engineers in order to identify security vulnerabilities, to detect IP
violations, or to conduct very-large-scale integration (VLSI) failure analysis.
Even though industry and the scientific community demand experts with expertise
in hardware reverse engineering, there is a lack of educational offerings, and
existing training is almost entirely unstructured and on the job. To the best
of our knowledge, we have developed the first course to systematically teach
students hardware reverse engineering based on insights from the fields of
educational research, cognitive science, and hardware security. The
contribution of our work is threefold: (1) we propose underlying educational
guidelines for practice-oriented courses which teach hardware reverse
engineering; (2) we develop such a lab course with a special focus on
gate-level netlist reverse engineering and provide the required tools to
support it; (3) we conduct an educational evaluation of our pilot course. Based
on our results, we provide valuable insights on the structure and content
necessary to design and teach future courses on hardware reverse engineering.
"
411,"  Background: Assessing and communicating software engineering research can be
challenging. Design science is recognized as an appropriate research paradigm
for applied research but is seldom referred to in software engineering.
Applying the design science lens to software engineering research may improve
the assessment and communication of research contributions. Aim: The aim of
this study is 1) to understand whether the design science lens helps summarize
and assess software engineering research contributions, and 2) to characterize
different types of design science contributions in the software engineering
literature. Method: In previous research, we developed a visual abstract
template, summarizing the core constructs of the design science paradigm. In
this study, we use this template in a review of a set of 38 top software
engineering publications to extract and analyze their design science
contributions. Results: We identified five clusters of papers, classifying them
according to their alignment with the design science paradigm. Conclusions: The
design science lens helps emphasize the theoretical contribution of research
output---in terms of technological rules---and reflect on the practical
relevance, novelty, and rigor of the rules proposed by the research.
"
412,"  Servitization is one of the most significant trends that reshapes the
information world and society in recent years. The requirement of
collecting,storing, processing, and sharing of the Big Data has led to massive
software resources being developed and made accessible as web-based services to
facilitate such process. These services that handle the Big Data come from
various domains and heterogeneous networks, and converge into a huge
complicated service network (or ecosystem), called the Big Service.The key
issue facing the big data and big service ecosystem is how to optimally
configure and operate the related service resources to serve the specific
requirements of possible applications, i.e., how to reuse the existing service
resources effectively and efficiently to develop the new applications or
software services, to meet the massive individualized requirements of
end-users.Based on analyzing the big service ecosystem, we present in this
paper a new paradigm for software service engineering, RE2SEP
(Requirement-Engineering Two-Phase of Service Engineering Paradigm), which
includes three components: service-oriented requirement engineering,
domain-oriented service engineering, and software service development approach.
RE2SEP enables the rapid design and implementation of service solutions to
match the requirement propositions of massive individualized customers in the
Big Service ecosystem. A case study on people's mobility service in a smart
city environment is given to demonstrate the application of RE2SEP.RE2SEP can
potentially revolutionize the traditional life-cycle oriented software
engineering, leading to a new approach to software service engineering.
"
413,"  We have been thinking about other aspects of software engineering for many
years; the missing link in engineering software is the soft skills set,
essential in the software development process. Although soft skills are among
the most important aspects in the creation of software, they are often
overlooked by educators and practitioners. One of the main reasons for the
oversight is that soft skills are usually related to social and personality
factors, i.e., teamwork, motivation, commitment, leadership, multi-culturalism,
emotions, interpersonal skills, etc. This editorial is a manifesto declaring
the importance of soft skills in software engineering with the intention to
draw professionals attention to these topics. We have approached this issue by
mentioning what we know about the field, what we believe to be evident, and
which topics need further investigation. Important references to back up our
claims are also included. Software engineers take pride in the depth of their
technical expertise, which separates them from the crowd. But, what makes a
good software engineer? First, it is the technical knowledge of relevant
methodologies and techniques (i.e. hard skills), as well as the skills
necessary for applying that knowledge in practice. Second, but nonetheless
important, it is a set of soft skills, in particular collaboration,
communication, problem-solving and similar interpersonal and critical thinking
skills that are expected from software engineering professionals. In other
words, software engineers need both hard and soft skills in order to be
successful at the workplace.
"
414,"  Research on fault diagnosis on highly nonlinear dynamic systems such as the
engine of a vehicle have garnered huge interest in recent years, especially
with the automotive industry heading towards self-driving technologies. This
article presents a novel opensource simulation testbed of a turbocharged spark
ignited (TCSI) petrol engine system for testing and evaluation of residuals
generation and fault diagnosis methods. Designed and developed using
Matlab/Simulink, the user interacts with the testbed using a GUI interface,
where the engine can be realistically simulated using industrial-standard
driving cycles such as the Worldwide harmonized Light vehicles Test Procedures
(WLTP), the New European Driving Cycle (NEDC), the Extra-Urban Driving Cycle
(EUDC), and EPA Federal Test Procedure (FTP-75). The engine is modeled using
the mean value engine model (MVEM) and is controlled using a
proportional-integral (PI)-based boost controller. The GUI interface also
allows the user to induce one of the 11 faults of interest, so that their
effects on the performance of the engine are better understood. This minimizes
the risk of causing permanent damages to the engine and shortening its
lifespan, should the tests be conducted onto the actual physical system. This
simulation testbed will serve 16 as an excellent platform where researchers can
generate critical data to develop and compare current and future research
methods for fault diagnosis of automotive engine systems.
"
415,"  Understanding the detailed flame transport in IC engines is important to
predict ignition, rate of heat release and assess engine performance. This is
particularly important for RANS and LES engine simulations, which often
struggle to accurately predict flame propagation and heat release without first
adjusting model parameters. Detailed measurements of flame transport are
required to guide model development. This work introduces an experimental
dataset designed to study the detailed flame transport and flame/flow dynamics
for SI engines. Simultaneous dual-plane OH-LIF and stereoscopic PIV is used to
acquire 3D measurements of unburnt gas velocity, flame displacement speed and
overall flame velocity during the early flame development. Experiments are
performed in an optical engine operating at 800 and 1500 RPM with premixed
C8H18-air mixtures. Analysis reveals several distinctive flame/flow
configurations that yield a positive or negative flame displacement for which
the flame progresses towards the reactants or products, respectively. For the
operating conditions utilized, Sd exhibits and inverse relationship with flame
curvature; a strong correlation between negative Sd and convex flame contours
is observed. Trends are consistent with thermo-diffusive flames, but have not
been quantified in IC engines. Flame wrinkling is more severe at the higher
RPM, which broadens Sd distribution towards higher positive and negative
velocities. Spatially-resolved distributions of Ugas and Sd describe
in-cylinder locations where convection or thermal diffusion is the dominating
mechanism contributing to flame transport. Findings are discussed in relation
to common engine flow features, including flame transport near solid surfaces.
Findings are designed to support engine simulation validations.
"
416,"  Following the onset of the COVID-19 pandemic and subsequent lockdowns, the
daily lives of software engineers were heavily disrupted as they were abruptly
forced to work remotely from home. To better understand and contrast typical
working days in this new reality with work in pre-pandemic times, we conducted
one exploratory (N = 192) and one confirmatory study (N = 290) with software
engineers recruited remotely. Specifically, we build on self-determination
theory to evaluate whether and how specific activities are associated with
software engineers' satisfaction and productivity. To explore the subject
domain, we first ran a two-wave longitudinal study. We found that the time
software engineers spent on specific activities (e.g., coding, bugfixing,
helping others) while working from home was similar to pre-pandemic times.
Also, the amount of time developers spent on each activity was unrelated to
their general well-being, perceived productivity, and other variables such as
basic needs. Our confirmatory study found that activity-specific variables
(e.g., how much autonomy software engineers had during coding) do predict
activity satisfaction and productivity but not by activity-independent
variables such as general resilience or a good work-life balance.
Interestingly, we found that satisfaction and autonomy were significantly
higher when software engineers were helping others and lower when they were
bugfixing. Finally, we discuss implications for software engineers, management,
and researchers. In particular, active company policies to support developers'
need for autonomy, relatedness, and competence appear particularly effective in
a WFH context.
"
417,"  Context: Systematic literature reviews (SLRs) have become standard practise
as part of software engineering research, although their quality varies. To
build on the reviews, both for future research and industry practice, they need
to be of high quality. Objective: To assess the quality of SLRs in software
engineering, we put forward an appraisal instrument for SLRs. The instrument is
intended for use by appraisers of reviews, but authors may also use it as a
checklist when designing and documenting their reviews. Method: A
well-established appraisal instrument from research in healthcare was used as a
starting point to develop a quality assessment instrument. It is adapted to
software engineering using guidelines, checklists, and experiences from
software engineering. As a validation step, the first version was reviewed by
four external experts on SLRs in software engineering and updated based on
their feedback. Results: The outcome of the research is an appraisal instrument
for the quality assessment of SLRs in software engineering. The instrument
intends to support the appraiser in assessing the quality of an SLR. The
instrument includes 16 items with different options to capture the quality. The
item is assessed on a two or three-grade scale, depending on the item. The
instrument also supports consolidating the items into groups, which are then
used to assess the overall quality of a systematic literature review.
Conclusion: It is concluded that the presented instrument may be helpful
support for an appraiser in assessing the quality of SLRs in software
engineering.
"
418,"  The central engine in long gamma-ray bursts (GRBs) is thought to be a compact
object produced by the core collapse of massive stars, but its exact nature
(black hole or millisecond magnetar) is still debatable. Although the central
engine of GRB collapsars is hidden to direct observation, its properties may be
imprinted on the accompanying electromagnetic signals. We aim to decipher the
generic properties of central engines that are consistent with prompt
observations of long GRBs detected by the Burst Alert Telescope (BAT) on board
the Neil Gehrels Swift Observatory. Adopting a generic model for the central
engine, in which the engine power and activity timescale are independent of
each other, we perform Monte Carlo simulations of long GRBs produced by jets
that successfully breakout from the star. Our simulations consider the
dependence of the jet breakout timescale on the engine luminosity and the
effects of the detector's flux threshold. The two-dimensional (2D) distribution
of simulated detectable bursts in the gamma-ray luminosity versus gamma-ray
duration plane is consistent with the observed one for a range of parameter
values describing the central engine. The intrinsic 2D distribution of
simulated collapsar GRBs peaks at lower gamma-ray luminosities and longer
durations than the observed one, a prediction that can be tested in the future
with more sensitive detectors. Black-hole accretors, whose power and activity
time are set by the large-scale magnetic flux through the progenitor star and
stellar structure, respectively, are compatible with the properties of the
central engine inferred by our model.
"
419,"  We consider optimizations of Lenoir heat engine within a quantum dynamical
field consisting of $N$ noninteracting fermions trapped in multilevel infinite
potential square-well. Fermions play role as working substance of the engine
with each particle nested at different level of energy. We optimized this
quantum heat engine model by analysing the physical parameter and deriving the
optimum properties of the engine model. The model we investigated consists of
one high-energy heat bath and one low-energy sink bath. Heat leakage occurs
between these two bathes as expected will degenerate the efficiency of quantum
heat engine model. The degeneration increased as we raised the constant
parameter of heat leakage. We also obtained loop curves in dimensionless power
vs. efficiency of the engine, which efficiency is explicitly affected by heat
leakage, but in contrast for the power output. From the curves, we assured that
the efficiency of the engine would go back to zero as we raised compression
ratio of engine with leakage. Lastly, we checked Clausius relations for each
model with various levels of heat leakage. We found that models with leakage
have a reversible process on specific compression ratios for each variation of
heat leakage. Nevertheless, the compression ratio has limitations because of
the $\oint dQ/E>0$ after the reversible point, i.e. violates the Clausius
relation.
"
420,"  We perform an extensive analysis of passive as well as active micro-heat
engines with different single-particle stochastic models. Using stochastic
thermodynamics we calculate thermodynamic work, heat, entropy production and
efficiency of passive and active Brownian heat engines analytically as well as
numerically and compare them. We run the heat engines with a protocol for which
the average thermodynamic quantities are calculated exactly for an arbitrary
cycle time. We also discuss about the group of protocols for which exact
non-quasistatic calculations can be done, completely in the passive engine case
and partially in the active engines. We obtain detailed thermodynamics of
non-quasistatic (i.e. powerful) single-particle micro heat engines. The
quasistatic (i.e. zero power) limit of the results is obtained by taking long
(infinite) cycle time. We also study the distributions of position of the
confined particle in both passive and active engines. We compare their
characteristics in terms of the parameter that measures the competition between
the active persistence in the particle position (due to active noises) and the
harmonic confinement. We also calculate excess kurtosis that measures the
non-Gaussianity of these distributions. Our analysis shows that efficiency of
such thermal machine can be enhanced or reduced depending on the activity
present in the model.
"
421,"  Software Engineering is the process of a systematic, disciplined,
quantifiable approach that has significant impact on large-scale and complex
software development. Scores of well-established software process models have
long been adopted in the software development life cycle that pour stakeholders
towards the completion of final software product development. Within the
boundary of advanced technology, various emerging and futuristic technology is
evolving that really need the attention of the software engineering community
whether the conventional software process techniques are capable to inherit the
core fundamental into futuristic software development. In this paper, we study
the impact of existing software engineering processes and models including
Agile, and DevOps in Blockchain-Oriented Software Engineering. We also examine
the essentiality of adopting state-of-art concepts and evolving the current
software engineering process for blockchain-oriented systems. We discuss the
insight of software project management practices in BOS development. The
findings of this study indicate that utilizing state-of-art techniques in
software processes for futuristic technology would be challenging and promising
research is needed extensively towards addressing and improving
state-of-the-art software engineering processes and methodology for novel
technologies.
"
422,"  A typical model for a gyrating engine consists of an inertial wheel powered
by an energy source that generates an angle-dependent torque. Examples of such
engines include a pendulum with an externally applied torque, Stirling engines,
and the Brownian gyrating engine. Variations in the torque are averaged out by
the inertia of the system to produce limit cycle oscillations. While torque
generating mechanisms are also ubiquitous in the biological world, where they
typically feed on chemical gradients, inertia is not a property that one
naturally associates with such processes. In the present work, seeking ways to
dispense of the need for inertial effects, we study an inertia-less concept
where the combined effect of coupled torque-producing components averages out
variations in the ambient potential and helps overcome dissipative forces to
allow sustained operation for vanishingly small inertia. We exemplify this
inertia-less concept through analysis of two of the aforementioned engines, the
Stirling engine and the Brownian gyrating engine. An analogous principle may be
sought in biomolecular processes as well as in modern-day technological
engines, where for the latter, the coupled torque-producing components reduce
vibrations that stem from the variability of the generated torque.
"
423,"  Engines are systems and devices that convert one form of energy into another,
typically into a more useful form that can perform work. In the classical
setup, physical, chemical, and biological engines largely involve the
conversion of heat into work. This energy conversion is at the core of
thermodynamic laws and principles and is codified in textbook material. In the
quantum regime, however, the principles of energy conversion become ambiguous,
since quantum phenomena come into play. As with classical thermodynamics,
fundamental principles can be explored through engines and refrigerators, but,
in the quantum case, these devices are miniaturized and their operations
involve uniquely quantum effects. Our work provides a broad overview of this
active field of quantum engines and refrigerators, reviewing the latest
theoretical proposals and experimental realizations. We cover myriad aspects of
these devices, starting with the basic concepts of quantum analogs to the
classical thermodynamic cycle and continuing with different quantum features of
energy conversion that span many branches of quantum mechanics. These features
include quantum fluctuations that become dominant in the microscale,
non-thermal resources that fuel the engines, and the possibility of scaling up
the working medium's size, to account for collective phenomena in many-body
heat engines. Furthermore, we review studies of quantum engines operating in
the strong system-bath coupling regime and those that include non-Markovian
phenomena. Recent advances in thermoelectric devices and quantum information
perspectives, including quantum measurement and feedback in quantum engines,
are also presented.
"
424,"  Game engines provide video game developers with a wide range of fundamental
subsystems for creating games, such as 2D/3D graphics rendering, input device
management, and audio playback. Developers often integrate these subsystems
with other applications or extend them via plugins. To integrate or extend
correctly, developers need a broad system architectural understanding. However,
architectural information is not always readily available and is often
overlooked in this kind of system. In this work, we propose an approach for
game engine architecture recovery and explore the architecture of three popular
open-source game engines (Cocos2d-x, Godot, and Urho3D). We perform manual
subsystem detection and use Moose, a platform for software analysis, to
generate architectural models. With these models, we answer the following
questions: Which subsystems are present in game engines? Which subsystems are
more often coupled with one another? Why are these subsystems coupled with each
other? Results show that the platform independence, resource management, world
editor, and core subsystems are frequently included by others and therefore act
as foundations for the game engines. Furthermore, we show that, by applying our
approach, game engine developers can understand whether subsystems are related
and divide responsibilities. They can also assess whether relationships among
subsystems are appropriate for the game engine.
"
425,"  Recent works on the concatenation of two simple heat engines have shown that
it may lead to non-monotonic variations in the efficiency and power with
parameters like driving amplitudes and asymmetries in cycle periods. Motivated
by this study, we investigate the effect of the concatenation between two
stochastic heat engines where colloidal particles have been trapped in harmonic
potentials. The stiffness parameters of each engine are varied cyclically, but
with different cycle periods, with a common thermal bath that acts as a sink
for the first engine but as a source for the second. We consider two types of
protocols, first where the trap strength undergoes sudden jumps, and the second
where it varies linearly with time. In both we find several non-trivial
effects, like the the non-monotonic functional dependence of the engine outputs
on several parameters used in the setup. For a protocol that varies linearly
with time, the concatenation leads to enhanced output power as compared to a
single effective engine, in a suitable range of parameters. It has been shown
that the output from the combined system shows a peak with respect to the
asymmetry in cycle times of the engines that have been concatenated. A general
relation of the efficiency of an arbitrary number of concatenated engines
driven quasistatically has been provided.
"
426,"  Large Language Models (LLMs) have drawn widespread attention and research due
to their astounding performance in text generation and reasoning tasks.
Derivative products, like ChatGPT, have been extensively deployed and highly
sought after. Meanwhile, the evaluation and optimization of LLMs in software
engineering tasks, such as code generation, have become a research focus.
However, there is still a lack of systematic research on applying and
evaluating LLMs in software engineering. Therefore, this paper comprehensively
investigate and collate the research and products combining LLMs with software
engineering, aiming to answer two questions: (1) What are the current
integrations of LLMs with software engineering? (2) Can LLMs effectively handle
software engineering tasks? To find the answers, we have collected related
literature as extensively as possible from seven mainstream databases and
selected 123 timely papers published starting from 2022 for analysis. We have
categorized these papers in detail and reviewed the current research status of
LLMs from the perspective of seven major software engineering tasks, hoping
this will help researchers better grasp the research trends and address the
issues when applying LLMs. Meanwhile, we have also organized and presented
papers with evaluation content to reveal the performance and effectiveness of
LLMs in various software engineering tasks, guiding researchers and developers
to optimize.
"
427,"  ""Prompt Engineering for Students of Medicine and Their Teachers"" brings the
principles of prompt engineering for large language models such as ChatGPT and
Google Bard to medical education. This book contains a comprehensive guide to
prompt engineering to help both teachers and students improve education in the
medical field. Just as prompt engineering is critical in getting good
information out of an AI, it is also critical to get students to think and
understand more deeply. The principles of prompt engineering that we have
learned from AI systems have the potential to simultaneously revolutionize
learning in the healthcare field. The book analyzes from multiple angles the
anatomy of a good prompt for both AI models and students. The different types
of prompts are examined, showing how each style has unique characteristics and
applications. The principles of prompt engineering, applied properly, are
demonstrated to be effective in teaching across the diverse fields of anatomy,
physiology, pathology, pharmacology, and clinical skills. Just like ChatGPT and
similar large language AI models, students need clear and detailed prompting in
order for them to fully understand a topic. Using identical principles, a
prompt that gets good information from an AI will also cause a student to think
more deeply and accurately. The process of prompt engineering facilitates this
process. Because each chapter contains multiple examples and key takeaways, it
is a practical guide for implementing prompt engineering in the learning
process. It provides a hands-on approach to ensure readers can immediately
apply the concepts they learn
"
428,"  Software Quality Assurance (SQA) Engineers are responsible for assessing a
product during every phase of the software development process to ensure that
the outcomes of each phase and the final product possess the desired qualities.
In general, a great SQA engineer needs to have a different set of abilities
from development engineers to effectively oversee the entire product
development process from beginning to end. Recent empirical studies identified
important attributes of software engineers and managers, but the quality
assurance role is overlooked. As software quality aspects have become more of a
priority in the life cycle of software development, employers seek
professionals that best suit the company's objectives and new graduates desire
to make a valuable contribution through their job as an SQA engineer, but what
makes them great? We addressed this knowledge gap by conducting 25
semi-structured interviews and 363 survey respondents with software quality
assurance engineers from different companies around the world. We use the data
collected from these activities to derive a comprehensive set of attributes
that are considered important. As a result of the interviews, twenty-five
attributes were identified and grouped into five main categories: personal,
social, technical, management, and decision-making attributes. Through a rating
survey, we confirmed that the distinguishing characteristics of great SQA
engineers are curiosity, the ability to communicate effectively, and critical
thinking skills. This work will guide further studies with SQA practitioners,
by considering contextual factors and providing some implications for research
and practice.
"
429,"  The total energy cost of computing activities is steadily increasing and
projections indicate that it will be one of the dominant global energy
consumers in the coming decades. However, perhaps due to its relative youth,
the video game sector has not yet developed the same level of environmental
awareness as other computing technologies despite the estimated three billion
regular video game players in the world. This work evaluates the energy
consumption of the most widely used industry-scale video game engines: Unity
and Unreal Engine. Specifically, our work uses three scenarios representing
relevant aspects of video games (Physics, Statics Meshes, and Dynamic Meshes)
to compare the energy consumption of the engines. The aim is to determine the
influence of using each of the two engines on energy consumption. Our research
has confirmed significant differences in the energy consumption of video game
engines: 351% in Physics in favor of Unity, 17% in Statics Meshes in favor of
Unity, and 26% in Dynamic Meshes in favor of Unreal Engine. These results
represent an opportunity for worldwide potential savings of at least 51 TWh per
year, equivalent to the annual consumption of nearly 13 million European
households, that might encourage a new branch of research on energy-efficient
video game engines.
"
430,"  The increasing adoption of WebAssembly (Wasm) for performance-critical and
security-sensitive tasks drives the demand for WebAssembly program
comprehension and reverse engineering. Recent studies have introduced machine
learning (ML)-based WebAssembly reverse engineering tools. Yet, the
generalization of task-specific ML solutions remains challenging, because their
effectiveness hinges on the availability of an ample supply of high-quality
task-specific labeled data. Moreover, previous works overlook the high-level
semantics present in source code and its documentation. Acknowledging the
abundance of available source code with documentation, which can be compiled
into WebAssembly, we propose to learn representations of them concurrently and
harness their mutual relationships for effective WebAssembly reverse
engineering.
  In this paper, we present WasmRev, the first multi-modal pre-trained language
model for WebAssembly reverse engineering. WasmRev is pre-trained using
self-supervised learning on a large-scale multi-modal corpus encompassing
source code, code documentation and the compiled WebAssembly, without requiring
labeled data. WasmRev incorporates three tailored multi-modal pre-training
tasks to capture various characteristics of WebAssembly and cross-modal
relationships. WasmRev is only trained once to produce general-purpose
representations that can broadly support WebAssembly reverse engineering tasks
through few-shot fine-tuning with much less labeled data, improving data
efficiency. We fine-tune WasmRev onto three important reverse engineering
tasks: type recovery, function purpose identification and WebAssembly
summarization. Our results show that WasmRev pre-trained on the corpus of
multi-modal samples establishes a robust foundation for these tasks, achieving
high task accuracy and outperforming the state-of-the-art ML methods for
WebAssembly reverse engineering.
"
431,"  We consider a three-stroke engine in the microscopic regime, where the
working body of the engine is composed of a two-level system. The working body
of the engine aims to withdraw heat from the hot heat bath, generate work, and
discharge the surplus heat into the cold heat bath through the successive
execution of three strokes. In this process, the interaction of the working
body with the heat baths is assumed to be energy-conserving and thus can be
described by thermal operations. While earlier studies analyzed the optimal
performance of this engine when the working body could be transformed by any
arbitrary thermal operation, we present closed expressions for the maximum work
produced by the engine and the maximum efficiency of the engine when only a
restricted class of thermal operations can be implemented on the working body.
Furthermore, we explore the engine's optimal performance under two well-studied
classes of restrictions: thermal operations realized via Jaynes-Cummings
interaction and thermal operations realizable with finite-sized heat baths.
Therefore, on one hand, our results are general, as they reproduce the optimal
performance achieved when any arbitrary thermal operation can be implemented on
the working body once the restriction is relaxed. On the other hand, our
results allow us to determine the engine's maximum work production and
efficiency in a more realistic scenario, where only a restricted class of
thermal operations are possible, thereby bringing our findings closer to
experimental feasibility.
"
432,"  Prompt engineering is critical for effective interaction with large language
models (LLMs) such as ChatGPT. However, efforts to teach this skill to students
have been limited. This study designed and implemented a prompt engineering
intervention, examining its influence on undergraduate students' AI
self-efficacy, AI knowledge, and proficiency in creating effective prompts. The
intervention involved 27 students who participated in a 100-minute workshop
conducted during their history course at a university in Hong Kong. During the
workshop, students were introduced to prompt engineering strategies, which they
applied to plan the course's final essay task. Multiple data sources were
collected, including students' responses to pre- and post-workshop
questionnaires, pre- and post-workshop prompt libraries, and written
reflections. The study's findings revealed that students demonstrated a higher
level of AI self-efficacy, an enhanced understanding of AI concepts, and
improved prompt engineering skills because of the intervention. These findings
have implications for AI literacy education, as they highlight the importance
of prompt engineering training for specific higher education use cases. This is
a significant shift from students haphazardly and intuitively learning to
engineer prompts. Through prompt engineering education, educators can faciitate
students' effective navigation and leverage of LLMs to support their
coursework.
"
433,"  The aviation industry is rapidly evolving, driven by advancements in
technology. Turbofan engines used in commercial aerospace are very complex
systems. The majority of turbofan engine components are susceptible to
degradation over the life of their operation. Turbofan engine degradation has
an impact to engine performance, operability, and reliability. Predicting
accurate remaining useful life (RUL) of a commercial turbofan engine based on a
variety of complex sensor data is of paramount importance for the safety of the
passengers, safety of flight, and for cost effective operations. That is why it
is essential for turbofan engines to be monitored, controlled, and maintained.
RUL predictions can either come from model-based or data-based approaches. The
model-based approach can be very expensive due to the complexity of the
mathematical models and the deep expertise that is required in the domain of
physical systems. The data-based approach is more frequently used nowadays
thanks to the high computational complexity of computers, the advancements in
Machine Learning (ML) models, and advancements in sensors. This paper is going
to be focused on Bi-Directional Long Short-Term Memory (BLSTM) models but will
also provide a benchmark of several RUL prediction databased models. The
proposed RUL prediction models are going to be evaluated based on engine
failure prediction benchmark dataset Commercial Modular Aero-Propulsion System
Simulation (CMAPSS). The CMAPSS dataset is from NASA which contains turbofan
engine run to failure events.
"
434,"  An equilibrium reversible cycle with a certain engine to transduce the energy
of any chemical reaction into mechanical energy is proposed. The efficiency for
chemical energy transduction is also defined so as to be compared with Carnot
efficiency. Relevance to the study of protein motors is discussed. KEYWORDS:
Chemical thermodynamics, Engine, Efficiency, Molecular machine.
"
435,"  A framework for virtual reality of engineering objects has been developed.
This framework may simulate different equipment related to virtual reality.
Framework supports 6D dynamics, ordinary differential equations, finite
formulas, vector and matrix operations. The framework also supports embedding
of external software.
"
436,"  This paper investigates the usefulness of PSF in software engineering and
reengineering. PSF is based on ACP (Algebra of Communicating Processes) and as
some architectural description languages are based on process algebra, we
investigate whether PSF can be used at the software architecture level, but we
also use PSF at lower abstract levels. As a case study we reengineer the
compiler from the Toolkit of PSF.
"
437,"  This paper presents ongoing research on the application of PSF in the field
of software engineering and reengineering. We build a new implementation for
the simulator of the PSF Toolkit starting from the specification in PSF of the
architecture of a simple simulator and extend it with features to obtain the
architecture of a full simulator. We apply refining and constraining techniques
on the specification of the architecture to obtain a specification low enough
to build an implementation from.
"
438,"  We describe the design of an integrated development environment (IDE) for
PSF. In the software engineering process we used process algebra in the form of
PSF for the specification of the architecture of the IDE. This specification is
refined to a PSF specification of the IDE system as a ToolBus application, by
applying vertical and horizontal implementation techniques. We implemented the
various tools as specified and connected them with a ToolBus script extracted
from the system specification.
"
439,"  We derive the exact equality, referred to as the fluctuation relation for
heat engines (FRHE), that relates statistics of heat extracted from one of the
two heat baths and the work per one cycle of a heat engine operation. Carnot's
inequality of classical thermodynamics follows as a direct consequence of the
FRHE.
"
440,"  The article contains calculation of the efficiency of the ideal
thermomagnetic engine whose working body is ferromagnetic has been suggested.
Suggested method being applicable to any heat engine operating on the basis of
structural phase transitions in solid bodies.
"
441,"  In this paper we study the relationship between query and search engine by
exploring the adaptive properties for doubleton as a space of event based on a
simple search engine. We employ set theory for defining doubleton and generate
some properties.
"
442,"  In this paper we study the relationship between query and search engine by
exploring the selective properties based on a simple search engine. We used the
set theory and utilized the words and terms for defining singleton and
doubleton in the event spaces and then provided their implementation for
proving the existence of the shadow of micro-cluster.
"
443,"  Nematic elastomers contract along their director when heated or illuminated
(in the case of photoelastomers). We present a conceptual design for an
elastomer-based engine to extract mechanical work from heat or light. The
material parameters and the geometry of such an engine are explored, and it is
shown that its efficiency can go up to 20%.
"
444,"  We have found the optimal condition of the work performed by the quantum
Szilard engine (SZE) containing multi-particles. Usually the optimal work of a
cyclic engine is achieved when the whole thermodynamic process is reversible.
Although the quantum SZE inherently contains an irreversible process, we can
still define effectively reversible protocol based upon the force of
time-forward and time-backward processes.
"
445,"  Developing an error-free spreadsheet has been a problem since the beginning
of end-user computing. In this paper, we present a methodology that separates
the modeling from the implementation. Using proven techniques from Information
Systems and Software Engineering, we present strict, but simple, rules
governing the implementation from the model. The resulting spreadsheet should
be easier to understand, audit and maintain.
"
446,"  Logic not only helps to solve complicated and safety-critical problems, but
also disciplines the mind and helps to develop abstract thinking, which is very
important for any area of Engineering. In this technical report, we present an
overview of common challenges in teaching of formal methods and discuss our
experiences from the course Applied Logic in Engineering. This course was
taught at TU Munich, Germany, in Winter Semester 2012/2013.
"
447,"  As software systems are becoming larger, more complex, and dependent on many
third-party software components, the chances of their failure are increasing
further. This calls for intense efforts to improve the quality of testing in
the software development process.
"
448,"  We use the invariant-based inverse engineering subject to the quasiadiabatic
condition to produce robust and high fidelity coherent superposition of quantum
states. The inverse engineering provides shortcuts to the desired quantum-state
evolution while the quasiadiabaticity provides robustness with respect to
errors. We derive simple pulses with low areas which are robust with respect to
pulse area and detuning.
"
449,"  A Chair of Software Engineering existed at ETH Zurich, the Swiss Federal
Insti-tute of Technology, from 1 October 2001 to 31 January 2016, under my
leader-ship. Our work, summarized here, covered a wide range of theoretical and
practi-cal topics, with object technology in the Eiffel method as the unifying
thread .
"
450,"  We allow database user to script a parallel relational database engine with a
procedural language. Procedural language code is executed as a user defined
relational query operator called transducer. Transducer is tightly integrated
with relation engine, including query optimizer, query executor and can be
executed in parallel like other query operators. With transducer, we can
efficiently execute queries that are very difficult to express in SQL. As
example, we show how to run time series and graph queries, etc, within a
parallel relational database.
"
451,"  Equipping a spacecraft with multiple solar-powered electric engines (of the
same or different types) compounds the task of optimal trajectory design due to
presence of both real-valued inputs (power input to each engine in addition to
the direction of thrust vector) and discrete variables (number of active
engines). Each engine can be switched on/off independently and ""optimal""
operating power of each engine depends on the available solar power, which
depends on the distance from the Sun. Application of the Composite Smooth
Control (CSC) framework to a heliocentric fuel-optimal trajectory optimization
from the Earth to the comet 67P/Churyumov-Gerasimenko is demonstrated, which
presents a new approach to deal with multiple-engine problems. Operation of
engine clusters with 4, 6, 10 and even 20 engines of the same type can be
optimized. Moreover, engine clusters with different/mixed electric engines are
considered with either 2, 3 or 4 different types of engines. Remarkably, the
CSC framework allows us 1) to reduce the original multi-point boundary-value
problem to a two-point boundary-value problem (TPBVP), and 2) to solve the
resulting TPBVPs using a single-shooting solution scheme and with a random
initialization of the missing costates. While the approach we present is a
continuous neighbor of the discontinuous extremals, we show that the
discontinuous necessary conditions are satisfied in the asymptotic limit. We
believe this is the first indirect method to accommodate a multi-mode control
of this level of complexity with realistic engine performance curves. The
results are interesting and promising for dealing with a large family of such
challenging multi-mode optimal control problems.
"
452,"  In 1975, Courzon and Ahlborn studied a Carnot engine with thermal losses and
got an expression for its efficiency that described better the performance of
actual heat machines than the traditional result due to Carnot. In their
original derivation, time appears explicitly and this is disappointing in the
framework of classical thermodynamics. In this note a derivation is given
without any explicit reference to time.
"
453,"  The present volume contains the proceedings of the Fourth International
Workshop on Engineering Safety and Security Systems (ESSS'15). The workshop was
held in Oslo, Norway, on June 22nd, 2015, as a satellite event of the 20th
International Symposium on Formal Methods (FM'15).
"
454,"  The aim of this book is to introduce the language XMF. This is done by
defining the language, providing some examples of applications that can be
written directly in the XOCL language that comes with XMF, and then by showing
how XMF can be used for language engineering. The main focus of this book is on
language engineering by example.
"
455,"  The work provides an overview on some recent advances in the area of quantum
thermodynamics and quantum heat engines. A particular emphasis is put on the
possibility of constructing finite time quantum cycles and adiabatic shortcuts.
We discuss in details the particular quantum heat engines operating with a
multiferroic working substance.
"
456,"  Optimal engine operation during a transient driving cycle is the key to
achieving greater fuel economy, engine efficiency, and reduced emissions. In
order to achieve continuously optimal engine operation, engine calibration
methods use a combination of static correlations obtained from dynamometer
tests for steady-state operating points and road and/or track performance data.
As the parameter space of control variables, design variable constraints, and
objective functions increases, the cost and duration for optimal calibration
become prohibitively large. In order to reduce the number of dynamometer tests
required for calibrating modern engines, a large-scale simulation-driven
machine learning approach is presented in this work. A parallel, fast, robust,
physics-based reduced-order engine simulator is used to obtain performance and
emission characteristics of engines over a wide range of control parameters
under various transient driving conditions (drive cycles). We scale the
simulation up to 3,906 nodes of the Theta supercomputer at the Argonne
Leadership Computing Facility to generate data required to train a machine
learning model. The trained model is then used to predict various engine
parameters of interest. Our results show that a deep-neural-network-based
surrogate model achieves high accuracy for various engine parameters such as
exhaust temperature, exhaust pressure, nitric oxide, and engine torque. Once
trained, the deep-neural-network-based surrogate model is fast for inference:
it requires about 16 micro sec for predicting the engine performance and
emissions for a single design configuration compared with about 0.5 s per
configuration with the engine simulator. Moreover, we demonstrate that transfer
learning and retraining can be leveraged to incrementally retrain the surrogate
model to cope with new configurations that fall outside the training data
space.
"
457,"  As IP / MPLS network service providers drive for improved network
efficiencies, traffic engineering is becoming increasingly important. In this
article we review the approaches for traffic engineering in IP / MPLS networks
and present the result of a study, which compares their performance in
operational networks
"
458,"  We report a methodology developed to quantitatively assess the
maintainability of Geant4 with respect to software engineering references. The
level of maintainability is determined by combining a set of metrics values
whose references are documented in literature.
"
459,"  The formulae relevant for the Linear Optics design of Synchrotrons are
derived systematically from first principles, a straightforward exercise in
Hamiltonian Dynamics. Equipped with these, the relevant ""Use Cases"" are then
captured for a streamlined approach. This will enable professionals -- Software
Engineers -- to efficiently prototype & architect a CAD Tool for ditto;
something which has been available to Mechanical Engineers since the mid-1960s.
"
460,"  A crucial step in the operation of the Szilard engine is the isothermal
expansion of a single particle system. This expansion, seemingly a natural
consequence, is unable to proceed when the piston is considered appropriately
to be a thermal system subject to fluctuations in energy at a constant
temperature. The Szilard engine is thus unable to complete its cycle and the
effort to locate the mysterious missing entropy of turns out to be superfluous.
"
461,"  We describe how electromagnetically induced transparency may be used to
construct a non-traditional near-ideal quantum heat engine as constrained by
the Second Law. The engine is pumped by a thermal reservoir that may be either
hotter or colder than that of an exhaust reservoir, and also by a monochromatic
laser. As output, it produces a bright narrow emission at line center of an
otherwise absorbing transition.
"
462,"  We report on a summer school course on Software Engineering for
Sustainability (SE4S). We provide a detailed blueprint of the contents taught
and its evaluation with the instruments that were used.
"
463,"  The article presents an overview of current specialized ontology engineering
tools, as well as texts' annotation tools based on ontologies. The main
functions and features of these tools, their advantages and disadvantages are
discussed. A systematic comparative analysis of means for engineering
ontologies is presented.
"
464,"  Industrial applications involving formal methods are still exceptions to the
general rule. Lack of understanding, employees without proper education,
difficulty to integrate existing development cycles, no explicit requirement
from the market, etc. are explanations often heard for not being more formal.
This article reports some experience about a game changer that is going to
seamlessly integrate formal methods into safety critical systems engineering.
"
465,"  This paper describes an investigation into value-based software engineering
and proposes a comprehensive value taxonomy with an interpretation of design
feature implications. The value taxonomy is used to assess the design of
Covid19 symptom tracker applications.
"
466,"  This paper presents concepts and methods to support preparing software and
system releases to production.
  Keywords: Operational Readiness Review, ORR, IT Services, IT Operations,
ITIL, Process Engineering, Reliability, Availability, Software Architecture,
Cloud Computing, Networking, Site Reliability Engineering, DevOps, Agile
Methods, Quality, Defect Prevention, Release Management, Risk Management, Data
Visualization, Organizational Change Management.
"
467,"  The 44th International Conference on Software Engineering (ICSE 2022) was
held in person from May 22 to May 27, 2022 in Pittsburgh, PA, USA. Here, we
summarize themes of research and the direction of research in the field of
software engineering and testing that we observed at the conference.
"
468,"  This article provides a personal perspective on research in Automated Quantum
Software Engineering (AQSE). It elucidates the motivation to research AQSE
(why?), a precise description of such a framework (what?), and reflections on
components that are required for implementing it (how?).
"
469,"  The activities of requirements engineering and software testing are
intrinsically related to each other, as these two areas are linked when seeking
to specify and also ensure the expectations of a software product, with quality
and on time. This systematic mapping study aims to verify how requirements and
testing are being addressed together in the educational context.
"
470,"  A neural solver and differentiable simulation of the quantum transmitting
boundary model is presented for the inverse quantum transport problem. The
neural solver is used to engineer continuous transmission properties and the
differentiable simulation is used to engineer current-voltage characteristics.
"
471,"  This position paper for an invited talk on the ""Future of eScience"" discusses
the Research Software Engineering Movement and where it might be in 2030.
Because of the authors' experiences, it is aimed globally but with examples
that focus on the United States and United Kingdom.
"
472,"  This paper describes the historical background that led to the development of
the innovative Software through Pictures multi-user development environment,
and the principles for its integration with other software products to create a
software engineering environment covering multiple tasks in the software
development lifecycle.
"
473,"  Human-Centric Software Engineering (HCSE) refers to the software engineering
(SE) processes that put human needs and requirements as core practice
throughout the software development life cycle. A large majority of software
projects fail to cater to human needs and consequently run into budget,
delivery, and usability issues. To support human-centric software engineering
practices, it is important for universities to train their students on how to
consider human needs. But what topics from HCSE should be provided in the
undergraduate curriculum? Curriculum guidelines for software engineering are
available, however do not represent update to date considerations for
human-factors. To address this issue, this paper presents a scoping review to
identify the topics and curriculum approaches suitable for teaching HCSE to
undergraduate software engineering students. The scoping review was conducted
according to the protocol by PRISMA-ScR (Preferred Reporting Items for
Systematic reviews and Meta-Analyses extension for Scoping Reviews). Through
PRISMA-ScR, a total of 36 conference or journal papers were identified as
viable for analysis,with 5 common themes found that describe topics and
curriculum approaches relevant for teaching software engineering. Using the
outcomes of the scoping review, this paper also analyses the Australian
Software Engineering curriculum to understand the extent at which human centred
software engineering topics are scaffolded into course structures. This paper
concludes by suggesting topic scaffolding for the undergraduate curriculum that
aligns with the software engineering process. Overall, by providing a focus on
HCSE topics and curriculum approaches, the education of HCSE among current and
future software engineers can increase, leading to long-term impact on the
success of software projects for all stakeholders.
"
474,"  Large Language Models bear the promise of significant acceleration of key
Knowledge Graph and Ontology Engineering tasks, including ontology modeling,
extension, modification, population, alignment, as well as entity
disambiguation. We lay out LLM-based Knowledge Graph and Ontology Engineering
as a new and coming area of research, and argue that modular approaches to
ontologies will be of central importance.
"
475,"  The thermodynamics of the Curzon-Ahlborn engine, which is a prototype of
endoreversible engines, is elucidated. In particular, their criterion for
adiabatic equilibration is revised. The so-called irreversibility of
endoreversible engines arises from the selection of the coldest reservoir for
heat rejection. Rather, if the reservoirs are allowed to come into thermal and
mechanical contact, a mean value results which optimizes the work output and
heat uptake, and is entirely reversible. The Carnot efficiency cannot be beaten
because nothing is as cold as the coldest reservoir.
"
476,"  A simple model of the two-state ratchet type is proposed for molecular
chemical engines that convert chemical free energy into mechanical work and
vice versa. The engine works by catalyzing a chemical reaction and turning a
rotor. Analytical expressions are obtained for the dependences of rotation and
reaction rates on the concentrations of reactant and product molecules, from
which the performance of the engine is analyzed. In particular, the efficiency
of energy transduction is discussed in some detail.
"
477,"  Existing procedures for model validation have been deemed inadequate for many
engineering systems. The reason of this inadequacy is due to the high degree of
complexity of the mechanisms that govern these systems. It is proposed in this
paper to shift the attention from modeling the engineering system itself to
modeling the uncertainty that underlies its behavior. A mathematical framework
for modeling the uncertainty in complex engineering systems is developed. This
framework uses the results of computational learning theory. It is based on the
premise that a system model is a learning machine.
"
478,"  The FermaT transformation system, based on research carried out over the last
sixteen years at Durham University, De Montfort University and Software
Migrations Ltd., is an industrial-strength formal transformation engine with
many applications in program comprehension and language migration. This paper
is a case study which uses automated plus manually-directed transformations and
abstractions to convert an IBM 370 Assembler code program into a very
high-level abstract specification.
"
479,"  This paper presents an approach to enhance search engines with information
about word senses available in WordNet. The approach exploits information about
the conceptual relations within the lexical-semantic net. In the wrapper for
search engines presented, WordNet information is used to specify user's request
or to classify the results of a publicly available web search engine, like
google, yahoo, etc.
"
480,"  In this paper we present a number of measures that compare rankings of search
engine results. We apply these measures to five queries that were monitored
daily for two periods of about 21 days each. Rankings of the different search
engines (Google, Yahoo and Teoma for text searches and Google, Yahoo and
Picsearch for image searches) are compared on a daily basis, in addition to
longitudinal comparisons of the same engine for the same query over time. The
results and rankings of the two periods are compared as well.
"
481,"  The Hellenic Open University has embarked on a large-scale effort to enhance
its textbook-based material with content that demonstrably supports the basic
tenets of distance learning. The challenge is to set up a framework that allows
for the production-level creation, distribution and consumption of content, and
at the same time, evaluate the effort in terms of technological, educational
and organizational knowledge gained. This paper presents a model of the
educational process that is used as a development backbone and argues about its
conceptual and technical practicality at large.
"
482,"  We present a computational model for Szilard's engine and the information
discarding process. Taking advantage of a fact that the one is essentially the
reversed cycle of the other, we can discuss the both by employing the same
model. Through numerical simulations we calculate the work extracted by the
engine and the heat generation in the information discarding process. It is
found that these quantities depend on some realistic ingredients, which means
that the work done by the engine is no longer canceled by the heat generation
in the information erasure.
"
483,"  We study the energestics of a thermal motor driven by temperature
differences, which consists of Brownian particles moving in a sawtooth
potential with an external load where the viscous medium is alternately in
contact with hot and cold heat reservoir. The motor can work as a heat engine
or a refrigerator under different conditions. The heat flow via both potential
and kinetic energy are considered. The former is reversible when the engine
works quasistatically and the latter is always irreversible. The efficiency of
the heat engine (Coefficient Of Performance (COP) of a refrigerator) can never
approach Carnot efficiency (COP).
"
484,"  By using a laser and maser in tandem, it is possible to obtain laser action
in the hot exhaust gases involved in heat engine operation. Such a ""quantum
afterburner"" involves the internal quantum states of working gas atoms or
molecules as well as the techniques of cavity quantum electrodynamics and is
therefore in the domain of quantum thermodynamics. As an example, it is shown
that Otto cycle engine performance can be improved beyond that of the ""ideal""
Otto heat engine.
"
485,"  With a class of quantum heat engines which consists of two-energy-eigenstate
systems undergoing, respectively, quantum adiabatic processes and energy
exchanges with heat baths at different stages of a cycle, we are able to
clarify some important aspects of the second law of thermodynamics. The quantum
heat engines also offer a practical way, as an alternative to Szilard's engine,
to physically realise Maxwell's daemon. While respecting the second law on the
average, they are also capable of extracting more work from the heat baths than
is otherwise possible in thermal equilibrium.
"
486,"  We study a class of cyclic Brownian heat engines in the framework of
finite-time thermodynamics. For infinitely long cycle times, the engine works
at the Carnot efficiency limit producing, however, zero power. For the
efficiency at maximum power, we find a universal expression, different from the
endoreversible Curzon-Ahlborn efficiency. Our results are illustrated with a
simple one-dimensional engine working in and with a time-dependent harmonic
potential.
"
487,"  Before 2004, nearly all GRB afterglow data could be understood in the context
of the external shocks model. This situation has changed in the past two years,
when it became clear that some afterglow components should be attributed to the
activity of the central engine; i.e., the {\it central engine afterglow}. We
review here the afterglow emission that is directly related to the GRB central
engine. Such an interpretation proposed by Katz, Piran & Sari, peculiar in
pre-{\it Swift} era, has become generally accepted now.
"
488,"  It is noted that X-ray tails (XRTs) of short, hard $\gamma$-ray bursts (SHBs)
are similar to X-ray flashes (XRFs). We suggest a universal central engine
hypothesis, as a way of accounting for this curiosity, in which SHBs differ
from long $\gamma$-ray bursts (GRBs) in prompt emission because of the
differences in the host star and attendant differences in the environment they
present to the compact central engine (as opposed to differences in the central
engine itself). Observational constraints and implications are discussed,
especially for confirming putative detections of gravitational waves from
merging compact objects.
"
489,"  We demonstrate the possibility to build a thermoelectric engine using a one
dimensional gas of molecules with unequal masses and hard-point interaction.
Most importantly, we show that the efficiency of this engine is determined by a
new parameter YT which is different from the well known figure of merit ZT.
Even though the efficiency of this particular model is low, our results shed
new light on the problem and open the possibility to build efficient
thermoelectric engines.
"
490,"  In previous work we described how the process algebra based language PSF can
be used in software engineering, using the ToolBus, a coordination architecture
also based on process algebra, as implementation model. We also described this
software development process more formally by presenting the tools we use in
this process in a CASE setting, leading to the PSF-ToolBus software engineering
environment. In this article we summarize that work and describe a similar
software development process for implementation of software systems using a
client / server model and present this in a CASE setting as well.
"
491,"  The work presented in this paper is related to the area of Situational Method
Engineering (SME) which focuses on project-specific method construction. We
propose a faceted framework to understand and classify issues in system
development SME. The framework identifies four different but complementary
viewpoints. Each view allows us to capture a particular aspect of situational
methods. Inter-relationships between these views show how they influence each
other. In order to study, understand and classify a particular view of SME in
its diversity, we associate a set of facets with each view. As a facet allows
an in-depth description of one specific aspect of SME, the views show the
variety and diversity of these aspects.
"
492,"  We provide an intuitive platform for engineering exciton transfer dynamics.
We show that careful consideration of the spectral density, which describes the
system-bath interaction, leads to opportunities to engineer the transfer of an
exciton. Since excitons in nanostructures are proposed for use in quantum
information processing and artificial photosynthetic designs, our approach
paves the way for engineering a wide range of desired exciton dynamics. We
carefully describe the validity of the model and use experimentally relevant
material parameters to show counter-intuitive examples of a directed exciton
transfer in a linear chain of quantum dots.
"
493,"  Biology-derived algorithms are an important part of computational sciences,
which are essential to many scientific disciplines and engineering
applications. Many computational methods are derived from or based on the
analogy to natural evolution and biological activities, and these biologically
inspired computations include genetic algorithms, neural networks, cellular
automata, and other algorithms.
"
494,"  Component Based Approach has been introduced in core engineering discipline
long back but the introduction to component based concept in software
perspective is recently developed by Object Management Group. Its benefits from
the re-usability point of view is enormous. The intertwining relationship of
domain engineering with component based software engineering is analyzed. The
object oriented approach and its basic difference with component approach is of
great concern. The present study highlights the life-cycle, cost effectiveness
and the basic study of component based software from application perspective.
"
495,"  We present a theoretical and numerical analysis of a quantum system that is
capable of functioning as a heat engine. This system could be realized
experimentally using cold bosonic atoms confined to a double well potential
that is created by splitting a harmonic trap with a focused laser. The system
shows thermalization, and can model a reversible heat engine cycle. This is the
first demonstration of the operation of a heat engine with a finite quantum
heat bath.
"
496,"  Feedback can be utilized to convert information into useful work, making it
an effective tool for increasing the performance of thermodynamic engines.
Using feedback reversibility as a guiding principle, we devise a method for
designing optimal feedback protocols for thermodynamic engines that extract all
the information gained during feedback as work. Our method is based on the
observation that in a feedback-reversible process the measurement and the
time-reversal of the ensuing protocol both prepare the system in the same
probabilistic state. We illustrate the utility of our method with two examples
of the multi-particle Szilard engine.
"
497,"  We investigate the rectification of thermal fluctuations in a mesoscopic
on-chip heat engine. The engine consists of a hot chaotic cavity capacitively
coupled to a cold cavity which rectifies the excess noise and generates a
directed current. The fluctuation-induced directed current depends on the
energy asymmetry of the transmissions of the contacts of the cold cavity to the
leads and is proportional to the temperature difference. We discuss the maximal
power output of the heat engine and its efficiency.
"
498,"  In the civilian aviation field, the radar detection of hazardous weather
phenomena (winds) is very important. This detection will allow the avoidance of
these phenomena and consequently will enhance the safety of flights. In this
work, we have used the wavelets method to estimate the mean velocity of winds.
The results showed that the application of this method is promising compared
with the classical estimators (pulse-pair, Fourier).
"
499,"  This paper discusses the application of agile software development methods in
software-based research environments.
"
500,"  We propose an experimental scheme to realize a nano heat engine with a single
ion. An Otto cycle may be implemented by confining the ion in a linear Paul
trap with tapered geometry and coupling it to engineered laser reservoirs. The
quantum efficiency at maximum power is analytically determined in various
regimes. Moreover, Monte Carlo simulations of the engine are performed that
demonstrate its feasibility and its ability to operate at maximum efficiency of
30% under realistic conditions.
"